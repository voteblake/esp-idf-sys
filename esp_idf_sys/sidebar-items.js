initSidebarItems({"constant":[["AES_128_KEY_BYTES",""],["AES_192_KEY_BYTES",""],["AES_256_KEY_BYTES",""],["AES_BLOCK_BYTES",""],["AES_BLOCK_WORDS",""],["AF_INET",""],["AF_INET6",""],["AF_UNSPEC",""],["AM_ARC",""],["AM_DIR",""],["AM_HID",""],["AM_RDO",""],["AM_SYS",""],["ANT_SEL0_IDX",""],["ANT_SEL1_IDX",""],["ANT_SEL2_IDX",""],["ANT_SEL3_IDX",""],["ANT_SEL4_IDX",""],["ANT_SEL5_IDX",""],["ANT_SEL6_IDX",""],["ANT_SEL7_IDX",""],["APB_CLK_FREQ",""],["APB_CLK_FREQ_ROM",""],["API_MSG_DEBUG",""],["ARG_ELIMIT",""],["ARG_ELONGOPT",""],["ARG_EMALLOC",""],["ARG_EMISSARG",""],["ARG_ENOMATCH",""],["ARG_HASOPTVALUE",""],["ARG_HASVALUE",""],["ARG_MAX",""],["ARG_REX_ICASE",""],["ARG_TERMINATOR",""],["ARP_MAXAGE",""],["ARP_QUEUEING",""],["ARP_QUEUE_LEN",""],["ARP_TABLE_SIZE",""],["ASSIST_DEBUG_C0RE_0_DEBUG_MODE_REG",""],["ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION_REG",""],["ASSIST_DEBUG_CLR_LOG_MEM_FULL_FLAG_S",""],["ASSIST_DEBUG_CLR_LOG_MEM_FULL_FLAG_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_REG",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_REG",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_RD_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_WR_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_REG",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_REG",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_RD_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_WR_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_PC",""],["ASSIST_DEBUG_CORE_0_AREA_PC_REG",""],["ASSIST_DEBUG_CORE_0_AREA_PC_S",""],["ASSIST_DEBUG_CORE_0_AREA_PC_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_REG",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_REG",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_RD_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_0_WR_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_REG",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_REG",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_RD_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_CLR_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_CLR_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_ENA_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_ENA_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RAW_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RAW_V",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RLS_S",""],["ASSIST_DEBUG_CORE_0_AREA_PIF_1_WR_RLS_V",""],["ASSIST_DEBUG_CORE_0_AREA_SP",""],["ASSIST_DEBUG_CORE_0_AREA_SP_REG",""],["ASSIST_DEBUG_CORE_0_AREA_SP_S",""],["ASSIST_DEBUG_CORE_0_AREA_SP_V",""],["ASSIST_DEBUG_CORE_0_DEBUG_MODE_S",""],["ASSIST_DEBUG_CORE_0_DEBUG_MODE_V",""],["ASSIST_DEBUG_CORE_0_DEBUG_MODULE_ACTIVE_S",""],["ASSIST_DEBUG_CORE_0_DEBUG_MODULE_ACTIVE_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_REG",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_REG",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_REG",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_0_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_ADDR_1_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_0_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_BYTEEN_1_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_0_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_PC_1_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_0_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_0_V",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_1_S",""],["ASSIST_DEBUG_CORE_0_DRAM0_RECORDING_WR_1_V",""],["ASSIST_DEBUG_CORE_0_INTR_CLR_REG",""],["ASSIST_DEBUG_CORE_0_INTR_ENA_REG",""],["ASSIST_DEBUG_CORE_0_INTR_RAW_REG",""],["ASSIST_DEBUG_CORE_0_INTR_RLS_REG",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_REG",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_REG",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_0_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_ADDR_1_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_0_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_0_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_1_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_LOADSTORE_1_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_0_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_0_V",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_1_S",""],["ASSIST_DEBUG_CORE_0_IRAM0_RECORDING_WR_1_V",""],["ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC",""],["ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC_S",""],["ASSIST_DEBUG_CORE_0_LASTPC_BEFORE_EXC_V",""],["ASSIST_DEBUG_CORE_0_RCD_EN_REG",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGEN_S",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGEN_V",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_REG",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_S",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_V",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_S",""],["ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_V",""],["ASSIST_DEBUG_CORE_0_RCD_RECORDEN_S",""],["ASSIST_DEBUG_CORE_0_RCD_RECORDEN_V",""],["ASSIST_DEBUG_CORE_0_SP_MAX",""],["ASSIST_DEBUG_CORE_0_SP_MAX_REG",""],["ASSIST_DEBUG_CORE_0_SP_MAX_S",""],["ASSIST_DEBUG_CORE_0_SP_MAX_V",""],["ASSIST_DEBUG_CORE_0_SP_MIN",""],["ASSIST_DEBUG_CORE_0_SP_MIN_REG",""],["ASSIST_DEBUG_CORE_0_SP_MIN_S",""],["ASSIST_DEBUG_CORE_0_SP_MIN_V",""],["ASSIST_DEBUG_CORE_0_SP_PC",""],["ASSIST_DEBUG_CORE_0_SP_PC_REG",""],["ASSIST_DEBUG_CORE_0_SP_PC_S",""],["ASSIST_DEBUG_CORE_0_SP_PC_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_CLR_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_CLR_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_ENA_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_ENA_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RAW_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RAW_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RLS_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MAX_RLS_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_CLR_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_CLR_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_ENA_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_ENA_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RAW_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RAW_V",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RLS_S",""],["ASSIST_DEBUG_CORE_0_SP_SPILL_MIN_RLS_V",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_REG",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_REG",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_S",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_V",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_S",""],["ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_V",""],["ASSIST_DEBUG_DATE",""],["ASSIST_DEBUG_DATE_REG",""],["ASSIST_DEBUG_DATE_S",""],["ASSIST_DEBUG_DATE_V",""],["ASSIST_DEBUG_LOG_DATA_0",""],["ASSIST_DEBUG_LOG_DATA_0_REG",""],["ASSIST_DEBUG_LOG_DATA_0_S",""],["ASSIST_DEBUG_LOG_DATA_0_V",""],["ASSIST_DEBUG_LOG_DATA_MASK_REG",""],["ASSIST_DEBUG_LOG_DATA_SIZE",""],["ASSIST_DEBUG_LOG_DATA_SIZE_S",""],["ASSIST_DEBUG_LOG_DATA_SIZE_V",""],["ASSIST_DEBUG_LOG_ENA",""],["ASSIST_DEBUG_LOG_ENA_S",""],["ASSIST_DEBUG_LOG_ENA_V",""],["ASSIST_DEBUG_LOG_MAX",""],["ASSIST_DEBUG_LOG_MAX_REG",""],["ASSIST_DEBUG_LOG_MAX_S",""],["ASSIST_DEBUG_LOG_MAX_V",""],["ASSIST_DEBUG_LOG_MEM_END",""],["ASSIST_DEBUG_LOG_MEM_END_REG",""],["ASSIST_DEBUG_LOG_MEM_END_S",""],["ASSIST_DEBUG_LOG_MEM_END_V",""],["ASSIST_DEBUG_LOG_MEM_FULL_FLAG_REG",""],["ASSIST_DEBUG_LOG_MEM_FULL_FLAG_S",""],["ASSIST_DEBUG_LOG_MEM_FULL_FLAG_V",""],["ASSIST_DEBUG_LOG_MEM_LOOP_ENABLE_S",""],["ASSIST_DEBUG_LOG_MEM_LOOP_ENABLE_V",""],["ASSIST_DEBUG_LOG_MEM_START",""],["ASSIST_DEBUG_LOG_MEM_START_REG",""],["ASSIST_DEBUG_LOG_MEM_START_S",""],["ASSIST_DEBUG_LOG_MEM_START_V",""],["ASSIST_DEBUG_LOG_MEM_WRITING_ADDR",""],["ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_REG",""],["ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_S",""],["ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_V",""],["ASSIST_DEBUG_LOG_MIN",""],["ASSIST_DEBUG_LOG_MIN_REG",""],["ASSIST_DEBUG_LOG_MIN_S",""],["ASSIST_DEBUG_LOG_MIN_V",""],["ASSIST_DEBUG_LOG_MODE",""],["ASSIST_DEBUG_LOG_MODE_S",""],["ASSIST_DEBUG_LOG_MODE_V",""],["ASSIST_DEBUG_LOG_SETTING_REG",""],["ATA_GET_MODEL",""],["ATA_GET_REV",""],["ATA_GET_SN",""],["AT_EACCESS",""],["AT_FDCWD",""],["AT_REMOVEDIR",""],["AT_SYMLINK_FOLLOW",""],["AT_SYMLINK_NOFOLLOW",""],["AUTOIP_DEBUG",""],["B0",""],["B1000000",""],["B110",""],["B115200",""],["B1152000",""],["B1200",""],["B134",""],["B150",""],["B1500000",""],["B1800",""],["B19200",""],["B200",""],["B2000000",""],["B230400",""],["B2400",""],["B2500000",""],["B300",""],["B3000000",""],["B3500000",""],["B38400",""],["B4000000",""],["B460800",""],["B4800",""],["B50",""],["B500000",""],["B57600",""],["B576000",""],["B600",""],["B75",""],["B921600",""],["B9600",""],["BB_DIAG0_IDX",""],["BB_DIAG10_IDX",""],["BB_DIAG11_IDX",""],["BB_DIAG12_IDX",""],["BB_DIAG13_IDX",""],["BB_DIAG14_IDX",""],["BB_DIAG15_IDX",""],["BB_DIAG16_IDX",""],["BB_DIAG17_IDX",""],["BB_DIAG18_IDX",""],["BB_DIAG19_IDX",""],["BB_DIAG1_IDX",""],["BB_DIAG2_IDX",""],["BB_DIAG3_IDX",""],["BB_DIAG4_IDX",""],["BB_DIAG5_IDX",""],["BB_DIAG6_IDX",""],["BB_DIAG7_IDX",""],["BB_DIAG8_IDX",""],["BB_DIAG9_IDX",""],["BC_BASE_MAX",""],["BC_DIM_MAX",""],["BC_SCALE_MAX",""],["BC_STRING_MAX",""],["BIG_ENDIAN",""],["BIT0",""],["BIT1",""],["BIT10",""],["BIT11",""],["BIT12",""],["BIT13",""],["BIT14",""],["BIT15",""],["BIT16",""],["BIT17",""],["BIT18",""],["BIT19",""],["BIT2",""],["BIT20",""],["BIT21",""],["BIT22",""],["BIT23",""],["BIT24",""],["BIT25",""],["BIT26",""],["BIT27",""],["BIT28",""],["BIT29",""],["BIT3",""],["BIT30",""],["BIT31",""],["BIT32",""],["BIT33",""],["BIT34",""],["BIT35",""],["BIT36",""],["BIT37",""],["BIT38",""],["BIT39",""],["BIT4",""],["BIT40",""],["BIT41",""],["BIT42",""],["BIT43",""],["BIT44",""],["BIT45",""],["BIT46",""],["BIT47",""],["BIT48",""],["BIT49",""],["BIT5",""],["BIT50",""],["BIT51",""],["BIT52",""],["BIT53",""],["BIT54",""],["BIT55",""],["BIT56",""],["BIT57",""],["BIT58",""],["BIT59",""],["BIT6",""],["BIT60",""],["BIT61",""],["BIT62",""],["BIT63",""],["BIT7",""],["BIT8",""],["BIT9",""],["BLE_AUDIO0_IRQ_IDX",""],["BLE_AUDIO1_IRQ_IDX",""],["BLE_AUDIO2_IRQ_IDX",""],["BLE_AUDIO_SYNC0_P_IDX",""],["BLE_AUDIO_SYNC1_P_IDX",""],["BLE_AUDIO_SYNC2_P_IDX",""],["BLE_UUID128_VAL_LENGTH",""],["BOTHER",""],["BRKINT",""],["BS0",""],["BS1",""],["BSDLY",""],["BT_AUDIO0_IRQ_IDX",""],["BT_AUDIO1_IRQ_IDX",""],["BT_AUDIO2_IRQ_IDX",""],["BT_MODE_ON_IDX",""],["BT_TASK_EXTRA_STACK_SIZE",""],["BUFSIZ",""],["BYTE_ORDER",""],["CBAUD",""],["CBAUDEX",""],["CCCR_BUS_WIDTH_1",""],["CCCR_BUS_WIDTH_4",""],["CCCR_BUS_WIDTH_8",""],["CCCR_BUS_WIDTH_ECSI",""],["CCCR_CTL_RES",""],["CHAR_MIN",""],["CHECKSUM_CHECK_ICMP",""],["CHECKSUM_CHECK_ICMP6",""],["CHECKSUM_CHECK_TCP",""],["CHECKSUM_GEN_ICMP",""],["CHECKSUM_GEN_ICMP6",""],["CHECKSUM_GEN_IP",""],["CHECKSUM_GEN_TCP",""],["CHECKSUM_GEN_UDP",""],["CHILD_MAX",""],["CH_IDX_IDX",""],["CISTPL_CODE_ALTSTR",""],["CISTPL_CODE_CFTABLE_ENTRY",""],["CISTPL_CODE_CHKSUM",""],["CISTPL_CODE_CONFIG",""],["CISTPL_CODE_DEVICE",""],["CISTPL_CODE_END",""],["CISTPL_CODE_FUNCE",""],["CISTPL_CODE_FUNCID",""],["CISTPL_CODE_MANFID",""],["CISTPL_CODE_NULL",""],["CISTPL_CODE_SDIO_EXT",""],["CISTPL_CODE_SDIO_STD",""],["CISTPL_CODE_VENDER_BEGIN",""],["CISTPL_CODE_VENDER_END",""],["CISTPL_CODE_VERS1",""],["CLINT_BASE",""],["CLINT_SIZE",""],["CLK_GPIO_IDX",""],["CLK_OUT1",""],["CLK_OUT1_M",""],["CLK_OUT1_S",""],["CLK_OUT1_V",""],["CLK_OUT2",""],["CLK_OUT2_M",""],["CLK_OUT2_S",""],["CLK_OUT2_V",""],["CLK_OUT3",""],["CLK_OUT3_M",""],["CLK_OUT3_S",""],["CLK_OUT3_V",""],["CLK_OUT_OUT1_IDX",""],["CLK_OUT_OUT2_IDX",""],["CLK_OUT_OUT3_IDX",""],["CLK_TCK",""],["CLOCAL",""],["CLOCKS_PER_SEC",""],["CLOCK_ALLOWED",""],["CLOCK_DISABLED",""],["CLOCK_DISALLOWED",""],["CLOCK_ENABLED",""],["COLL_WEIGHTS_MAX",""],["CONFIG_ADC2_DISABLE_DAC",""],["CONFIG_ADC_DISABLE_DAC",""],["CONFIG_APPTRACE_DEST_NONE",""],["CONFIG_APPTRACE_LOCK_ENABLE",""],["CONFIG_APP_BUILD_BOOTLOADER",""],["CONFIG_APP_BUILD_GENERATE_BINARIES",""],["CONFIG_APP_BUILD_TYPE_APP_2NDBOOT",""],["CONFIG_APP_BUILD_USE_FLASH_SECTIONS",""],["CONFIG_APP_COMPILE_TIME_DATE",""],["CONFIG_APP_RETRIEVE_LEN_ELF_SHA",""],["CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE",""],["CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT",""],["CONFIG_BOOTLOADER_LOG_LEVEL",""],["CONFIG_BOOTLOADER_LOG_LEVEL_INFO",""],["CONFIG_BOOTLOADER_OFFSET_IN_FLASH",""],["CONFIG_BOOTLOADER_RESERVE_RTC_SIZE",""],["CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V",""],["CONFIG_BOOTLOADER_WDT_ENABLE",""],["CONFIG_BOOTLOADER_WDT_TIME_MS",""],["CONFIG_BTDM_BLE_SLEEP_CLOCK_ACCURACY_INDEX_EFF",""],["CONFIG_BTDM_CTRL_BLE_MAX_CONN_EFF",""],["CONFIG_BTDM_CTRL_BR_EDR_MAX_ACL_CONN_EFF",""],["CONFIG_BTDM_CTRL_BR_EDR_MAX_SYNC_CONN_EFF",""],["CONFIG_BTDM_CTRL_BR_EDR_SCO_DATA_PATH_EFF",""],["CONFIG_BTDM_CTRL_PCM_POLAR_EFF",""],["CONFIG_BTDM_CTRL_PCM_ROLE_EFF",""],["CONFIG_BTDM_CTRL_PINNED_TO_CORE",""],["CONFIG_BT_CTRL_ADV_DUP_FILT_MAX",""],["CONFIG_BT_CTRL_BLE_ADV_REPORT_DISCARD_THRSHOLD",""],["CONFIG_BT_CTRL_BLE_ADV_REPORT_FLOW_CTRL_NUM",""],["CONFIG_BT_CTRL_BLE_ADV_REPORT_FLOW_CTRL_SUPP",""],["CONFIG_BT_CTRL_BLE_MAX_ACT",""],["CONFIG_BT_CTRL_BLE_MAX_ACT_EFF",""],["CONFIG_BT_CTRL_BLE_SCAN_DUPL",""],["CONFIG_BT_CTRL_BLE_STATIC_ACL_TX_BUF_NB",""],["CONFIG_BT_CTRL_COEX_PHY_CODED_TX_RX_TLIM_EFF",""],["CONFIG_BT_CTRL_DFT_TX_POWER_LEVEL_EFF",""],["CONFIG_BT_CTRL_HCI_TL",""],["CONFIG_BT_CTRL_HCI_TL_EFF",""],["CONFIG_BT_CTRL_HW_CCA_EFF",""],["CONFIG_BT_CTRL_MODE_EFF",""],["CONFIG_BT_CTRL_PINNED_TO_CORE",""],["CONFIG_BT_CTRL_SCAN_DUPL_CACHE_SIZE",""],["CONFIG_BT_CTRL_SCAN_DUPL_TYPE",""],["CONFIG_BT_CTRL_SLEEP_CLOCK_EFF",""],["CONFIG_BT_CTRL_SLEEP_MODE_EFF",""],["CONFIG_BT_NIMBLE_ENABLE_CONN_REATTEMPT",""],["CONFIG_BT_NIMBLE_USE_ESP_TIMER",""],["CONFIG_BT_RESERVE_DRAM",""],["CONFIG_COAP_LOG_DEFAULT_LEVEL",""],["CONFIG_COAP_MBEDTLS_PSK",""],["CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE",""],["CONFIG_COMPILER_OPTIMIZATION_DEFAULT",""],["CONFIG_COMPILER_OPTIMIZATION_LEVEL_DEBUG",""],["CONFIG_COMPILER_STACK_CHECK_MODE_NONE",""],["CONFIG_CONSOLE_UART_DEFAULT",""],["CONFIG_EFUSE_MAX_BLK_LEN",""],["CONFIG_ESP32C3_BROWNOUT_DET",""],["CONFIG_ESP32C3_BROWNOUT_DET_LVL",""],["CONFIG_ESP32C3_BROWNOUT_DET_LVL_SEL_7",""],["CONFIG_ESP32C3_DEBUG_OCDAWARE",""],["CONFIG_ESP32C3_DEFAULT_CPU_FREQ_160",""],["CONFIG_ESP32C3_DEFAULT_CPU_FREQ_MHZ",""],["CONFIG_ESP32C3_LIGHTSLEEP_GPIO_RESET_WORKAROUND",""],["CONFIG_ESP32C3_MEMPROT_FEATURE",""],["CONFIG_ESP32C3_MEMPROT_FEATURE_LOCK",""],["CONFIG_ESP32C3_REV_MIN",""],["CONFIG_ESP32C3_REV_MIN_3",""],["CONFIG_ESP32C3_RTC_CLK_CAL_CYCLES",""],["CONFIG_ESP32C3_RTC_CLK_SRC_INT_RC",""],["CONFIG_ESP32C3_TIME_SYSCALL_USE_RTC_SYSTIMER",""],["CONFIG_ESP32C3_UNIVERSAL_MAC_ADDRESSES",""],["CONFIG_ESP32C3_UNIVERSAL_MAC_ADDRESSES_FOUR",""],["CONFIG_ESP32S2_ALLOW_RTC_FAST_MEM_AS_HEAP",""],["CONFIG_ESP32S2_MEMPROT_FEATURE",""],["CONFIG_ESP32S2_MEMPROT_FEATURE_LOCK",""],["CONFIG_ESP32S2_PANIC_PRINT_REBOOT",""],["CONFIG_ESP32_ALLOW_RTC_FAST_MEM_AS_HEAP",""],["CONFIG_ESP32_APPTRACE_DEST_NONE",""],["CONFIG_ESP32_ENABLE_COREDUMP_TO_NONE",""],["CONFIG_ESP32_PANIC_PRINT_REBOOT",""],["CONFIG_ESP32_PHY_CALIBRATION_AND_DATA_STORAGE",""],["CONFIG_ESP32_PHY_MAX_TX_POWER",""],["CONFIG_ESP32_PHY_MAX_WIFI_TX_POWER",""],["CONFIG_ESP32_PTHREAD_STACK_MIN",""],["CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT",""],["CONFIG_ESP32_PTHREAD_TASK_PRIO_DEFAULT",""],["CONFIG_ESP32_PTHREAD_TASK_STACK_SIZE_DEFAULT",""],["CONFIG_ESP32_WIFI_AMPDU_RX_ENABLED",""],["CONFIG_ESP32_WIFI_AMPDU_TX_ENABLED",""],["CONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM",""],["CONFIG_ESP32_WIFI_DYNAMIC_TX_BUFFER",""],["CONFIG_ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM",""],["CONFIG_ESP32_WIFI_ENABLE_WPA3_SAE",""],["CONFIG_ESP32_WIFI_IRAM_OPT",""],["CONFIG_ESP32_WIFI_MGMT_SBUF_NUM",""],["CONFIG_ESP32_WIFI_NVS_ENABLED",""],["CONFIG_ESP32_WIFI_RX_BA_WIN",""],["CONFIG_ESP32_WIFI_RX_IRAM_OPT",""],["CONFIG_ESP32_WIFI_SOFTAP_BEACON_MAX_LEN",""],["CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM",""],["CONFIG_ESP32_WIFI_TX_BA_WIN",""],["CONFIG_ESP32_WIFI_TX_BUFFER_TYPE",""],["CONFIG_ESPTOOLPY_AFTER",""],["CONFIG_ESPTOOLPY_AFTER_RESET",""],["CONFIG_ESPTOOLPY_BAUD_OTHER_VAL",""],["CONFIG_ESPTOOLPY_BEFORE",""],["CONFIG_ESPTOOLPY_BEFORE_RESET",""],["CONFIG_ESPTOOLPY_FLASHFREQ",""],["CONFIG_ESPTOOLPY_FLASHFREQ_80M",""],["CONFIG_ESPTOOLPY_FLASHMODE",""],["CONFIG_ESPTOOLPY_FLASHMODE_DIO",""],["CONFIG_ESPTOOLPY_FLASHSIZE",""],["CONFIG_ESPTOOLPY_FLASHSIZE_2MB",""],["CONFIG_ESPTOOLPY_FLASHSIZE_DETECT",""],["CONFIG_ESPTOOLPY_MONITOR_BAUD",""],["CONFIG_ESPTOOLPY_MONITOR_BAUD_115200B",""],["CONFIG_ESPTOOLPY_MONITOR_BAUD_OTHER_VAL",""],["CONFIG_ESP_CONSOLE_UART",""],["CONFIG_ESP_CONSOLE_UART_BAUDRATE",""],["CONFIG_ESP_CONSOLE_UART_DEFAULT",""],["CONFIG_ESP_CONSOLE_UART_NUM",""],["CONFIG_ESP_COREDUMP_ENABLE_TO_NONE",""],["CONFIG_ESP_ERR_TO_NAME_LOOKUP",""],["CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR",""],["CONFIG_ESP_EVENT_POST_FROM_ISR",""],["CONFIG_ESP_GRATUITOUS_ARP",""],["CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS",""],["CONFIG_ESP_INT_WDT",""],["CONFIG_ESP_INT_WDT_TIMEOUT_MS",""],["CONFIG_ESP_IPC_TASK_STACK_SIZE",""],["CONFIG_ESP_MAC_ADDR_UNIVERSE_BT",""],["CONFIG_ESP_MAC_ADDR_UNIVERSE_ETH",""],["CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP",""],["CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA",""],["CONFIG_ESP_MAIN_TASK_STACK_SIZE",""],["CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE",""],["CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL",""],["CONFIG_ESP_NETIF_TCPIP_ADAPTER_COMPATIBLE_LAYER",""],["CONFIG_ESP_NETIF_TCPIP_LWIP",""],["CONFIG_ESP_SYSTEM_ALLOW_RTC_FAST_MEM_AS_HEAP",""],["CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE",""],["CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE",""],["CONFIG_ESP_SYSTEM_MEMPROT_FEATURE",""],["CONFIG_ESP_SYSTEM_MEMPROT_FEATURE_LOCK",""],["CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT",""],["CONFIG_ESP_SYSTEM_PD_FLASH",""],["CONFIG_ESP_SYSTEM_PM_POWER_DOWN_CPU",""],["CONFIG_ESP_SYSTEM_RTC_FAST_MEM_AS_HEAP_DEPCHECK",""],["CONFIG_ESP_SYSTEM_SINGLE_CORE_MODE",""],["CONFIG_ESP_TASK_WDT",""],["CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0",""],["CONFIG_ESP_TASK_WDT_TIMEOUT_S",""],["CONFIG_ESP_TIMER_IMPL_SYSTIMER",""],["CONFIG_ESP_TIMER_TASK_STACK_SIZE",""],["CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER",""],["CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER",""],["CONFIG_ESP_TLS_USE_DS_PERIPHERAL",""],["CONFIG_ESP_TLS_USING_MBEDTLS",""],["CONFIG_ETH_ENABLED",""],["CONFIG_ETH_USE_SPI_ETHERNET",""],["CONFIG_FATFS_CODEPAGE",""],["CONFIG_FATFS_CODEPAGE_437",""],["CONFIG_FATFS_FS_LOCK",""],["CONFIG_FATFS_LFN_NONE",""],["CONFIG_FATFS_PER_FILE_CACHE",""],["CONFIG_FATFS_TIMEOUT_MS",""],["CONFIG_FEATURE_CACHE_TX_BUF_BIT",""],["CONFIG_FEATURE_FTM_INITIATOR_BIT",""],["CONFIG_FEATURE_FTM_RESPONDER_BIT",""],["CONFIG_FEATURE_WPA3_SAE_BIT",""],["CONFIG_FLASHMODE_DIO",""],["CONFIG_FMB_COMM_MODE_ASCII_EN",""],["CONFIG_FMB_COMM_MODE_RTU_EN",""],["CONFIG_FMB_COMM_MODE_TCP_EN",""],["CONFIG_FMB_CONTROLLER_NOTIFY_QUEUE_SIZE",""],["CONFIG_FMB_CONTROLLER_NOTIFY_TIMEOUT",""],["CONFIG_FMB_CONTROLLER_SLAVE_ID",""],["CONFIG_FMB_CONTROLLER_SLAVE_ID_SUPPORT",""],["CONFIG_FMB_CONTROLLER_STACK_SIZE",""],["CONFIG_FMB_EVENT_QUEUE_TIMEOUT",""],["CONFIG_FMB_MASTER_DELAY_MS_CONVERT",""],["CONFIG_FMB_MASTER_TIMEOUT_MS_RESPOND",""],["CONFIG_FMB_MASTER_TIMER_GROUP",""],["CONFIG_FMB_MASTER_TIMER_INDEX",""],["CONFIG_FMB_PORT_TASK_AFFINITY",""],["CONFIG_FMB_PORT_TASK_PRIO",""],["CONFIG_FMB_PORT_TASK_STACK_SIZE",""],["CONFIG_FMB_QUEUE_LENGTH",""],["CONFIG_FMB_SERIAL_ASCII_BITS_PER_SYMB",""],["CONFIG_FMB_SERIAL_ASCII_TIMEOUT_RESPOND_MS",""],["CONFIG_FMB_SERIAL_BUF_SIZE",""],["CONFIG_FMB_TCP_CONNECTION_TOUT_SEC",""],["CONFIG_FMB_TCP_PORT_DEFAULT",""],["CONFIG_FMB_TCP_PORT_MAX_CONN",""],["CONFIG_FMB_TIMER_GROUP",""],["CONFIG_FMB_TIMER_INDEX",""],["CONFIG_FREERTOS_ASSERT_FAIL_ABORT",""],["CONFIG_FREERTOS_ASSERT_ON_UNTESTED_FUNCTION",""],["CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER",""],["CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY",""],["CONFIG_FREERTOS_CORETIMER_0",""],["CONFIG_FREERTOS_DEBUG_OCDAWARE",""],["CONFIG_FREERTOS_HZ",""],["CONFIG_FREERTOS_IDLE_TASK_STACKSIZE",""],["CONFIG_FREERTOS_INTERRUPT_BACKTRACE",""],["CONFIG_FREERTOS_ISR_STACKSIZE",""],["CONFIG_FREERTOS_MAX_TASK_NAME_LEN",""],["CONFIG_FREERTOS_NO_AFFINITY",""],["CONFIG_FREERTOS_OPTIMIZED_SCHEDULER",""],["CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE",""],["CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION",""],["CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER",""],["CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS",""],["CONFIG_FREERTOS_TIMER_QUEUE_LENGTH",""],["CONFIG_FREERTOS_TIMER_TASK_PRIORITY",""],["CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH",""],["CONFIG_FREERTOS_UNICORE",""],["CONFIG_GARP_TMR_INTERVAL",""],["CONFIG_HEAP_POISONING_DISABLED",""],["CONFIG_HEAP_TRACING_OFF",""],["CONFIG_HTTPD_ERR_RESP_NO_DELAY",""],["CONFIG_HTTPD_MAX_REQ_HDR_LEN",""],["CONFIG_HTTPD_MAX_URI_LEN",""],["CONFIG_HTTPD_PURGE_BUF_LEN",""],["CONFIG_IDF_CMAKE",""],["CONFIG_IDF_FIRMWARE_CHIP_ID",""],["CONFIG_IDF_TARGET",""],["CONFIG_IDF_TARGET_ARCH_RISCV",""],["CONFIG_IDF_TARGET_ESP32C3",""],["CONFIG_INT_WDT",""],["CONFIG_INT_WDT_TIMEOUT_MS",""],["CONFIG_IPC_TASK_STACK_SIZE",""],["CONFIG_LOG_BOOTLOADER_LEVEL_INFO",""],["CONFIG_LOG_COLORS",""],["CONFIG_LOG_DEFAULT_LEVEL",""],["CONFIG_LOG_DEFAULT_LEVEL_INFO",""],["CONFIG_LOG_TIMESTAMP_SOURCE_RTOS",""],["CONFIG_LWIP_CHECKSUM_CHECK_ICMP",""],["CONFIG_LWIP_DHCPS",""],["CONFIG_LWIP_DHCPS_LEASE_UNIT",""],["CONFIG_LWIP_DHCPS_MAX_STATION_NUM",""],["CONFIG_LWIP_DHCP_DOES_ARP_CHECK",""],["CONFIG_LWIP_DHCP_MAX_NTP_SERVERS",""],["CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES",""],["CONFIG_LWIP_ESP_GRATUITOUS_ARP",""],["CONFIG_LWIP_ESP_LWIP_ASSERT",""],["CONFIG_LWIP_GARP_TMR_INTERVAL",""],["CONFIG_LWIP_HOOK_IP6_ROUTE_NONE",""],["CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE",""],["CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT",""],["CONFIG_LWIP_ICMP",""],["CONFIG_LWIP_IP4_FRAG",""],["CONFIG_LWIP_IP6_FRAG",""],["CONFIG_LWIP_IPV6",""],["CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE",""],["CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS",""],["CONFIG_LWIP_LOCAL_HOSTNAME",""],["CONFIG_LWIP_LOOPBACK_MAX_PBUFS",""],["CONFIG_LWIP_MAX_ACTIVE_TCP",""],["CONFIG_LWIP_MAX_LISTENING_TCP",""],["CONFIG_LWIP_MAX_RAW_PCBS",""],["CONFIG_LWIP_MAX_SOCKETS",""],["CONFIG_LWIP_MAX_UDP_PCBS",""],["CONFIG_LWIP_NETIF_LOOPBACK",""],["CONFIG_LWIP_SNTP_UPDATE_DELAY",""],["CONFIG_LWIP_SO_REUSE",""],["CONFIG_LWIP_SO_REUSE_RXTOALL",""],["CONFIG_LWIP_TCPIP_RECVMBOX_SIZE",""],["CONFIG_LWIP_TCPIP_TASK_AFFINITY",""],["CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY",""],["CONFIG_LWIP_TCPIP_TASK_STACK_SIZE",""],["CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION",""],["CONFIG_LWIP_TCP_MAXRTX",""],["CONFIG_LWIP_TCP_MSL",""],["CONFIG_LWIP_TCP_MSS",""],["CONFIG_LWIP_TCP_OVERSIZE_MSS",""],["CONFIG_LWIP_TCP_QUEUE_OOSEQ",""],["CONFIG_LWIP_TCP_RECVMBOX_SIZE",""],["CONFIG_LWIP_TCP_RTO_TIME",""],["CONFIG_LWIP_TCP_SND_BUF_DEFAULT",""],["CONFIG_LWIP_TCP_SYNMAXRTX",""],["CONFIG_LWIP_TCP_TMR_INTERVAL",""],["CONFIG_LWIP_TCP_WND_DEFAULT",""],["CONFIG_LWIP_TIMERS_ONDEMAND",""],["CONFIG_LWIP_UDP_RECVMBOX_SIZE",""],["CONFIG_MAIN_TASK_STACK_SIZE",""],["CONFIG_MBEDTLS_AES_C",""],["CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN",""],["CONFIG_MBEDTLS_CCM_C",""],["CONFIG_MBEDTLS_CERTIFICATE_BUNDLE",""],["CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL",""],["CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS",""],["CONFIG_MBEDTLS_ECDH_C",""],["CONFIG_MBEDTLS_ECDSA_C",""],["CONFIG_MBEDTLS_ECDSA_DETERMINISTIC",""],["CONFIG_MBEDTLS_ECP_C",""],["CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED",""],["CONFIG_MBEDTLS_ECP_NIST_OPTIM",""],["CONFIG_MBEDTLS_GCM_C",""],["CONFIG_MBEDTLS_HARDWARE_AES",""],["CONFIG_MBEDTLS_HARDWARE_MPI",""],["CONFIG_MBEDTLS_HARDWARE_SHA",""],["CONFIG_MBEDTLS_HAVE_TIME",""],["CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_DHE_RSA",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE",""],["CONFIG_MBEDTLS_KEY_EXCHANGE_RSA",""],["CONFIG_MBEDTLS_LARGE_KEY_SOFTWARE_MPI",""],["CONFIG_MBEDTLS_PEM_PARSE_C",""],["CONFIG_MBEDTLS_PEM_WRITE_C",""],["CONFIG_MBEDTLS_RC4_DISABLED",""],["CONFIG_MBEDTLS_ROM_MD5",""],["CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS",""],["CONFIG_MBEDTLS_SHA512_C",""],["CONFIG_MBEDTLS_SSL_ALPN",""],["CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN",""],["CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN",""],["CONFIG_MBEDTLS_SSL_PROTO_TLS1",""],["CONFIG_MBEDTLS_SSL_PROTO_TLS1_1",""],["CONFIG_MBEDTLS_SSL_PROTO_TLS1_2",""],["CONFIG_MBEDTLS_SSL_RENEGOTIATION",""],["CONFIG_MBEDTLS_TLS_CLIENT",""],["CONFIG_MBEDTLS_TLS_ENABLED",""],["CONFIG_MBEDTLS_TLS_SERVER",""],["CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT",""],["CONFIG_MBEDTLS_X509_CHECK_EXTENDED_KEY_USAGE",""],["CONFIG_MBEDTLS_X509_CHECK_KEY_USAGE",""],["CONFIG_MBEDTLS_X509_CRL_PARSE_C",""],["CONFIG_MBEDTLS_X509_CSR_PARSE_C",""],["CONFIG_MB_CONTROLLER_NOTIFY_QUEUE_SIZE",""],["CONFIG_MB_CONTROLLER_NOTIFY_TIMEOUT",""],["CONFIG_MB_CONTROLLER_SLAVE_ID",""],["CONFIG_MB_CONTROLLER_SLAVE_ID_SUPPORT",""],["CONFIG_MB_CONTROLLER_STACK_SIZE",""],["CONFIG_MB_EVENT_QUEUE_TIMEOUT",""],["CONFIG_MB_MASTER_DELAY_MS_CONVERT",""],["CONFIG_MB_MASTER_TIMEOUT_MS_RESPOND",""],["CONFIG_MB_QUEUE_LENGTH",""],["CONFIG_MB_SERIAL_BUF_SIZE",""],["CONFIG_MB_SERIAL_TASK_PRIO",""],["CONFIG_MB_SERIAL_TASK_STACK_SIZE",""],["CONFIG_MB_TIMER_GROUP",""],["CONFIG_MB_TIMER_INDEX",""],["CONFIG_MDNS_MAX_SERVICES",""],["CONFIG_MDNS_SERVICE_ADD_TIMEOUT_MS",""],["CONFIG_MDNS_TASK_AFFINITY",""],["CONFIG_MDNS_TASK_AFFINITY_CPU0",""],["CONFIG_MDNS_TASK_PRIORITY",""],["CONFIG_MDNS_TASK_STACK_SIZE",""],["CONFIG_MDNS_TIMER_PERIOD_MS",""],["CONFIG_MONITOR_BAUD_115200B",""],["CONFIG_MQTT_PROTOCOL_311",""],["CONFIG_MQTT_TRANSPORT_SSL",""],["CONFIG_MQTT_TRANSPORT_WEBSOCKET",""],["CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE",""],["CONFIG_NEWLIB_STDIN_LINE_ENDING_CR",""],["CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF",""],["CONFIG_OPENSSL_ASSERT_EXIT",""],["CONFIG_OPENSSL_ERROR_STACK",""],["CONFIG_OPTIMIZATION_ASSERTIONS_ENABLED",""],["CONFIG_OPTIMIZATION_LEVEL_DEBUG",""],["CONFIG_PARTITION_TABLE_CUSTOM_FILENAME",""],["CONFIG_PARTITION_TABLE_FILENAME",""],["CONFIG_PARTITION_TABLE_MD5",""],["CONFIG_PARTITION_TABLE_OFFSET",""],["CONFIG_PARTITION_TABLE_SINGLE_APP",""],["CONFIG_POST_EVENTS_FROM_IRAM_ISR",""],["CONFIG_POST_EVENTS_FROM_ISR",""],["CONFIG_PTHREAD_STACK_MIN",""],["CONFIG_PTHREAD_TASK_CORE_DEFAULT",""],["CONFIG_PTHREAD_TASK_NAME_DEFAULT",""],["CONFIG_PTHREAD_TASK_PRIO_DEFAULT",""],["CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT",""],["CONFIG_SDK_TOOLPREFIX",""],["CONFIG_SECURE_BOOT_SUPPORTS_RSA",""],["CONFIG_SECURE_TARGET_HAS_SECURE_ROM_DL_MODE",""],["CONFIG_SEMIHOSTFS_HOST_PATH_MAX_LEN",""],["CONFIG_SEMIHOSTFS_MAX_MOUNT_POINTS",""],["CONFIG_SPIFFS_CACHE",""],["CONFIG_SPIFFS_CACHE_WR",""],["CONFIG_SPIFFS_GC_MAX_RUNS",""],["CONFIG_SPIFFS_MAX_PARTITIONS",""],["CONFIG_SPIFFS_META_LENGTH",""],["CONFIG_SPIFFS_OBJ_NAME_LEN",""],["CONFIG_SPIFFS_PAGE_CHECK",""],["CONFIG_SPIFFS_PAGE_SIZE",""],["CONFIG_SPIFFS_USE_MAGIC",""],["CONFIG_SPIFFS_USE_MAGIC_LENGTH",""],["CONFIG_SPIFFS_USE_MTIME",""],["CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS",""],["CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE",""],["CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS",""],["CONFIG_SPI_FLASH_ERASE_YIELD_TICKS",""],["CONFIG_SPI_FLASH_ROM_DRIVER_PATCH",""],["CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP",""],["CONFIG_SPI_FLASH_SUPPORT_GD_CHIP",""],["CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP",""],["CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP",""],["CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP",""],["CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE",""],["CONFIG_SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS",""],["CONFIG_SPI_FLASH_YIELD_DURING_ERASE",""],["CONFIG_SPI_MASTER_ISR_IN_IRAM",""],["CONFIG_SPI_SLAVE_ISR_IN_IRAM",""],["CONFIG_STACK_CHECK_NONE",""],["CONFIG_SUPPORT_TERMIOS",""],["CONFIG_SUPPRESS_SELECT_DEBUG_OUTPUT",""],["CONFIG_SYSTEM_EVENT_QUEUE_SIZE",""],["CONFIG_SYSTEM_EVENT_TASK_STACK_SIZE",""],["CONFIG_TASK_WDT",""],["CONFIG_TASK_WDT_CHECK_IDLE_TASK_CPU0",""],["CONFIG_TASK_WDT_TIMEOUT_S",""],["CONFIG_TCPIP_RECVMBOX_SIZE",""],["CONFIG_TCPIP_TASK_AFFINITY_NO_AFFINITY",""],["CONFIG_TCPIP_TASK_STACK_SIZE",""],["CONFIG_TCP_MAXRTX",""],["CONFIG_TCP_MSL",""],["CONFIG_TCP_MSS",""],["CONFIG_TCP_OVERSIZE_MSS",""],["CONFIG_TCP_QUEUE_OOSEQ",""],["CONFIG_TCP_RECVMBOX_SIZE",""],["CONFIG_TCP_SND_BUF_DEFAULT",""],["CONFIG_TCP_SYNMAXRTX",""],["CONFIG_TCP_WND_DEFAULT",""],["CONFIG_TIMER_QUEUE_LENGTH",""],["CONFIG_TIMER_TASK_PRIORITY",""],["CONFIG_TIMER_TASK_STACK_DEPTH",""],["CONFIG_TIMER_TASK_STACK_SIZE",""],["CONFIG_TOOLPREFIX",""],["CONFIG_UDP_RECVMBOX_SIZE",""],["CONFIG_UNITY_ENABLE_DOUBLE",""],["CONFIG_UNITY_ENABLE_FLOAT",""],["CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER",""],["CONFIG_VFS_SEMIHOSTFS_HOST_PATH_MAX_LEN",""],["CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS",""],["CONFIG_VFS_SUPPORT_DIR",""],["CONFIG_VFS_SUPPORT_IO",""],["CONFIG_VFS_SUPPORT_SELECT",""],["CONFIG_VFS_SUPPORT_TERMIOS",""],["CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT",""],["CONFIG_WIFI_LOG_DEFAULT_LEVEL_INFO",""],["CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT",""],["CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES",""],["CONFIG_WL_SECTOR_SIZE",""],["CONFIG_WL_SECTOR_SIZE_4096",""],["CONFIG_WPA_MBEDTLS_CRYPTO",""],["CONFIG_WS_BUFFER_SIZE",""],["CONFIG_WS_TRANSPORT",""],["CORE_ID_REGVAL_XOR_SWAP",""],["CPU_CLK_FREQ_ROM",""],["CR0",""],["CR1",""],["CR2",""],["CR3",""],["CRDLY",""],["CREAD",""],["CS5",""],["CS6",""],["CS7",""],["CS8",""],["CSIZE",""],["CSR_PCCR_MACHINE",""],["CSR_PCER_MACHINE",""],["CSR_PCMR_MACHINE",""],["CSR_PMPADDR0",""],["CSR_PMPCFG0",""],["CSR_TCONTROL",""],["CSR_TDATA1",""],["CSTOPB",""],["CTRL_EJECT",""],["CTRL_FORMAT",""],["CTRL_LOCK",""],["CTRL_POWER",""],["CTRL_SYNC",""],["CTRL_TRIM",""],["DATA_EN_IDX",""],["DATA_IDX",""],["DCSR_CAUSE",""],["DCSR_CAUSE_DEBUGINT",""],["DCSR_CAUSE_GROUP",""],["DCSR_CAUSE_HALT",""],["DCSR_CAUSE_HWBP",""],["DCSR_CAUSE_NONE",""],["DCSR_CAUSE_STEP",""],["DCSR_CAUSE_SWBP",""],["DCSR_DEBUGINT",""],["DCSR_EBREAKH",""],["DCSR_EBREAKM",""],["DCSR_EBREAKS",""],["DCSR_EBREAKU",""],["DCSR_FULLRESET",""],["DCSR_HALT",""],["DCSR_NDRESET",""],["DCSR_PRV",""],["DCSR_STEP",""],["DCSR_STOPCYCLE",""],["DCSR_STOPTIME",""],["DCSR_XDEBUGVER",""],["DEFAULT_ACCEPTMBOX_SIZE",""],["DEFAULT_HTTP_BUF_SIZE",""],["DEFAULT_RAW_RECVMBOX_SIZE",""],["DEFAULT_RSTVEC",""],["DEFAULT_TCP_RECVMBOX_SIZE",""],["DEFAULT_THREAD_NAME",""],["DEFAULT_THREAD_PRIO",""],["DEFAULT_THREAD_STACKSIZE",""],["DEFAULT_UDP_RECVMBOX_SIZE",""],["DEFFILEMODE",""],["DELAY_8M_ENABLE",""],["DELAY_FAST_CLK_SWITCH",""],["DELAY_SLOW_CLK_SWITCH",""],["DHCP6_DEBUG",""],["DHCPS_COARSE_TIMER_SECS",""],["DHCPS_LEASE_TIME_DEF",""],["DHCPS_LEASE_UNIT",""],["DHCPS_MAX_LEASE",""],["DHCP_DOES_ARP_CHECK",""],["DHCP_MAXRTX",""],["DIG_DBIAS_160M",""],["DIG_DBIAS_2M",""],["DIG_DBIAS_80M",""],["DIG_DBIAS_XTAL",""],["DNS_DEBUG",""],["DNS_DOES_NAME_CHECK",""],["DNS_FALLBACK_SERVER_INDEX",""],["DNS_LOCAL_HOSTLIST",""],["DNS_LOCAL_HOSTLIST_IS_DYNAMIC",""],["DNS_MAX_NAME_LENGTH",""],["DNS_MAX_RETRIES",""],["DNS_MAX_SERVERS",""],["DNS_TABLE_SIZE",""],["DRAM_BASE",""],["DRESULT_RES_ERROR",""],["DRESULT_RES_NOTRDY",""],["DRESULT_RES_OK",""],["DRESULT_RES_PARERR",""],["DRESULT_RES_WRPRT",""],["DR_REG_AES_BASE",""],["DR_REG_AES_XTS_BASE",""],["DR_REG_APB_CTRL_BASE",""],["DR_REG_APB_SARADC_BASE",""],["DR_REG_ASSIST_DEBUG_BASE",""],["DR_REG_BB_BASE",""],["DR_REG_DEDICATED_GPIO_BASE",""],["DR_REG_DIGITAL_SIGNATURE_BASE",""],["DR_REG_DMA_COPY_BASE",""],["DR_REG_DPORT_END",""],["DR_REG_EFUSE_BASE",""],["DR_REG_EXTMEM_BASE",""],["DR_REG_FE2_BASE",""],["DR_REG_FE_BASE",""],["DR_REG_GDMA_BASE",""],["DR_REG_GPIO_BASE",""],["DR_REG_HMAC_BASE",""],["DR_REG_I2C_EXT_BASE",""],["DR_REG_I2S0_BASE",""],["DR_REG_INTERRUPT_BASE",""],["DR_REG_INTERRUPT_CORE0_BASE",""],["DR_REG_IO_MUX_BASE",""],["DR_REG_LEDC_BASE",""],["DR_REG_MMU_TABLE",""],["DR_REG_NRX_BASE",""],["DR_REG_RMT_BASE",""],["DR_REG_RSA_BASE",""],["DR_REG_RTCCNTL_BASE",""],["DR_REG_RTC_I2C_BASE",""],["DR_REG_SENSITIVE_BASE",""],["DR_REG_SHA_BASE",""],["DR_REG_SPI0_BASE",""],["DR_REG_SPI1_BASE",""],["DR_REG_SPI2_BASE",""],["DR_REG_SYSCON_BASE",""],["DR_REG_SYSTEM_BASE",""],["DR_REG_SYS_TIMER_BASE",""],["DR_REG_TIMERGROUP0_BASE",""],["DR_REG_TIMERGROUP1_BASE",""],["DR_REG_TWAI_BASE",""],["DR_REG_UART1_BASE",""],["DR_REG_UART_BASE",""],["DR_REG_UHCI0_BASE",""],["DR_REG_USB_SERIAL_JTAG_BASE",""],["DR_REG_WORLD_CNTL_BASE",""],["DST_AUST",""],["DST_CAN",""],["DST_EET",""],["DST_MET",""],["DST_NONE",""],["DST_USA",""],["DST_WET",""],["DT_DIR",""],["DT_REG",""],["DT_UNKNOWN",""],["E2BIG",""],["EACCES",""],["EADDRINUSE",""],["EADDRNOTAVAIL",""],["EAFNOSUPPORT",""],["EAGAIN",""],["EAI_AGAIN",""],["EAI_BADFLAGS",""],["EAI_SOCKTYPE",""],["EALREADY",""],["EBADF",""],["EBADMSG",""],["EBUSY",""],["ECANCELED",""],["ECHILD",""],["ECHO",""],["ECHOE",""],["ECHOK",""],["ECHONL",""],["ECONNABORTED",""],["ECONNREFUSED",""],["ECONNRESET",""],["EDEADLK",""],["EDESTADDRREQ",""],["EDOM",""],["EDQUOT",""],["EEXIST",""],["EFAULT",""],["EFBIG",""],["EFTYPE",""],["EFUSE_CLK_FREQ_ROM",""],["EHOSTDOWN",""],["EHOSTUNREACH",""],["EIDRM",""],["EILSEQ",""],["EINPROGRESS",""],["EINTR",""],["EINVAL",""],["EIO",""],["EISCONN",""],["EISDIR",""],["ELOOP",""],["EMFILE",""],["EMLINK",""],["EMSGSIZE",""],["EMULTIHOP",""],["ENAMETOOLONG",""],["ENETDOWN",""],["ENETRESET",""],["ENETUNREACH",""],["ENFILE",""],["ENOBUFS",""],["ENODATA",""],["ENODEV",""],["ENOENT",""],["ENOEXEC",""],["ENOLCK",""],["ENOLINK",""],["ENOMEM",""],["ENOMSG",""],["ENOPROTOOPT",""],["ENOSPC",""],["ENOSR",""],["ENOSTR",""],["ENOSYS",""],["ENOTCONN",""],["ENOTDIR",""],["ENOTEMPTY",""],["ENOTRECOVERABLE",""],["ENOTSOCK",""],["ENOTSUP",""],["ENOTTY",""],["ENXIO",""],["EOF",""],["EOPNOTSUPP",""],["EOVERFLOW",""],["EOWNERDEAD",""],["EPERM",""],["EPFNOSUPPORT",""],["EPIPE",""],["EPROTO",""],["EPROTONOSUPPORT",""],["EPROTOTYPE",""],["ERANGE",""],["EROFS",""],["ERR_ESP_AES_INVALID_INPUT_LENGTH",""],["ERR_ESP_AES_INVALID_KEY_LENGTH",""],["ERR_NEED_SCHED",""],["ESHUTDOWN",""],["ESPIPE",""],["ESP_AES_DECRYPT",""],["ESP_AES_ENCRYPT",""],["ESP_APP_DESC_MAGIC_WORD",""],["ESP_AUTO_IP",""],["ESP_AUTO_RECV",""],["ESP_BOOTLOADER_DIGEST_OFFSET",""],["ESP_BOOTLOADER_OFFSET",""],["ESP_DHCP",""],["ESP_DHCPS",""],["ESP_DHCPS_TIMER",""],["ESP_DNS",""],["ESP_ERR_CODING",""],["ESP_ERR_EFUSE",""],["ESP_ERR_EFUSE_CNT_IS_FULL",""],["ESP_ERR_EFUSE_REPEATED_PROG",""],["ESP_ERR_ESPNOW_ARG",""],["ESP_ERR_ESPNOW_BASE",""],["ESP_ERR_ESPNOW_EXIST",""],["ESP_ERR_ESPNOW_FULL",""],["ESP_ERR_ESPNOW_IF",""],["ESP_ERR_ESPNOW_INTERNAL",""],["ESP_ERR_ESPNOW_NOT_FOUND",""],["ESP_ERR_ESPNOW_NOT_INIT",""],["ESP_ERR_ESPNOW_NO_MEM",""],["ESP_ERR_ESP_NETIF_BASE",""],["ESP_ERR_ESP_NETIF_DHCPC_START_FAILED",""],["ESP_ERR_ESP_NETIF_DHCP_ALREADY_STARTED",""],["ESP_ERR_ESP_NETIF_DHCP_ALREADY_STOPPED",""],["ESP_ERR_ESP_NETIF_DHCP_NOT_STOPPED",""],["ESP_ERR_ESP_NETIF_DNS_NOT_CONFIGURED",""],["ESP_ERR_ESP_NETIF_DRIVER_ATTACH_FAILED",""],["ESP_ERR_ESP_NETIF_IF_NOT_READY",""],["ESP_ERR_ESP_NETIF_INIT_FAILED",""],["ESP_ERR_ESP_NETIF_INVALID_PARAMS",""],["ESP_ERR_ESP_NETIF_NO_MEM",""],["ESP_ERR_ESP_TLS_BASE",""],["ESP_ERR_ESP_TLS_CANNOT_CREATE_SOCKET",""],["ESP_ERR_ESP_TLS_CANNOT_RESOLVE_HOSTNAME",""],["ESP_ERR_ESP_TLS_CONNECTION_TIMEOUT",""],["ESP_ERR_ESP_TLS_FAILED_CONNECT_TO_HOST",""],["ESP_ERR_ESP_TLS_SE_FAILED",""],["ESP_ERR_ESP_TLS_SOCKET_SETOPT_FAILED",""],["ESP_ERR_ESP_TLS_UNSUPPORTED_PROTOCOL_FAMILY",""],["ESP_ERR_FLASH_BASE",""],["ESP_ERR_FLASH_NOT_INITIALISED",""],["ESP_ERR_FLASH_NO_RESPONSE","< Chip did not respond to the command, or timed out."],["ESP_ERR_FLASH_OP_FAIL",""],["ESP_ERR_FLASH_OP_TIMEOUT",""],["ESP_ERR_FLASH_PROTECTED",""],["ESP_ERR_FLASH_SIZE_NOT_MATCH","< The chip doesn’t have enough space for the current partition table"],["ESP_ERR_FLASH_UNSUPPORTED_CHIP",""],["ESP_ERR_FLASH_UNSUPPORTED_HOST",""],["ESP_ERR_HTTPD_ALLOC_MEM",""],["ESP_ERR_HTTPD_BASE",""],["ESP_ERR_HTTPD_HANDLERS_FULL",""],["ESP_ERR_HTTPD_HANDLER_EXISTS",""],["ESP_ERR_HTTPD_INVALID_REQ",""],["ESP_ERR_HTTPD_RESP_HDR",""],["ESP_ERR_HTTPD_RESP_SEND",""],["ESP_ERR_HTTPD_RESULT_TRUNC",""],["ESP_ERR_HTTPD_TASK",""],["ESP_ERR_HTTP_BASE",""],["ESP_ERR_HTTP_CONNECT",""],["ESP_ERR_HTTP_CONNECTING",""],["ESP_ERR_HTTP_EAGAIN",""],["ESP_ERR_HTTP_FETCH_HEADER",""],["ESP_ERR_HTTP_INVALID_TRANSPORT",""],["ESP_ERR_HTTP_MAX_REDIRECT",""],["ESP_ERR_HTTP_WRITE_DATA",""],["ESP_ERR_HW_CRYPTO_BASE",""],["ESP_ERR_IMAGE_BASE",""],["ESP_ERR_IMAGE_FLASH_FAIL",""],["ESP_ERR_IMAGE_INVALID",""],["ESP_ERR_INVALID_ARG",""],["ESP_ERR_INVALID_CRC",""],["ESP_ERR_INVALID_MAC",""],["ESP_ERR_INVALID_RESPONSE",""],["ESP_ERR_INVALID_SIZE",""],["ESP_ERR_INVALID_STATE",""],["ESP_ERR_INVALID_VERSION",""],["ESP_ERR_MBEDTLS_CERT_PARTLY_OK",""],["ESP_ERR_MBEDTLS_CTR_DRBG_SEED_FAILED",""],["ESP_ERR_MBEDTLS_PK_PARSE_KEY_FAILED",""],["ESP_ERR_MBEDTLS_SSL_CONFIG_DEFAULTS_FAILED",""],["ESP_ERR_MBEDTLS_SSL_CONF_ALPN_PROTOCOLS_FAILED",""],["ESP_ERR_MBEDTLS_SSL_CONF_OWN_CERT_FAILED",""],["ESP_ERR_MBEDTLS_SSL_CONF_PSK_FAILED",""],["ESP_ERR_MBEDTLS_SSL_HANDSHAKE_FAILED",""],["ESP_ERR_MBEDTLS_SSL_SETUP_FAILED",""],["ESP_ERR_MBEDTLS_SSL_SET_HOSTNAME_FAILED",""],["ESP_ERR_MBEDTLS_SSL_WRITE_FAILED",""],["ESP_ERR_MBEDTLS_X509_CRT_PARSE_FAILED",""],["ESP_ERR_MESH_BASE",""],["ESP_ERR_NOT_ENOUGH_UNUSED_KEY_BLOCKS",""],["ESP_ERR_NOT_FINISHED",""],["ESP_ERR_NOT_FOUND",""],["ESP_ERR_NOT_SUPPORTED",""],["ESP_ERR_NO_MEM",""],["ESP_ERR_NVS_BASE",""],["ESP_ERR_NVS_CONTENT_DIFFERS",""],["ESP_ERR_NVS_CORRUPT_KEY_PART",""],["ESP_ERR_NVS_ENCR_NOT_SUPPORTED",""],["ESP_ERR_NVS_INVALID_HANDLE",""],["ESP_ERR_NVS_INVALID_LENGTH",""],["ESP_ERR_NVS_INVALID_NAME",""],["ESP_ERR_NVS_INVALID_STATE",""],["ESP_ERR_NVS_KEYS_NOT_INITIALIZED",""],["ESP_ERR_NVS_KEY_TOO_LONG",""],["ESP_ERR_NVS_NEW_VERSION_FOUND",""],["ESP_ERR_NVS_NOT_ENOUGH_SPACE",""],["ESP_ERR_NVS_NOT_FOUND",""],["ESP_ERR_NVS_NOT_INITIALIZED",""],["ESP_ERR_NVS_NO_FREE_PAGES",""],["ESP_ERR_NVS_PAGE_FULL",""],["ESP_ERR_NVS_PART_NOT_FOUND",""],["ESP_ERR_NVS_READ_ONLY",""],["ESP_ERR_NVS_REMOVE_FAILED",""],["ESP_ERR_NVS_TYPE_MISMATCH",""],["ESP_ERR_NVS_VALUE_TOO_LONG",""],["ESP_ERR_NVS_WRONG_ENCRYPTION",""],["ESP_ERR_NVS_XTS_CFG_FAILED",""],["ESP_ERR_NVS_XTS_CFG_NOT_FOUND",""],["ESP_ERR_NVS_XTS_DECR_FAILED",""],["ESP_ERR_NVS_XTS_ENCR_FAILED",""],["ESP_ERR_OTA_BASE",""],["ESP_ERR_OTA_PARTITION_CONFLICT",""],["ESP_ERR_OTA_ROLLBACK_FAILED",""],["ESP_ERR_OTA_ROLLBACK_INVALID_STATE",""],["ESP_ERR_OTA_SELECT_INFO_INVALID",""],["ESP_ERR_OTA_SMALL_SEC_VER",""],["ESP_ERR_OTA_VALIDATE_FAILED",""],["ESP_ERR_TCPIP_ADAPTER_DHCPC_START_FAILED",""],["ESP_ERR_TCPIP_ADAPTER_DHCP_ALREADY_STARTED",""],["ESP_ERR_TCPIP_ADAPTER_DHCP_ALREADY_STOPPED",""],["ESP_ERR_TCPIP_ADAPTER_DHCP_NOT_STOPPED",""],["ESP_ERR_TCPIP_ADAPTER_IF_NOT_READY",""],["ESP_ERR_TCPIP_ADAPTER_INVALID_PARAMS",""],["ESP_ERR_TCPIP_ADAPTER_NO_MEM",""],["ESP_ERR_TIMEOUT",""],["ESP_ERR_WIFI_BASE",""],["ESP_ERR_WIFI_CONN",""],["ESP_ERR_WIFI_IF",""],["ESP_ERR_WIFI_INIT_STATE",""],["ESP_ERR_WIFI_MAC",""],["ESP_ERR_WIFI_MODE",""],["ESP_ERR_WIFI_NOT_ASSOC",""],["ESP_ERR_WIFI_NOT_CONNECT",""],["ESP_ERR_WIFI_NOT_INIT",""],["ESP_ERR_WIFI_NOT_STARTED",""],["ESP_ERR_WIFI_NOT_STOPPED",""],["ESP_ERR_WIFI_NVS",""],["ESP_ERR_WIFI_PASSWORD",""],["ESP_ERR_WIFI_POST",""],["ESP_ERR_WIFI_SSID",""],["ESP_ERR_WIFI_STATE",""],["ESP_ERR_WIFI_STOP_STATE",""],["ESP_ERR_WIFI_TIMEOUT",""],["ESP_ERR_WIFI_TX_DISALLOW",""],["ESP_ERR_WIFI_WAKE_FAIL",""],["ESP_ERR_WIFI_WOULD_BLOCK",""],["ESP_ERR_WOLFSSL_CERT_VERIFY_SETUP_FAILED",""],["ESP_ERR_WOLFSSL_CTX_SETUP_FAILED",""],["ESP_ERR_WOLFSSL_KEY_VERIFY_SETUP_FAILED",""],["ESP_ERR_WOLFSSL_SSL_CONF_ALPN_PROTOCOLS_FAILED",""],["ESP_ERR_WOLFSSL_SSL_HANDSHAKE_FAILED",""],["ESP_ERR_WOLFSSL_SSL_SETUP_FAILED",""],["ESP_ERR_WOLFSSL_SSL_SET_HOSTNAME_FAILED",""],["ESP_ERR_WOLFSSL_SSL_WRITE_FAILED",""],["ESP_ETH_PHY_ADDR_AUTO",""],["ESP_EVENT_ANY_ID",""],["ESP_FAIL",""],["ESP_GRATUITOUS_ARP",""],["ESP_HAS_SELECT",""],["ESP_IDF_VERSION_MAJOR",""],["ESP_IDF_VERSION_MINOR",""],["ESP_IDF_VERSION_PATCH",""],["ESP_IMAGE_HASH_LEN",""],["ESP_IMAGE_HEADER_MAGIC",""],["ESP_IMAGE_MAX_SEGMENTS",""],["ESP_INTR_FLAG_EDGE",""],["ESP_INTR_FLAG_HIGH",""],["ESP_INTR_FLAG_INTRDISABLED",""],["ESP_INTR_FLAG_IRAM",""],["ESP_INTR_FLAG_LEVEL1",""],["ESP_INTR_FLAG_LEVEL2",""],["ESP_INTR_FLAG_LEVEL3",""],["ESP_INTR_FLAG_LEVEL4",""],["ESP_INTR_FLAG_LEVEL5",""],["ESP_INTR_FLAG_LEVEL6",""],["ESP_INTR_FLAG_LEVELMASK",""],["ESP_INTR_FLAG_LOWMED",""],["ESP_INTR_FLAG_NMI",""],["ESP_INTR_FLAG_SHARED",""],["ESP_IP4_ATON",""],["ESP_IP4_ROUTE",""],["ESP_IPADDR_TYPE_ANY",""],["ESP_IPADDR_TYPE_V4",""],["ESP_IPADDR_TYPE_V6",""],["ESP_IPV6",""],["ESP_IPV6_AUTOCONFIG",""],["ESP_LIGHT_SLEEP",""],["ESP_LWIP",""],["ESP_LWIP_ARP",""],["ESP_LWIP_IGMP_TIMERS_ONDEMAND",""],["ESP_LWIP_LOCK",""],["ESP_LWIP_MLD6_TIMERS_ONDEMAND",""],["ESP_LWIP_SELECT",""],["ESP_ND6_QUEUEING",""],["ESP_NOW_ETH_ALEN",""],["ESP_NOW_KEY_LEN",""],["ESP_NOW_MAX_DATA_LEN",""],["ESP_NOW_MAX_ENCRYPT_PEER_NUM",""],["ESP_NOW_MAX_TOTAL_PEER_NUM",""],["ESP_OK",""],["ESP_OK_EFUSE_CNT",""],["ESP_PARTITION_MAGIC",""],["ESP_PARTITION_MAGIC_MD5",""],["ESP_PARTITION_MD5_OFFSET",""],["ESP_PARTITION_TABLE_MAX_LEN",""],["ESP_PARTITION_TABLE_OFFSET",""],["ESP_PBUF",""],["ESP_PERF",""],["ESP_PER_SOC_TCP_WND",""],["ESP_PING",""],["ESP_PING_COUNT_INFINITE",""],["ESP_PPP",""],["ESP_RANDOM_TCP_PORT",""],["ESP_SOCKET",""],["ESP_STATS_TCP",""],["ESP_TASKD_EVENT_PRIO",""],["ESP_TASKD_EVENT_STACK",""],["ESP_TASK_BT_CONTROLLER_PRIO",""],["ESP_TASK_BT_CONTROLLER_STACK",""],["ESP_TASK_MAIN_PRIO",""],["ESP_TASK_MAIN_STACK",""],["ESP_TASK_PRIO_MAX",""],["ESP_TASK_PRIO_MIN",""],["ESP_TASK_TCPIP_PRIO",""],["ESP_TASK_TCPIP_STACK",""],["ESP_TASK_TIMER_PRIO",""],["ESP_TASK_TIMER_STACK",""],["ESP_THREAD_PROTECTION",""],["ESP_THREAD_SAFE",""],["ESP_TLS_ERR_SSL_TIMEOUT",""],["ESP_TLS_ERR_SSL_WANT_READ",""],["ESP_TLS_ERR_SSL_WANT_WRITE",""],["ESP_VFS_FLAG_CONTEXT_PTR",""],["ESP_VFS_FLAG_DEFAULT",""],["ESP_VFS_PATH_MAX",""],["ESP_WATCHPOINT_ACCESS",""],["ESP_WATCHPOINT_LOAD",""],["ESP_WATCHPOINT_STORE",""],["ESP_WIFI_CRYPTO_VERSION",""],["ESP_WIFI_MAX_CONN_NUM",""],["ESP_WIFI_OS_ADAPTER_MAGIC",""],["ESP_WIFI_OS_ADAPTER_VERSION",""],["ESRCH",""],["ESTALE",""],["ETHARP_STATS",""],["ETHARP_SUPPORT_STATIC_ENTRIES",""],["ETHARP_SUPPORT_VLAN",""],["ETH_CRC_LEN",""],["ETH_HEADER_LEN",""],["ETH_JUMBO_FRAME_PAYLOAD_LEN",""],["ETH_MAC_FLAG_PIN_TO_CORE",""],["ETH_MAC_FLAG_WORK_WITH_CACHE_DISABLE",""],["ETH_MAX_PACKET_SIZE",""],["ETH_MAX_PAYLOAD_LEN",""],["ETH_MIN_PACKET_SIZE",""],["ETH_MIN_PAYLOAD_LEN",""],["ETH_PAD_SIZE",""],["ETH_VLAN_TAG_LEN",""],["ETIME",""],["ETIMEDOUT",""],["ETOOMANYREFS",""],["ETS_CACHEERR_INUM",""],["ETS_CPU_INTR0_INUM",""],["ETS_DPORT_INUM",""],["ETS_FRC1_INUM",""],["ETS_GPIO_INUM",""],["ETS_INTERNAL_INTR_SOURCE_OFF",""],["ETS_INTERNAL_PROFILING_INTR_SOURCE",""],["ETS_INTERNAL_SW0_INTR_SOURCE",""],["ETS_INTERNAL_SW1_INTR_SOURCE",""],["ETS_INTERNAL_TIMER0_INTR_SOURCE",""],["ETS_INTERNAL_TIMER1_INTR_SOURCE",""],["ETS_INTERNAL_TIMER2_INTR_SOURCE",""],["ETS_INVALID_INUM",""],["ETS_MAX_INUM",""],["ETS_MEMPROT_ERR_INUM",""],["ETS_SLC_INUM",""],["ETS_SPI2_INUM",""],["ETS_STATUS_ETS_FAILED","< return failed in ets"],["ETS_STATUS_ETS_OK","< return successful in ets"],["ETS_SYSTICK_INUM",""],["ETS_T1_WDT_INUM",""],["ETS_TG0_T1_INUM",""],["ETS_UART0_INUM",""],["ETS_UART1_INUM",""],["ETS_WBB_INUM",""],["ETS_WMAC_INUM",""],["ETXTBSY",""],["EVT_CNTL_IMMEDIATE_ABORT_IDX",""],["EVT_REQ_P_IDX",""],["EVT_STOP_P_IDX",""],["EWOULDBLOCK",""],["EXDEV",""],["EXIT_FAILURE",""],["EXIT_SUCCESS",""],["EXPR_NEST_MAX",""],["EXT_ADC_START_IDX",""],["EXT_CSD_BUS_WIDTH",""],["EXT_CSD_BUS_WIDTH_1",""],["EXT_CSD_BUS_WIDTH_4",""],["EXT_CSD_BUS_WIDTH_4_DDR",""],["EXT_CSD_BUS_WIDTH_8",""],["EXT_CSD_BUS_WIDTH_8_DDR",""],["EXT_CSD_CARD_TYPE",""],["EXT_CSD_CARD_TYPE_26M",""],["EXT_CSD_CARD_TYPE_52M",""],["EXT_CSD_CARD_TYPE_52M_V12",""],["EXT_CSD_CARD_TYPE_52M_V12_18",""],["EXT_CSD_CARD_TYPE_52M_V18",""],["EXT_CSD_CARD_TYPE_F_26M",""],["EXT_CSD_CARD_TYPE_F_52M",""],["EXT_CSD_CARD_TYPE_F_52M_1_2V",""],["EXT_CSD_CARD_TYPE_F_52M_1_8V",""],["EXT_CSD_CMD_SET",""],["EXT_CSD_CMD_SET_CPSECURE",""],["EXT_CSD_CMD_SET_NORMAL",""],["EXT_CSD_CMD_SET_SECURE",""],["EXT_CSD_HS_TIMING",""],["EXT_CSD_HS_TIMING_BC",""],["EXT_CSD_HS_TIMING_HS",""],["EXT_CSD_HS_TIMING_HS200",""],["EXT_CSD_HS_TIMING_HS400",""],["EXT_CSD_MMC_SIZE",""],["EXT_CSD_POWER_CLASS",""],["EXT_CSD_PWR_CL_26_195",""],["EXT_CSD_PWR_CL_26_360",""],["EXT_CSD_PWR_CL_52_195",""],["EXT_CSD_PWR_CL_52_360",""],["EXT_CSD_REV",""],["EXT_CSD_SEC_COUNT",""],["EXT_CSD_STRUCTURE",""],["EXT_CSD_S_CMD_SET",""],["EXT_IO_BASE",""],["FAPPEND",""],["FASYNC",""],["FA_CREATE_ALWAYS",""],["FA_CREATE_NEW",""],["FA_OPEN_ALWAYS",""],["FA_OPEN_APPEND",""],["FA_OPEN_EXISTING",""],["FA_READ",""],["FA_WRITE",""],["FCREAT",""],["FDEFER",""],["FD_CLOEXEC",""],["FD_SETSIZE",""],["FEXCL",""],["FEXLOCK",""],["FF0",""],["FF1",""],["FFCONF_DEF",""],["FFDLY",""],["FF_CODE_PAGE",""],["FF_DEFINED",""],["FF_DRV_NOT_USED",""],["FF_FS_EXFAT",""],["FF_FS_LOCK",""],["FF_FS_MINIMIZE",""],["FF_FS_NOFSINFO",""],["FF_FS_NORTC",""],["FF_FS_READONLY",""],["FF_FS_REENTRANT",""],["FF_FS_RPATH",""],["FF_INTDEF",""],["FF_LFN_BUF",""],["FF_LFN_UNICODE",""],["FF_MULTI_PARTITION",""],["FF_NORTC_MDAY",""],["FF_NORTC_MON",""],["FF_NORTC_YEAR",""],["FF_SFN_BUF",""],["FF_SS_SDCARD",""],["FF_SS_WL",""],["FF_STRF_ENCODE",""],["FF_STR_VOLUME_ID",""],["FF_USE_CHMOD",""],["FF_USE_EXPAND",""],["FF_USE_FIND",""],["FF_USE_FORWARD",""],["FF_USE_LABEL",""],["FF_USE_LFN",""],["FF_USE_MKFS",""],["FF_USE_STRFUNC",""],["FF_USE_TRIM",""],["FF_VOLUMES",""],["FILENAME_MAX",""],["FMARK",""],["FM_ANY",""],["FM_EXFAT",""],["FM_FAT",""],["FM_FAT32",""],["FM_SFD",""],["FNBIO",""],["FNDELAY",""],["FNOCTTY",""],["FNONBIO",""],["FNONBLOCK",""],["FOPEN",""],["FOPEN_MAX",""],["FOUR_UNIVERSAL_MAC_ADDR",""],["FREAD",""],["FRESULT_FR_DENIED",""],["FRESULT_FR_DISK_ERR",""],["FRESULT_FR_EXIST",""],["FRESULT_FR_INT_ERR",""],["FRESULT_FR_INVALID_DRIVE",""],["FRESULT_FR_INVALID_NAME",""],["FRESULT_FR_INVALID_OBJECT",""],["FRESULT_FR_INVALID_PARAMETER",""],["FRESULT_FR_LOCKED",""],["FRESULT_FR_MKFS_ABORTED",""],["FRESULT_FR_NOT_ENABLED",""],["FRESULT_FR_NOT_ENOUGH_CORE",""],["FRESULT_FR_NOT_READY",""],["FRESULT_FR_NO_FILE",""],["FRESULT_FR_NO_FILESYSTEM",""],["FRESULT_FR_NO_PATH",""],["FRESULT_FR_OK",""],["FRESULT_FR_TIMEOUT",""],["FRESULT_FR_TOO_MANY_OPEN_FILES",""],["FRESULT_FR_WRITE_PROTECTED",""],["FSHLOCK",""],["FSPICLK_IN_IDX",""],["FSPICLK_OUT_IDX",""],["FSPICS0_IN_IDX",""],["FSPICS0_OUT_IDX",""],["FSPICS1_OUT_IDX",""],["FSPICS2_OUT_IDX",""],["FSPICS3_OUT_IDX",""],["FSPICS4_OUT_IDX",""],["FSPICS5_OUT_IDX",""],["FSPID_IN_IDX",""],["FSPID_OUT_IDX",""],["FSPIHD_IN_IDX",""],["FSPIHD_OUT_IDX",""],["FSPIQ_IN_IDX",""],["FSPIQ_OUT_IDX",""],["FSPIWP_IN_IDX",""],["FSPIWP_OUT_IDX",""],["FSYNC",""],["FS_EXFAT",""],["FS_FAT12",""],["FS_FAT16",""],["FS_FAT32",""],["FTRUNC",""],["FUNC_GPIO10_FSPICS0",""],["FUNC_GPIO10_GPIO10",""],["FUNC_GPIO10_GPIO10_0",""],["FUNC_GPIO18_GPIO18",""],["FUNC_GPIO18_GPIO18_0",""],["FUNC_GPIO19_GPIO19",""],["FUNC_GPIO19_GPIO19_0",""],["FUNC_GPIO2_FSPIQ",""],["FUNC_GPIO2_GPIO2",""],["FUNC_GPIO2_GPIO2_0",""],["FUNC_GPIO3_GPIO3",""],["FUNC_GPIO3_GPIO3_0",""],["FUNC_GPIO8_GPIO8",""],["FUNC_GPIO8_GPIO8_0",""],["FUNC_GPIO9_GPIO9",""],["FUNC_GPIO9_GPIO9_0",""],["FUNC_MTCK_FSPICLK",""],["FUNC_MTCK_GPIO6",""],["FUNC_MTCK_MTCK",""],["FUNC_MTDI_FSPIWP",""],["FUNC_MTDI_GPIO5",""],["FUNC_MTDI_MTDI",""],["FUNC_MTDO_FSPID",""],["FUNC_MTDO_GPIO7",""],["FUNC_MTDO_MTDO",""],["FUNC_MTMS_FSPIHD",""],["FUNC_MTMS_GPIO4",""],["FUNC_MTMS_MTMS",""],["FUNC_SPICLK_GPIO15",""],["FUNC_SPICLK_SPICLK",""],["FUNC_SPICS0_GPIO14",""],["FUNC_SPICS0_SPICS0",""],["FUNC_SPID_GPIO16",""],["FUNC_SPID_SPID",""],["FUNC_SPIHD_GPIO12",""],["FUNC_SPIHD_SPIHD",""],["FUNC_SPIQ_GPIO17",""],["FUNC_SPIQ_SPIQ",""],["FUNC_SPIWP_GPIO13",""],["FUNC_SPIWP_SPIWP",""],["FUNC_U0RXD_GPIO20",""],["FUNC_U0RXD_U0RXD",""],["FUNC_U0TXD_GPIO21",""],["FUNC_U0TXD_U0TXD",""],["FUNC_VDD_SPI_GPIO11",""],["FUNC_VDD_SPI_GPIO11_0",""],["FUNC_XTAL_32K_N_GPIO1",""],["FUNC_XTAL_32K_N_GPIO1_0",""],["FUNC_XTAL_32K_P_GPIO0",""],["FUNC_XTAL_32K_P_GPIO0_0",""],["FUN_DRV",""],["FUN_DRV_S",""],["FUN_DRV_V",""],["FUN_IE_S",""],["FUN_IE_V",""],["FUN_PD_S",""],["FUN_PD_V",""],["FUN_PU_S",""],["FUN_PU_V",""],["FWRITE",""],["F_CNVT",""],["F_DUPFD",""],["F_DUPFD_CLOEXEC",""],["F_GETFD",""],["F_GETFL",""],["F_GETLK",""],["F_GETOWN",""],["F_LOCK",""],["F_OK",""],["F_RDLCK",""],["F_RGETLK",""],["F_RSETLK",""],["F_RSETLKW",""],["F_SETFD",""],["F_SETFL",""],["F_SETLK",""],["F_SETLKW",""],["F_SETOWN",""],["F_TEST",""],["F_TLOCK",""],["F_ULOCK",""],["F_UNLCK",""],["F_UNLKSYS",""],["F_WRLCK",""],["GET_BLOCK_SIZE",""],["GET_SECTOR_COUNT",""],["GET_SECTOR_SIZE",""],["GPIO_BT_ACTIVE_IDX",""],["GPIO_BT_PRIORITY_IDX",""],["GPIO_BT_SEL",""],["GPIO_BT_SELECT_REG",""],["GPIO_BT_SEL_S",""],["GPIO_BT_SEL_V",""],["GPIO_CLK_EN_S",""],["GPIO_CLK_EN_V",""],["GPIO_CLOCK_GATE_REG",""],["GPIO_CPUSDIO_INT_REG",""],["GPIO_DATE",""],["GPIO_DATE_REG",""],["GPIO_DATE_S",""],["GPIO_DATE_V",""],["GPIO_ENABLE_DATA",""],["GPIO_ENABLE_DATA_S",""],["GPIO_ENABLE_DATA_V",""],["GPIO_ENABLE_REG",""],["GPIO_ENABLE_W1TC",""],["GPIO_ENABLE_W1TC_REG",""],["GPIO_ENABLE_W1TC_S",""],["GPIO_ENABLE_W1TC_V",""],["GPIO_ENABLE_W1TS",""],["GPIO_ENABLE_W1TS_REG",""],["GPIO_ENABLE_W1TS_S",""],["GPIO_ENABLE_W1TS_V",""],["GPIO_FUNC0_IN_INV_SEL_S",""],["GPIO_FUNC0_IN_INV_SEL_V",""],["GPIO_FUNC0_IN_SEL",""],["GPIO_FUNC0_IN_SEL_CFG_REG",""],["GPIO_FUNC0_IN_SEL_S",""],["GPIO_FUNC0_IN_SEL_V",""],["GPIO_FUNC0_OEN_INV_SEL_S",""],["GPIO_FUNC0_OEN_INV_SEL_V",""],["GPIO_FUNC0_OEN_SEL_S",""],["GPIO_FUNC0_OEN_SEL_V",""],["GPIO_FUNC0_OUT_INV_SEL_S",""],["GPIO_FUNC0_OUT_INV_SEL_V",""],["GPIO_FUNC0_OUT_SEL",""],["GPIO_FUNC0_OUT_SEL_CFG_REG",""],["GPIO_FUNC0_OUT_SEL_S",""],["GPIO_FUNC0_OUT_SEL_V",""],["GPIO_FUNC100_IN_INV_SEL_S",""],["GPIO_FUNC100_IN_INV_SEL_V",""],["GPIO_FUNC100_IN_SEL",""],["GPIO_FUNC100_IN_SEL_CFG_REG",""],["GPIO_FUNC100_IN_SEL_S",""],["GPIO_FUNC100_IN_SEL_V",""],["GPIO_FUNC101_IN_INV_SEL_S",""],["GPIO_FUNC101_IN_INV_SEL_V",""],["GPIO_FUNC101_IN_SEL",""],["GPIO_FUNC101_IN_SEL_CFG_REG",""],["GPIO_FUNC101_IN_SEL_S",""],["GPIO_FUNC101_IN_SEL_V",""],["GPIO_FUNC102_IN_INV_SEL_S",""],["GPIO_FUNC102_IN_INV_SEL_V",""],["GPIO_FUNC102_IN_SEL",""],["GPIO_FUNC102_IN_SEL_CFG_REG",""],["GPIO_FUNC102_IN_SEL_S",""],["GPIO_FUNC102_IN_SEL_V",""],["GPIO_FUNC103_IN_INV_SEL_S",""],["GPIO_FUNC103_IN_INV_SEL_V",""],["GPIO_FUNC103_IN_SEL",""],["GPIO_FUNC103_IN_SEL_CFG_REG",""],["GPIO_FUNC103_IN_SEL_S",""],["GPIO_FUNC103_IN_SEL_V",""],["GPIO_FUNC104_IN_INV_SEL_S",""],["GPIO_FUNC104_IN_INV_SEL_V",""],["GPIO_FUNC104_IN_SEL",""],["GPIO_FUNC104_IN_SEL_CFG_REG",""],["GPIO_FUNC104_IN_SEL_S",""],["GPIO_FUNC104_IN_SEL_V",""],["GPIO_FUNC105_IN_INV_SEL_S",""],["GPIO_FUNC105_IN_INV_SEL_V",""],["GPIO_FUNC105_IN_SEL",""],["GPIO_FUNC105_IN_SEL_CFG_REG",""],["GPIO_FUNC105_IN_SEL_S",""],["GPIO_FUNC105_IN_SEL_V",""],["GPIO_FUNC106_IN_INV_SEL_S",""],["GPIO_FUNC106_IN_INV_SEL_V",""],["GPIO_FUNC106_IN_SEL",""],["GPIO_FUNC106_IN_SEL_CFG_REG",""],["GPIO_FUNC106_IN_SEL_S",""],["GPIO_FUNC106_IN_SEL_V",""],["GPIO_FUNC107_IN_INV_SEL_S",""],["GPIO_FUNC107_IN_INV_SEL_V",""],["GPIO_FUNC107_IN_SEL",""],["GPIO_FUNC107_IN_SEL_CFG_REG",""],["GPIO_FUNC107_IN_SEL_S",""],["GPIO_FUNC107_IN_SEL_V",""],["GPIO_FUNC108_IN_INV_SEL_S",""],["GPIO_FUNC108_IN_INV_SEL_V",""],["GPIO_FUNC108_IN_SEL",""],["GPIO_FUNC108_IN_SEL_CFG_REG",""],["GPIO_FUNC108_IN_SEL_S",""],["GPIO_FUNC108_IN_SEL_V",""],["GPIO_FUNC109_IN_INV_SEL_S",""],["GPIO_FUNC109_IN_INV_SEL_V",""],["GPIO_FUNC109_IN_SEL",""],["GPIO_FUNC109_IN_SEL_CFG_REG",""],["GPIO_FUNC109_IN_SEL_S",""],["GPIO_FUNC109_IN_SEL_V",""],["GPIO_FUNC10_IN_INV_SEL_S",""],["GPIO_FUNC10_IN_INV_SEL_V",""],["GPIO_FUNC10_IN_SEL",""],["GPIO_FUNC10_IN_SEL_CFG_REG",""],["GPIO_FUNC10_IN_SEL_S",""],["GPIO_FUNC10_IN_SEL_V",""],["GPIO_FUNC10_OEN_INV_SEL_S",""],["GPIO_FUNC10_OEN_INV_SEL_V",""],["GPIO_FUNC10_OEN_SEL_S",""],["GPIO_FUNC10_OEN_SEL_V",""],["GPIO_FUNC10_OUT_INV_SEL_S",""],["GPIO_FUNC10_OUT_INV_SEL_V",""],["GPIO_FUNC10_OUT_SEL",""],["GPIO_FUNC10_OUT_SEL_CFG_REG",""],["GPIO_FUNC10_OUT_SEL_S",""],["GPIO_FUNC10_OUT_SEL_V",""],["GPIO_FUNC110_IN_INV_SEL_S",""],["GPIO_FUNC110_IN_INV_SEL_V",""],["GPIO_FUNC110_IN_SEL",""],["GPIO_FUNC110_IN_SEL_CFG_REG",""],["GPIO_FUNC110_IN_SEL_S",""],["GPIO_FUNC110_IN_SEL_V",""],["GPIO_FUNC111_IN_INV_SEL_S",""],["GPIO_FUNC111_IN_INV_SEL_V",""],["GPIO_FUNC111_IN_SEL",""],["GPIO_FUNC111_IN_SEL_CFG_REG",""],["GPIO_FUNC111_IN_SEL_S",""],["GPIO_FUNC111_IN_SEL_V",""],["GPIO_FUNC112_IN_INV_SEL_S",""],["GPIO_FUNC112_IN_INV_SEL_V",""],["GPIO_FUNC112_IN_SEL",""],["GPIO_FUNC112_IN_SEL_CFG_REG",""],["GPIO_FUNC112_IN_SEL_S",""],["GPIO_FUNC112_IN_SEL_V",""],["GPIO_FUNC113_IN_INV_SEL_S",""],["GPIO_FUNC113_IN_INV_SEL_V",""],["GPIO_FUNC113_IN_SEL",""],["GPIO_FUNC113_IN_SEL_CFG_REG",""],["GPIO_FUNC113_IN_SEL_S",""],["GPIO_FUNC113_IN_SEL_V",""],["GPIO_FUNC114_IN_INV_SEL_S",""],["GPIO_FUNC114_IN_INV_SEL_V",""],["GPIO_FUNC114_IN_SEL",""],["GPIO_FUNC114_IN_SEL_CFG_REG",""],["GPIO_FUNC114_IN_SEL_S",""],["GPIO_FUNC114_IN_SEL_V",""],["GPIO_FUNC115_IN_INV_SEL_S",""],["GPIO_FUNC115_IN_INV_SEL_V",""],["GPIO_FUNC115_IN_SEL",""],["GPIO_FUNC115_IN_SEL_CFG_REG",""],["GPIO_FUNC115_IN_SEL_S",""],["GPIO_FUNC115_IN_SEL_V",""],["GPIO_FUNC116_IN_INV_SEL_S",""],["GPIO_FUNC116_IN_INV_SEL_V",""],["GPIO_FUNC116_IN_SEL",""],["GPIO_FUNC116_IN_SEL_CFG_REG",""],["GPIO_FUNC116_IN_SEL_S",""],["GPIO_FUNC116_IN_SEL_V",""],["GPIO_FUNC117_IN_INV_SEL_S",""],["GPIO_FUNC117_IN_INV_SEL_V",""],["GPIO_FUNC117_IN_SEL",""],["GPIO_FUNC117_IN_SEL_CFG_REG",""],["GPIO_FUNC117_IN_SEL_S",""],["GPIO_FUNC117_IN_SEL_V",""],["GPIO_FUNC118_IN_INV_SEL_S",""],["GPIO_FUNC118_IN_INV_SEL_V",""],["GPIO_FUNC118_IN_SEL",""],["GPIO_FUNC118_IN_SEL_CFG_REG",""],["GPIO_FUNC118_IN_SEL_S",""],["GPIO_FUNC118_IN_SEL_V",""],["GPIO_FUNC119_IN_INV_SEL_S",""],["GPIO_FUNC119_IN_INV_SEL_V",""],["GPIO_FUNC119_IN_SEL",""],["GPIO_FUNC119_IN_SEL_CFG_REG",""],["GPIO_FUNC119_IN_SEL_S",""],["GPIO_FUNC119_IN_SEL_V",""],["GPIO_FUNC11_IN_INV_SEL_S",""],["GPIO_FUNC11_IN_INV_SEL_V",""],["GPIO_FUNC11_IN_SEL",""],["GPIO_FUNC11_IN_SEL_CFG_REG",""],["GPIO_FUNC11_IN_SEL_S",""],["GPIO_FUNC11_IN_SEL_V",""],["GPIO_FUNC11_OEN_INV_SEL_S",""],["GPIO_FUNC11_OEN_INV_SEL_V",""],["GPIO_FUNC11_OEN_SEL_S",""],["GPIO_FUNC11_OEN_SEL_V",""],["GPIO_FUNC11_OUT_INV_SEL_S",""],["GPIO_FUNC11_OUT_INV_SEL_V",""],["GPIO_FUNC11_OUT_SEL",""],["GPIO_FUNC11_OUT_SEL_CFG_REG",""],["GPIO_FUNC11_OUT_SEL_S",""],["GPIO_FUNC11_OUT_SEL_V",""],["GPIO_FUNC120_IN_INV_SEL_S",""],["GPIO_FUNC120_IN_INV_SEL_V",""],["GPIO_FUNC120_IN_SEL",""],["GPIO_FUNC120_IN_SEL_CFG_REG",""],["GPIO_FUNC120_IN_SEL_S",""],["GPIO_FUNC120_IN_SEL_V",""],["GPIO_FUNC121_IN_INV_SEL_S",""],["GPIO_FUNC121_IN_INV_SEL_V",""],["GPIO_FUNC121_IN_SEL",""],["GPIO_FUNC121_IN_SEL_CFG_REG",""],["GPIO_FUNC121_IN_SEL_S",""],["GPIO_FUNC121_IN_SEL_V",""],["GPIO_FUNC122_IN_INV_SEL_S",""],["GPIO_FUNC122_IN_INV_SEL_V",""],["GPIO_FUNC122_IN_SEL",""],["GPIO_FUNC122_IN_SEL_CFG_REG",""],["GPIO_FUNC122_IN_SEL_S",""],["GPIO_FUNC122_IN_SEL_V",""],["GPIO_FUNC123_IN_INV_SEL_S",""],["GPIO_FUNC123_IN_INV_SEL_V",""],["GPIO_FUNC123_IN_SEL",""],["GPIO_FUNC123_IN_SEL_CFG_REG",""],["GPIO_FUNC123_IN_SEL_S",""],["GPIO_FUNC123_IN_SEL_V",""],["GPIO_FUNC124_IN_INV_SEL_S",""],["GPIO_FUNC124_IN_INV_SEL_V",""],["GPIO_FUNC124_IN_SEL",""],["GPIO_FUNC124_IN_SEL_CFG_REG",""],["GPIO_FUNC124_IN_SEL_S",""],["GPIO_FUNC124_IN_SEL_V",""],["GPIO_FUNC125_IN_INV_SEL_S",""],["GPIO_FUNC125_IN_INV_SEL_V",""],["GPIO_FUNC125_IN_SEL",""],["GPIO_FUNC125_IN_SEL_CFG_REG",""],["GPIO_FUNC125_IN_SEL_S",""],["GPIO_FUNC125_IN_SEL_V",""],["GPIO_FUNC126_IN_INV_SEL_S",""],["GPIO_FUNC126_IN_INV_SEL_V",""],["GPIO_FUNC126_IN_SEL",""],["GPIO_FUNC126_IN_SEL_CFG_REG",""],["GPIO_FUNC126_IN_SEL_S",""],["GPIO_FUNC126_IN_SEL_V",""],["GPIO_FUNC127_IN_INV_SEL_S",""],["GPIO_FUNC127_IN_INV_SEL_V",""],["GPIO_FUNC127_IN_SEL",""],["GPIO_FUNC127_IN_SEL_CFG_REG",""],["GPIO_FUNC127_IN_SEL_S",""],["GPIO_FUNC127_IN_SEL_V",""],["GPIO_FUNC12_IN_INV_SEL_S",""],["GPIO_FUNC12_IN_INV_SEL_V",""],["GPIO_FUNC12_IN_SEL",""],["GPIO_FUNC12_IN_SEL_CFG_REG",""],["GPIO_FUNC12_IN_SEL_S",""],["GPIO_FUNC12_IN_SEL_V",""],["GPIO_FUNC12_OEN_INV_SEL_S",""],["GPIO_FUNC12_OEN_INV_SEL_V",""],["GPIO_FUNC12_OEN_SEL_S",""],["GPIO_FUNC12_OEN_SEL_V",""],["GPIO_FUNC12_OUT_INV_SEL_S",""],["GPIO_FUNC12_OUT_INV_SEL_V",""],["GPIO_FUNC12_OUT_SEL",""],["GPIO_FUNC12_OUT_SEL_CFG_REG",""],["GPIO_FUNC12_OUT_SEL_S",""],["GPIO_FUNC12_OUT_SEL_V",""],["GPIO_FUNC13_IN_INV_SEL_S",""],["GPIO_FUNC13_IN_INV_SEL_V",""],["GPIO_FUNC13_IN_SEL",""],["GPIO_FUNC13_IN_SEL_CFG_REG",""],["GPIO_FUNC13_IN_SEL_S",""],["GPIO_FUNC13_IN_SEL_V",""],["GPIO_FUNC13_OEN_INV_SEL_S",""],["GPIO_FUNC13_OEN_INV_SEL_V",""],["GPIO_FUNC13_OEN_SEL_S",""],["GPIO_FUNC13_OEN_SEL_V",""],["GPIO_FUNC13_OUT_INV_SEL_S",""],["GPIO_FUNC13_OUT_INV_SEL_V",""],["GPIO_FUNC13_OUT_SEL",""],["GPIO_FUNC13_OUT_SEL_CFG_REG",""],["GPIO_FUNC13_OUT_SEL_S",""],["GPIO_FUNC13_OUT_SEL_V",""],["GPIO_FUNC14_IN_INV_SEL_S",""],["GPIO_FUNC14_IN_INV_SEL_V",""],["GPIO_FUNC14_IN_SEL",""],["GPIO_FUNC14_IN_SEL_CFG_REG",""],["GPIO_FUNC14_IN_SEL_S",""],["GPIO_FUNC14_IN_SEL_V",""],["GPIO_FUNC14_OEN_INV_SEL_S",""],["GPIO_FUNC14_OEN_INV_SEL_V",""],["GPIO_FUNC14_OEN_SEL_S",""],["GPIO_FUNC14_OEN_SEL_V",""],["GPIO_FUNC14_OUT_INV_SEL_S",""],["GPIO_FUNC14_OUT_INV_SEL_V",""],["GPIO_FUNC14_OUT_SEL",""],["GPIO_FUNC14_OUT_SEL_CFG_REG",""],["GPIO_FUNC14_OUT_SEL_S",""],["GPIO_FUNC14_OUT_SEL_V",""],["GPIO_FUNC15_IN_INV_SEL_S",""],["GPIO_FUNC15_IN_INV_SEL_V",""],["GPIO_FUNC15_IN_SEL",""],["GPIO_FUNC15_IN_SEL_CFG_REG",""],["GPIO_FUNC15_IN_SEL_S",""],["GPIO_FUNC15_IN_SEL_V",""],["GPIO_FUNC15_OEN_INV_SEL_S",""],["GPIO_FUNC15_OEN_INV_SEL_V",""],["GPIO_FUNC15_OEN_SEL_S",""],["GPIO_FUNC15_OEN_SEL_V",""],["GPIO_FUNC15_OUT_INV_SEL_S",""],["GPIO_FUNC15_OUT_INV_SEL_V",""],["GPIO_FUNC15_OUT_SEL",""],["GPIO_FUNC15_OUT_SEL_CFG_REG",""],["GPIO_FUNC15_OUT_SEL_S",""],["GPIO_FUNC15_OUT_SEL_V",""],["GPIO_FUNC16_IN_INV_SEL_S",""],["GPIO_FUNC16_IN_INV_SEL_V",""],["GPIO_FUNC16_IN_SEL",""],["GPIO_FUNC16_IN_SEL_CFG_REG",""],["GPIO_FUNC16_IN_SEL_S",""],["GPIO_FUNC16_IN_SEL_V",""],["GPIO_FUNC16_OEN_INV_SEL_S",""],["GPIO_FUNC16_OEN_INV_SEL_V",""],["GPIO_FUNC16_OEN_SEL_S",""],["GPIO_FUNC16_OEN_SEL_V",""],["GPIO_FUNC16_OUT_INV_SEL_S",""],["GPIO_FUNC16_OUT_INV_SEL_V",""],["GPIO_FUNC16_OUT_SEL",""],["GPIO_FUNC16_OUT_SEL_CFG_REG",""],["GPIO_FUNC16_OUT_SEL_S",""],["GPIO_FUNC16_OUT_SEL_V",""],["GPIO_FUNC17_IN_INV_SEL_S",""],["GPIO_FUNC17_IN_INV_SEL_V",""],["GPIO_FUNC17_IN_SEL",""],["GPIO_FUNC17_IN_SEL_CFG_REG",""],["GPIO_FUNC17_IN_SEL_S",""],["GPIO_FUNC17_IN_SEL_V",""],["GPIO_FUNC17_OEN_INV_SEL_S",""],["GPIO_FUNC17_OEN_INV_SEL_V",""],["GPIO_FUNC17_OEN_SEL_S",""],["GPIO_FUNC17_OEN_SEL_V",""],["GPIO_FUNC17_OUT_INV_SEL_S",""],["GPIO_FUNC17_OUT_INV_SEL_V",""],["GPIO_FUNC17_OUT_SEL",""],["GPIO_FUNC17_OUT_SEL_CFG_REG",""],["GPIO_FUNC17_OUT_SEL_S",""],["GPIO_FUNC17_OUT_SEL_V",""],["GPIO_FUNC18_IN_INV_SEL_S",""],["GPIO_FUNC18_IN_INV_SEL_V",""],["GPIO_FUNC18_IN_SEL",""],["GPIO_FUNC18_IN_SEL_CFG_REG",""],["GPIO_FUNC18_IN_SEL_S",""],["GPIO_FUNC18_IN_SEL_V",""],["GPIO_FUNC18_OEN_INV_SEL_S",""],["GPIO_FUNC18_OEN_INV_SEL_V",""],["GPIO_FUNC18_OEN_SEL_S",""],["GPIO_FUNC18_OEN_SEL_V",""],["GPIO_FUNC18_OUT_INV_SEL_S",""],["GPIO_FUNC18_OUT_INV_SEL_V",""],["GPIO_FUNC18_OUT_SEL",""],["GPIO_FUNC18_OUT_SEL_CFG_REG",""],["GPIO_FUNC18_OUT_SEL_S",""],["GPIO_FUNC18_OUT_SEL_V",""],["GPIO_FUNC19_IN_INV_SEL_S",""],["GPIO_FUNC19_IN_INV_SEL_V",""],["GPIO_FUNC19_IN_SEL",""],["GPIO_FUNC19_IN_SEL_CFG_REG",""],["GPIO_FUNC19_IN_SEL_S",""],["GPIO_FUNC19_IN_SEL_V",""],["GPIO_FUNC19_OEN_INV_SEL_S",""],["GPIO_FUNC19_OEN_INV_SEL_V",""],["GPIO_FUNC19_OEN_SEL_S",""],["GPIO_FUNC19_OEN_SEL_V",""],["GPIO_FUNC19_OUT_INV_SEL_S",""],["GPIO_FUNC19_OUT_INV_SEL_V",""],["GPIO_FUNC19_OUT_SEL",""],["GPIO_FUNC19_OUT_SEL_CFG_REG",""],["GPIO_FUNC19_OUT_SEL_S",""],["GPIO_FUNC19_OUT_SEL_V",""],["GPIO_FUNC1_IN_INV_SEL_S",""],["GPIO_FUNC1_IN_INV_SEL_V",""],["GPIO_FUNC1_IN_SEL",""],["GPIO_FUNC1_IN_SEL_CFG_REG",""],["GPIO_FUNC1_IN_SEL_S",""],["GPIO_FUNC1_IN_SEL_V",""],["GPIO_FUNC1_OEN_INV_SEL_S",""],["GPIO_FUNC1_OEN_INV_SEL_V",""],["GPIO_FUNC1_OEN_SEL_S",""],["GPIO_FUNC1_OEN_SEL_V",""],["GPIO_FUNC1_OUT_INV_SEL_S",""],["GPIO_FUNC1_OUT_INV_SEL_V",""],["GPIO_FUNC1_OUT_SEL",""],["GPIO_FUNC1_OUT_SEL_CFG_REG",""],["GPIO_FUNC1_OUT_SEL_S",""],["GPIO_FUNC1_OUT_SEL_V",""],["GPIO_FUNC20_IN_INV_SEL_S",""],["GPIO_FUNC20_IN_INV_SEL_V",""],["GPIO_FUNC20_IN_SEL",""],["GPIO_FUNC20_IN_SEL_CFG_REG",""],["GPIO_FUNC20_IN_SEL_S",""],["GPIO_FUNC20_IN_SEL_V",""],["GPIO_FUNC20_OEN_INV_SEL_S",""],["GPIO_FUNC20_OEN_INV_SEL_V",""],["GPIO_FUNC20_OEN_SEL_S",""],["GPIO_FUNC20_OEN_SEL_V",""],["GPIO_FUNC20_OUT_INV_SEL_S",""],["GPIO_FUNC20_OUT_INV_SEL_V",""],["GPIO_FUNC20_OUT_SEL",""],["GPIO_FUNC20_OUT_SEL_CFG_REG",""],["GPIO_FUNC20_OUT_SEL_S",""],["GPIO_FUNC20_OUT_SEL_V",""],["GPIO_FUNC21_IN_INV_SEL_S",""],["GPIO_FUNC21_IN_INV_SEL_V",""],["GPIO_FUNC21_IN_SEL",""],["GPIO_FUNC21_IN_SEL_CFG_REG",""],["GPIO_FUNC21_IN_SEL_S",""],["GPIO_FUNC21_IN_SEL_V",""],["GPIO_FUNC21_OEN_INV_SEL_S",""],["GPIO_FUNC21_OEN_INV_SEL_V",""],["GPIO_FUNC21_OEN_SEL_S",""],["GPIO_FUNC21_OEN_SEL_V",""],["GPIO_FUNC21_OUT_INV_SEL_S",""],["GPIO_FUNC21_OUT_INV_SEL_V",""],["GPIO_FUNC21_OUT_SEL",""],["GPIO_FUNC21_OUT_SEL_CFG_REG",""],["GPIO_FUNC21_OUT_SEL_S",""],["GPIO_FUNC21_OUT_SEL_V",""],["GPIO_FUNC22_IN_INV_SEL_S",""],["GPIO_FUNC22_IN_INV_SEL_V",""],["GPIO_FUNC22_IN_SEL",""],["GPIO_FUNC22_IN_SEL_CFG_REG",""],["GPIO_FUNC22_IN_SEL_S",""],["GPIO_FUNC22_IN_SEL_V",""],["GPIO_FUNC22_OEN_INV_SEL_S",""],["GPIO_FUNC22_OEN_INV_SEL_V",""],["GPIO_FUNC22_OEN_SEL_S",""],["GPIO_FUNC22_OEN_SEL_V",""],["GPIO_FUNC22_OUT_INV_SEL_S",""],["GPIO_FUNC22_OUT_INV_SEL_V",""],["GPIO_FUNC22_OUT_SEL",""],["GPIO_FUNC22_OUT_SEL_CFG_REG",""],["GPIO_FUNC22_OUT_SEL_S",""],["GPIO_FUNC22_OUT_SEL_V",""],["GPIO_FUNC23_IN_INV_SEL_S",""],["GPIO_FUNC23_IN_INV_SEL_V",""],["GPIO_FUNC23_IN_SEL",""],["GPIO_FUNC23_IN_SEL_CFG_REG",""],["GPIO_FUNC23_IN_SEL_S",""],["GPIO_FUNC23_IN_SEL_V",""],["GPIO_FUNC23_OEN_INV_SEL_S",""],["GPIO_FUNC23_OEN_INV_SEL_V",""],["GPIO_FUNC23_OEN_SEL_S",""],["GPIO_FUNC23_OEN_SEL_V",""],["GPIO_FUNC23_OUT_INV_SEL_S",""],["GPIO_FUNC23_OUT_INV_SEL_V",""],["GPIO_FUNC23_OUT_SEL",""],["GPIO_FUNC23_OUT_SEL_CFG_REG",""],["GPIO_FUNC23_OUT_SEL_S",""],["GPIO_FUNC23_OUT_SEL_V",""],["GPIO_FUNC24_IN_INV_SEL_S",""],["GPIO_FUNC24_IN_INV_SEL_V",""],["GPIO_FUNC24_IN_SEL",""],["GPIO_FUNC24_IN_SEL_CFG_REG",""],["GPIO_FUNC24_IN_SEL_S",""],["GPIO_FUNC24_IN_SEL_V",""],["GPIO_FUNC24_OEN_INV_SEL_S",""],["GPIO_FUNC24_OEN_INV_SEL_V",""],["GPIO_FUNC24_OEN_SEL_S",""],["GPIO_FUNC24_OEN_SEL_V",""],["GPIO_FUNC24_OUT_INV_SEL_S",""],["GPIO_FUNC24_OUT_INV_SEL_V",""],["GPIO_FUNC24_OUT_SEL",""],["GPIO_FUNC24_OUT_SEL_CFG_REG",""],["GPIO_FUNC24_OUT_SEL_S",""],["GPIO_FUNC24_OUT_SEL_V",""],["GPIO_FUNC25_IN_INV_SEL_S",""],["GPIO_FUNC25_IN_INV_SEL_V",""],["GPIO_FUNC25_IN_SEL",""],["GPIO_FUNC25_IN_SEL_CFG_REG",""],["GPIO_FUNC25_IN_SEL_S",""],["GPIO_FUNC25_IN_SEL_V",""],["GPIO_FUNC25_OEN_INV_SEL_S",""],["GPIO_FUNC25_OEN_INV_SEL_V",""],["GPIO_FUNC25_OEN_SEL_S",""],["GPIO_FUNC25_OEN_SEL_V",""],["GPIO_FUNC25_OUT_INV_SEL_S",""],["GPIO_FUNC25_OUT_INV_SEL_V",""],["GPIO_FUNC25_OUT_SEL",""],["GPIO_FUNC25_OUT_SEL_CFG_REG",""],["GPIO_FUNC25_OUT_SEL_S",""],["GPIO_FUNC25_OUT_SEL_V",""],["GPIO_FUNC26_IN_INV_SEL_S",""],["GPIO_FUNC26_IN_INV_SEL_V",""],["GPIO_FUNC26_IN_SEL",""],["GPIO_FUNC26_IN_SEL_CFG_REG",""],["GPIO_FUNC26_IN_SEL_S",""],["GPIO_FUNC26_IN_SEL_V",""],["GPIO_FUNC27_IN_INV_SEL_S",""],["GPIO_FUNC27_IN_INV_SEL_V",""],["GPIO_FUNC27_IN_SEL",""],["GPIO_FUNC27_IN_SEL_CFG_REG",""],["GPIO_FUNC27_IN_SEL_S",""],["GPIO_FUNC27_IN_SEL_V",""],["GPIO_FUNC28_IN_INV_SEL_S",""],["GPIO_FUNC28_IN_INV_SEL_V",""],["GPIO_FUNC28_IN_SEL",""],["GPIO_FUNC28_IN_SEL_CFG_REG",""],["GPIO_FUNC28_IN_SEL_S",""],["GPIO_FUNC28_IN_SEL_V",""],["GPIO_FUNC29_IN_INV_SEL_S",""],["GPIO_FUNC29_IN_INV_SEL_V",""],["GPIO_FUNC29_IN_SEL",""],["GPIO_FUNC29_IN_SEL_CFG_REG",""],["GPIO_FUNC29_IN_SEL_S",""],["GPIO_FUNC29_IN_SEL_V",""],["GPIO_FUNC2_IN_INV_SEL_S",""],["GPIO_FUNC2_IN_INV_SEL_V",""],["GPIO_FUNC2_IN_SEL",""],["GPIO_FUNC2_IN_SEL_CFG_REG",""],["GPIO_FUNC2_IN_SEL_S",""],["GPIO_FUNC2_IN_SEL_V",""],["GPIO_FUNC2_OEN_INV_SEL_S",""],["GPIO_FUNC2_OEN_INV_SEL_V",""],["GPIO_FUNC2_OEN_SEL_S",""],["GPIO_FUNC2_OEN_SEL_V",""],["GPIO_FUNC2_OUT_INV_SEL_S",""],["GPIO_FUNC2_OUT_INV_SEL_V",""],["GPIO_FUNC2_OUT_SEL",""],["GPIO_FUNC2_OUT_SEL_CFG_REG",""],["GPIO_FUNC2_OUT_SEL_S",""],["GPIO_FUNC2_OUT_SEL_V",""],["GPIO_FUNC30_IN_INV_SEL_S",""],["GPIO_FUNC30_IN_INV_SEL_V",""],["GPIO_FUNC30_IN_SEL",""],["GPIO_FUNC30_IN_SEL_CFG_REG",""],["GPIO_FUNC30_IN_SEL_S",""],["GPIO_FUNC30_IN_SEL_V",""],["GPIO_FUNC31_IN_INV_SEL_S",""],["GPIO_FUNC31_IN_INV_SEL_V",""],["GPIO_FUNC31_IN_SEL",""],["GPIO_FUNC31_IN_SEL_CFG_REG",""],["GPIO_FUNC31_IN_SEL_S",""],["GPIO_FUNC31_IN_SEL_V",""],["GPIO_FUNC32_IN_INV_SEL_S",""],["GPIO_FUNC32_IN_INV_SEL_V",""],["GPIO_FUNC32_IN_SEL",""],["GPIO_FUNC32_IN_SEL_CFG_REG",""],["GPIO_FUNC32_IN_SEL_S",""],["GPIO_FUNC32_IN_SEL_V",""],["GPIO_FUNC33_IN_INV_SEL_S",""],["GPIO_FUNC33_IN_INV_SEL_V",""],["GPIO_FUNC33_IN_SEL",""],["GPIO_FUNC33_IN_SEL_CFG_REG",""],["GPIO_FUNC33_IN_SEL_S",""],["GPIO_FUNC33_IN_SEL_V",""],["GPIO_FUNC34_IN_INV_SEL_S",""],["GPIO_FUNC34_IN_INV_SEL_V",""],["GPIO_FUNC34_IN_SEL",""],["GPIO_FUNC34_IN_SEL_CFG_REG",""],["GPIO_FUNC34_IN_SEL_S",""],["GPIO_FUNC34_IN_SEL_V",""],["GPIO_FUNC35_IN_INV_SEL_S",""],["GPIO_FUNC35_IN_INV_SEL_V",""],["GPIO_FUNC35_IN_SEL",""],["GPIO_FUNC35_IN_SEL_CFG_REG",""],["GPIO_FUNC35_IN_SEL_S",""],["GPIO_FUNC35_IN_SEL_V",""],["GPIO_FUNC36_IN_INV_SEL_S",""],["GPIO_FUNC36_IN_INV_SEL_V",""],["GPIO_FUNC36_IN_SEL",""],["GPIO_FUNC36_IN_SEL_CFG_REG",""],["GPIO_FUNC36_IN_SEL_S",""],["GPIO_FUNC36_IN_SEL_V",""],["GPIO_FUNC37_IN_INV_SEL_S",""],["GPIO_FUNC37_IN_INV_SEL_V",""],["GPIO_FUNC37_IN_SEL",""],["GPIO_FUNC37_IN_SEL_CFG_REG",""],["GPIO_FUNC37_IN_SEL_S",""],["GPIO_FUNC37_IN_SEL_V",""],["GPIO_FUNC38_IN_INV_SEL_S",""],["GPIO_FUNC38_IN_INV_SEL_V",""],["GPIO_FUNC38_IN_SEL",""],["GPIO_FUNC38_IN_SEL_CFG_REG",""],["GPIO_FUNC38_IN_SEL_S",""],["GPIO_FUNC38_IN_SEL_V",""],["GPIO_FUNC39_IN_INV_SEL_S",""],["GPIO_FUNC39_IN_INV_SEL_V",""],["GPIO_FUNC39_IN_SEL",""],["GPIO_FUNC39_IN_SEL_CFG_REG",""],["GPIO_FUNC39_IN_SEL_S",""],["GPIO_FUNC39_IN_SEL_V",""],["GPIO_FUNC3_IN_INV_SEL_S",""],["GPIO_FUNC3_IN_INV_SEL_V",""],["GPIO_FUNC3_IN_SEL",""],["GPIO_FUNC3_IN_SEL_CFG_REG",""],["GPIO_FUNC3_IN_SEL_S",""],["GPIO_FUNC3_IN_SEL_V",""],["GPIO_FUNC3_OEN_INV_SEL_S",""],["GPIO_FUNC3_OEN_INV_SEL_V",""],["GPIO_FUNC3_OEN_SEL_S",""],["GPIO_FUNC3_OEN_SEL_V",""],["GPIO_FUNC3_OUT_INV_SEL_S",""],["GPIO_FUNC3_OUT_INV_SEL_V",""],["GPIO_FUNC3_OUT_SEL",""],["GPIO_FUNC3_OUT_SEL_CFG_REG",""],["GPIO_FUNC3_OUT_SEL_S",""],["GPIO_FUNC3_OUT_SEL_V",""],["GPIO_FUNC40_IN_INV_SEL_S",""],["GPIO_FUNC40_IN_INV_SEL_V",""],["GPIO_FUNC40_IN_SEL",""],["GPIO_FUNC40_IN_SEL_CFG_REG",""],["GPIO_FUNC40_IN_SEL_S",""],["GPIO_FUNC40_IN_SEL_V",""],["GPIO_FUNC41_IN_INV_SEL_S",""],["GPIO_FUNC41_IN_INV_SEL_V",""],["GPIO_FUNC41_IN_SEL",""],["GPIO_FUNC41_IN_SEL_CFG_REG",""],["GPIO_FUNC41_IN_SEL_S",""],["GPIO_FUNC41_IN_SEL_V",""],["GPIO_FUNC42_IN_INV_SEL_S",""],["GPIO_FUNC42_IN_INV_SEL_V",""],["GPIO_FUNC42_IN_SEL",""],["GPIO_FUNC42_IN_SEL_CFG_REG",""],["GPIO_FUNC42_IN_SEL_S",""],["GPIO_FUNC42_IN_SEL_V",""],["GPIO_FUNC43_IN_INV_SEL_S",""],["GPIO_FUNC43_IN_INV_SEL_V",""],["GPIO_FUNC43_IN_SEL",""],["GPIO_FUNC43_IN_SEL_CFG_REG",""],["GPIO_FUNC43_IN_SEL_S",""],["GPIO_FUNC43_IN_SEL_V",""],["GPIO_FUNC44_IN_INV_SEL_S",""],["GPIO_FUNC44_IN_INV_SEL_V",""],["GPIO_FUNC44_IN_SEL",""],["GPIO_FUNC44_IN_SEL_CFG_REG",""],["GPIO_FUNC44_IN_SEL_S",""],["GPIO_FUNC44_IN_SEL_V",""],["GPIO_FUNC45_IN_INV_SEL_S",""],["GPIO_FUNC45_IN_INV_SEL_V",""],["GPIO_FUNC45_IN_SEL",""],["GPIO_FUNC45_IN_SEL_CFG_REG",""],["GPIO_FUNC45_IN_SEL_S",""],["GPIO_FUNC45_IN_SEL_V",""],["GPIO_FUNC46_IN_INV_SEL_S",""],["GPIO_FUNC46_IN_INV_SEL_V",""],["GPIO_FUNC46_IN_SEL",""],["GPIO_FUNC46_IN_SEL_CFG_REG",""],["GPIO_FUNC46_IN_SEL_S",""],["GPIO_FUNC46_IN_SEL_V",""],["GPIO_FUNC47_IN_INV_SEL_S",""],["GPIO_FUNC47_IN_INV_SEL_V",""],["GPIO_FUNC47_IN_SEL",""],["GPIO_FUNC47_IN_SEL_CFG_REG",""],["GPIO_FUNC47_IN_SEL_S",""],["GPIO_FUNC47_IN_SEL_V",""],["GPIO_FUNC48_IN_INV_SEL_S",""],["GPIO_FUNC48_IN_INV_SEL_V",""],["GPIO_FUNC48_IN_SEL",""],["GPIO_FUNC48_IN_SEL_CFG_REG",""],["GPIO_FUNC48_IN_SEL_S",""],["GPIO_FUNC48_IN_SEL_V",""],["GPIO_FUNC49_IN_INV_SEL_S",""],["GPIO_FUNC49_IN_INV_SEL_V",""],["GPIO_FUNC49_IN_SEL",""],["GPIO_FUNC49_IN_SEL_CFG_REG",""],["GPIO_FUNC49_IN_SEL_S",""],["GPIO_FUNC49_IN_SEL_V",""],["GPIO_FUNC4_IN_INV_SEL_S",""],["GPIO_FUNC4_IN_INV_SEL_V",""],["GPIO_FUNC4_IN_SEL",""],["GPIO_FUNC4_IN_SEL_CFG_REG",""],["GPIO_FUNC4_IN_SEL_S",""],["GPIO_FUNC4_IN_SEL_V",""],["GPIO_FUNC4_OEN_INV_SEL_S",""],["GPIO_FUNC4_OEN_INV_SEL_V",""],["GPIO_FUNC4_OEN_SEL_S",""],["GPIO_FUNC4_OEN_SEL_V",""],["GPIO_FUNC4_OUT_INV_SEL_S",""],["GPIO_FUNC4_OUT_INV_SEL_V",""],["GPIO_FUNC4_OUT_SEL",""],["GPIO_FUNC4_OUT_SEL_CFG_REG",""],["GPIO_FUNC4_OUT_SEL_S",""],["GPIO_FUNC4_OUT_SEL_V",""],["GPIO_FUNC50_IN_INV_SEL_S",""],["GPIO_FUNC50_IN_INV_SEL_V",""],["GPIO_FUNC50_IN_SEL",""],["GPIO_FUNC50_IN_SEL_CFG_REG",""],["GPIO_FUNC50_IN_SEL_S",""],["GPIO_FUNC50_IN_SEL_V",""],["GPIO_FUNC51_IN_INV_SEL_S",""],["GPIO_FUNC51_IN_INV_SEL_V",""],["GPIO_FUNC51_IN_SEL",""],["GPIO_FUNC51_IN_SEL_CFG_REG",""],["GPIO_FUNC51_IN_SEL_S",""],["GPIO_FUNC51_IN_SEL_V",""],["GPIO_FUNC52_IN_INV_SEL_S",""],["GPIO_FUNC52_IN_INV_SEL_V",""],["GPIO_FUNC52_IN_SEL",""],["GPIO_FUNC52_IN_SEL_CFG_REG",""],["GPIO_FUNC52_IN_SEL_S",""],["GPIO_FUNC52_IN_SEL_V",""],["GPIO_FUNC53_IN_INV_SEL_S",""],["GPIO_FUNC53_IN_INV_SEL_V",""],["GPIO_FUNC53_IN_SEL",""],["GPIO_FUNC53_IN_SEL_CFG_REG",""],["GPIO_FUNC53_IN_SEL_S",""],["GPIO_FUNC53_IN_SEL_V",""],["GPIO_FUNC54_IN_INV_SEL_S",""],["GPIO_FUNC54_IN_INV_SEL_V",""],["GPIO_FUNC54_IN_SEL",""],["GPIO_FUNC54_IN_SEL_CFG_REG",""],["GPIO_FUNC54_IN_SEL_S",""],["GPIO_FUNC54_IN_SEL_V",""],["GPIO_FUNC55_IN_INV_SEL_S",""],["GPIO_FUNC55_IN_INV_SEL_V",""],["GPIO_FUNC55_IN_SEL",""],["GPIO_FUNC55_IN_SEL_CFG_REG",""],["GPIO_FUNC55_IN_SEL_S",""],["GPIO_FUNC55_IN_SEL_V",""],["GPIO_FUNC56_IN_INV_SEL_S",""],["GPIO_FUNC56_IN_INV_SEL_V",""],["GPIO_FUNC56_IN_SEL",""],["GPIO_FUNC56_IN_SEL_CFG_REG",""],["GPIO_FUNC56_IN_SEL_S",""],["GPIO_FUNC56_IN_SEL_V",""],["GPIO_FUNC57_IN_INV_SEL_S",""],["GPIO_FUNC57_IN_INV_SEL_V",""],["GPIO_FUNC57_IN_SEL",""],["GPIO_FUNC57_IN_SEL_CFG_REG",""],["GPIO_FUNC57_IN_SEL_S",""],["GPIO_FUNC57_IN_SEL_V",""],["GPIO_FUNC58_IN_INV_SEL_S",""],["GPIO_FUNC58_IN_INV_SEL_V",""],["GPIO_FUNC58_IN_SEL",""],["GPIO_FUNC58_IN_SEL_CFG_REG",""],["GPIO_FUNC58_IN_SEL_S",""],["GPIO_FUNC58_IN_SEL_V",""],["GPIO_FUNC59_IN_INV_SEL_S",""],["GPIO_FUNC59_IN_INV_SEL_V",""],["GPIO_FUNC59_IN_SEL",""],["GPIO_FUNC59_IN_SEL_CFG_REG",""],["GPIO_FUNC59_IN_SEL_S",""],["GPIO_FUNC59_IN_SEL_V",""],["GPIO_FUNC5_IN_INV_SEL_S",""],["GPIO_FUNC5_IN_INV_SEL_V",""],["GPIO_FUNC5_IN_SEL",""],["GPIO_FUNC5_IN_SEL_CFG_REG",""],["GPIO_FUNC5_IN_SEL_S",""],["GPIO_FUNC5_IN_SEL_V",""],["GPIO_FUNC5_OEN_INV_SEL_S",""],["GPIO_FUNC5_OEN_INV_SEL_V",""],["GPIO_FUNC5_OEN_SEL_S",""],["GPIO_FUNC5_OEN_SEL_V",""],["GPIO_FUNC5_OUT_INV_SEL_S",""],["GPIO_FUNC5_OUT_INV_SEL_V",""],["GPIO_FUNC5_OUT_SEL",""],["GPIO_FUNC5_OUT_SEL_CFG_REG",""],["GPIO_FUNC5_OUT_SEL_S",""],["GPIO_FUNC5_OUT_SEL_V",""],["GPIO_FUNC60_IN_INV_SEL_S",""],["GPIO_FUNC60_IN_INV_SEL_V",""],["GPIO_FUNC60_IN_SEL",""],["GPIO_FUNC60_IN_SEL_CFG_REG",""],["GPIO_FUNC60_IN_SEL_S",""],["GPIO_FUNC60_IN_SEL_V",""],["GPIO_FUNC61_IN_INV_SEL_S",""],["GPIO_FUNC61_IN_INV_SEL_V",""],["GPIO_FUNC61_IN_SEL",""],["GPIO_FUNC61_IN_SEL_CFG_REG",""],["GPIO_FUNC61_IN_SEL_S",""],["GPIO_FUNC61_IN_SEL_V",""],["GPIO_FUNC62_IN_INV_SEL_S",""],["GPIO_FUNC62_IN_INV_SEL_V",""],["GPIO_FUNC62_IN_SEL",""],["GPIO_FUNC62_IN_SEL_CFG_REG",""],["GPIO_FUNC62_IN_SEL_S",""],["GPIO_FUNC62_IN_SEL_V",""],["GPIO_FUNC63_IN_INV_SEL_S",""],["GPIO_FUNC63_IN_INV_SEL_V",""],["GPIO_FUNC63_IN_SEL",""],["GPIO_FUNC63_IN_SEL_CFG_REG",""],["GPIO_FUNC63_IN_SEL_S",""],["GPIO_FUNC63_IN_SEL_V",""],["GPIO_FUNC64_IN_INV_SEL_S",""],["GPIO_FUNC64_IN_INV_SEL_V",""],["GPIO_FUNC64_IN_SEL",""],["GPIO_FUNC64_IN_SEL_CFG_REG",""],["GPIO_FUNC64_IN_SEL_S",""],["GPIO_FUNC64_IN_SEL_V",""],["GPIO_FUNC65_IN_INV_SEL_S",""],["GPIO_FUNC65_IN_INV_SEL_V",""],["GPIO_FUNC65_IN_SEL",""],["GPIO_FUNC65_IN_SEL_CFG_REG",""],["GPIO_FUNC65_IN_SEL_S",""],["GPIO_FUNC65_IN_SEL_V",""],["GPIO_FUNC66_IN_INV_SEL_S",""],["GPIO_FUNC66_IN_INV_SEL_V",""],["GPIO_FUNC66_IN_SEL",""],["GPIO_FUNC66_IN_SEL_CFG_REG",""],["GPIO_FUNC66_IN_SEL_S",""],["GPIO_FUNC66_IN_SEL_V",""],["GPIO_FUNC67_IN_INV_SEL_S",""],["GPIO_FUNC67_IN_INV_SEL_V",""],["GPIO_FUNC67_IN_SEL",""],["GPIO_FUNC67_IN_SEL_CFG_REG",""],["GPIO_FUNC67_IN_SEL_S",""],["GPIO_FUNC67_IN_SEL_V",""],["GPIO_FUNC68_IN_INV_SEL_S",""],["GPIO_FUNC68_IN_INV_SEL_V",""],["GPIO_FUNC68_IN_SEL",""],["GPIO_FUNC68_IN_SEL_CFG_REG",""],["GPIO_FUNC68_IN_SEL_S",""],["GPIO_FUNC68_IN_SEL_V",""],["GPIO_FUNC69_IN_INV_SEL_S",""],["GPIO_FUNC69_IN_INV_SEL_V",""],["GPIO_FUNC69_IN_SEL",""],["GPIO_FUNC69_IN_SEL_CFG_REG",""],["GPIO_FUNC69_IN_SEL_S",""],["GPIO_FUNC69_IN_SEL_V",""],["GPIO_FUNC6_IN_INV_SEL_S",""],["GPIO_FUNC6_IN_INV_SEL_V",""],["GPIO_FUNC6_IN_SEL",""],["GPIO_FUNC6_IN_SEL_CFG_REG",""],["GPIO_FUNC6_IN_SEL_S",""],["GPIO_FUNC6_IN_SEL_V",""],["GPIO_FUNC6_OEN_INV_SEL_S",""],["GPIO_FUNC6_OEN_INV_SEL_V",""],["GPIO_FUNC6_OEN_SEL_S",""],["GPIO_FUNC6_OEN_SEL_V",""],["GPIO_FUNC6_OUT_INV_SEL_S",""],["GPIO_FUNC6_OUT_INV_SEL_V",""],["GPIO_FUNC6_OUT_SEL",""],["GPIO_FUNC6_OUT_SEL_CFG_REG",""],["GPIO_FUNC6_OUT_SEL_S",""],["GPIO_FUNC6_OUT_SEL_V",""],["GPIO_FUNC70_IN_INV_SEL_S",""],["GPIO_FUNC70_IN_INV_SEL_V",""],["GPIO_FUNC70_IN_SEL",""],["GPIO_FUNC70_IN_SEL_CFG_REG",""],["GPIO_FUNC70_IN_SEL_S",""],["GPIO_FUNC70_IN_SEL_V",""],["GPIO_FUNC71_IN_INV_SEL_S",""],["GPIO_FUNC71_IN_INV_SEL_V",""],["GPIO_FUNC71_IN_SEL",""],["GPIO_FUNC71_IN_SEL_CFG_REG",""],["GPIO_FUNC71_IN_SEL_S",""],["GPIO_FUNC71_IN_SEL_V",""],["GPIO_FUNC72_IN_INV_SEL_S",""],["GPIO_FUNC72_IN_INV_SEL_V",""],["GPIO_FUNC72_IN_SEL",""],["GPIO_FUNC72_IN_SEL_CFG_REG",""],["GPIO_FUNC72_IN_SEL_S",""],["GPIO_FUNC72_IN_SEL_V",""],["GPIO_FUNC73_IN_INV_SEL_S",""],["GPIO_FUNC73_IN_INV_SEL_V",""],["GPIO_FUNC73_IN_SEL",""],["GPIO_FUNC73_IN_SEL_CFG_REG",""],["GPIO_FUNC73_IN_SEL_S",""],["GPIO_FUNC73_IN_SEL_V",""],["GPIO_FUNC74_IN_INV_SEL_S",""],["GPIO_FUNC74_IN_INV_SEL_V",""],["GPIO_FUNC74_IN_SEL",""],["GPIO_FUNC74_IN_SEL_CFG_REG",""],["GPIO_FUNC74_IN_SEL_S",""],["GPIO_FUNC74_IN_SEL_V",""],["GPIO_FUNC75_IN_INV_SEL_S",""],["GPIO_FUNC75_IN_INV_SEL_V",""],["GPIO_FUNC75_IN_SEL",""],["GPIO_FUNC75_IN_SEL_CFG_REG",""],["GPIO_FUNC75_IN_SEL_S",""],["GPIO_FUNC75_IN_SEL_V",""],["GPIO_FUNC76_IN_INV_SEL_S",""],["GPIO_FUNC76_IN_INV_SEL_V",""],["GPIO_FUNC76_IN_SEL",""],["GPIO_FUNC76_IN_SEL_CFG_REG",""],["GPIO_FUNC76_IN_SEL_S",""],["GPIO_FUNC76_IN_SEL_V",""],["GPIO_FUNC77_IN_INV_SEL_S",""],["GPIO_FUNC77_IN_INV_SEL_V",""],["GPIO_FUNC77_IN_SEL",""],["GPIO_FUNC77_IN_SEL_CFG_REG",""],["GPIO_FUNC77_IN_SEL_S",""],["GPIO_FUNC77_IN_SEL_V",""],["GPIO_FUNC78_IN_INV_SEL_S",""],["GPIO_FUNC78_IN_INV_SEL_V",""],["GPIO_FUNC78_IN_SEL",""],["GPIO_FUNC78_IN_SEL_CFG_REG",""],["GPIO_FUNC78_IN_SEL_S",""],["GPIO_FUNC78_IN_SEL_V",""],["GPIO_FUNC79_IN_INV_SEL_S",""],["GPIO_FUNC79_IN_INV_SEL_V",""],["GPIO_FUNC79_IN_SEL",""],["GPIO_FUNC79_IN_SEL_CFG_REG",""],["GPIO_FUNC79_IN_SEL_S",""],["GPIO_FUNC79_IN_SEL_V",""],["GPIO_FUNC7_IN_INV_SEL_S",""],["GPIO_FUNC7_IN_INV_SEL_V",""],["GPIO_FUNC7_IN_SEL",""],["GPIO_FUNC7_IN_SEL_CFG_REG",""],["GPIO_FUNC7_IN_SEL_S",""],["GPIO_FUNC7_IN_SEL_V",""],["GPIO_FUNC7_OEN_INV_SEL_S",""],["GPIO_FUNC7_OEN_INV_SEL_V",""],["GPIO_FUNC7_OEN_SEL_S",""],["GPIO_FUNC7_OEN_SEL_V",""],["GPIO_FUNC7_OUT_INV_SEL_S",""],["GPIO_FUNC7_OUT_INV_SEL_V",""],["GPIO_FUNC7_OUT_SEL",""],["GPIO_FUNC7_OUT_SEL_CFG_REG",""],["GPIO_FUNC7_OUT_SEL_S",""],["GPIO_FUNC7_OUT_SEL_V",""],["GPIO_FUNC80_IN_INV_SEL_S",""],["GPIO_FUNC80_IN_INV_SEL_V",""],["GPIO_FUNC80_IN_SEL",""],["GPIO_FUNC80_IN_SEL_CFG_REG",""],["GPIO_FUNC80_IN_SEL_S",""],["GPIO_FUNC80_IN_SEL_V",""],["GPIO_FUNC81_IN_INV_SEL_S",""],["GPIO_FUNC81_IN_INV_SEL_V",""],["GPIO_FUNC81_IN_SEL",""],["GPIO_FUNC81_IN_SEL_CFG_REG",""],["GPIO_FUNC81_IN_SEL_S",""],["GPIO_FUNC81_IN_SEL_V",""],["GPIO_FUNC82_IN_INV_SEL_S",""],["GPIO_FUNC82_IN_INV_SEL_V",""],["GPIO_FUNC82_IN_SEL",""],["GPIO_FUNC82_IN_SEL_CFG_REG",""],["GPIO_FUNC82_IN_SEL_S",""],["GPIO_FUNC82_IN_SEL_V",""],["GPIO_FUNC83_IN_INV_SEL_S",""],["GPIO_FUNC83_IN_INV_SEL_V",""],["GPIO_FUNC83_IN_SEL",""],["GPIO_FUNC83_IN_SEL_CFG_REG",""],["GPIO_FUNC83_IN_SEL_S",""],["GPIO_FUNC83_IN_SEL_V",""],["GPIO_FUNC84_IN_INV_SEL_S",""],["GPIO_FUNC84_IN_INV_SEL_V",""],["GPIO_FUNC84_IN_SEL",""],["GPIO_FUNC84_IN_SEL_CFG_REG",""],["GPIO_FUNC84_IN_SEL_S",""],["GPIO_FUNC84_IN_SEL_V",""],["GPIO_FUNC85_IN_INV_SEL_S",""],["GPIO_FUNC85_IN_INV_SEL_V",""],["GPIO_FUNC85_IN_SEL",""],["GPIO_FUNC85_IN_SEL_CFG_REG",""],["GPIO_FUNC85_IN_SEL_S",""],["GPIO_FUNC85_IN_SEL_V",""],["GPIO_FUNC86_IN_INV_SEL_S",""],["GPIO_FUNC86_IN_INV_SEL_V",""],["GPIO_FUNC86_IN_SEL",""],["GPIO_FUNC86_IN_SEL_CFG_REG",""],["GPIO_FUNC86_IN_SEL_S",""],["GPIO_FUNC86_IN_SEL_V",""],["GPIO_FUNC87_IN_INV_SEL_S",""],["GPIO_FUNC87_IN_INV_SEL_V",""],["GPIO_FUNC87_IN_SEL",""],["GPIO_FUNC87_IN_SEL_CFG_REG",""],["GPIO_FUNC87_IN_SEL_S",""],["GPIO_FUNC87_IN_SEL_V",""],["GPIO_FUNC88_IN_INV_SEL_S",""],["GPIO_FUNC88_IN_INV_SEL_V",""],["GPIO_FUNC88_IN_SEL",""],["GPIO_FUNC88_IN_SEL_CFG_REG",""],["GPIO_FUNC88_IN_SEL_S",""],["GPIO_FUNC88_IN_SEL_V",""],["GPIO_FUNC89_IN_INV_SEL_S",""],["GPIO_FUNC89_IN_INV_SEL_V",""],["GPIO_FUNC89_IN_SEL",""],["GPIO_FUNC89_IN_SEL_CFG_REG",""],["GPIO_FUNC89_IN_SEL_S",""],["GPIO_FUNC89_IN_SEL_V",""],["GPIO_FUNC8_IN_INV_SEL_S",""],["GPIO_FUNC8_IN_INV_SEL_V",""],["GPIO_FUNC8_IN_SEL",""],["GPIO_FUNC8_IN_SEL_CFG_REG",""],["GPIO_FUNC8_IN_SEL_S",""],["GPIO_FUNC8_IN_SEL_V",""],["GPIO_FUNC8_OEN_INV_SEL_S",""],["GPIO_FUNC8_OEN_INV_SEL_V",""],["GPIO_FUNC8_OEN_SEL_S",""],["GPIO_FUNC8_OEN_SEL_V",""],["GPIO_FUNC8_OUT_INV_SEL_S",""],["GPIO_FUNC8_OUT_INV_SEL_V",""],["GPIO_FUNC8_OUT_SEL",""],["GPIO_FUNC8_OUT_SEL_CFG_REG",""],["GPIO_FUNC8_OUT_SEL_S",""],["GPIO_FUNC8_OUT_SEL_V",""],["GPIO_FUNC90_IN_INV_SEL_S",""],["GPIO_FUNC90_IN_INV_SEL_V",""],["GPIO_FUNC90_IN_SEL",""],["GPIO_FUNC90_IN_SEL_CFG_REG",""],["GPIO_FUNC90_IN_SEL_S",""],["GPIO_FUNC90_IN_SEL_V",""],["GPIO_FUNC91_IN_INV_SEL_S",""],["GPIO_FUNC91_IN_INV_SEL_V",""],["GPIO_FUNC91_IN_SEL",""],["GPIO_FUNC91_IN_SEL_CFG_REG",""],["GPIO_FUNC91_IN_SEL_S",""],["GPIO_FUNC91_IN_SEL_V",""],["GPIO_FUNC92_IN_INV_SEL_S",""],["GPIO_FUNC92_IN_INV_SEL_V",""],["GPIO_FUNC92_IN_SEL",""],["GPIO_FUNC92_IN_SEL_CFG_REG",""],["GPIO_FUNC92_IN_SEL_S",""],["GPIO_FUNC92_IN_SEL_V",""],["GPIO_FUNC93_IN_INV_SEL_S",""],["GPIO_FUNC93_IN_INV_SEL_V",""],["GPIO_FUNC93_IN_SEL",""],["GPIO_FUNC93_IN_SEL_CFG_REG",""],["GPIO_FUNC93_IN_SEL_S",""],["GPIO_FUNC93_IN_SEL_V",""],["GPIO_FUNC94_IN_INV_SEL_S",""],["GPIO_FUNC94_IN_INV_SEL_V",""],["GPIO_FUNC94_IN_SEL",""],["GPIO_FUNC94_IN_SEL_CFG_REG",""],["GPIO_FUNC94_IN_SEL_S",""],["GPIO_FUNC94_IN_SEL_V",""],["GPIO_FUNC95_IN_INV_SEL_S",""],["GPIO_FUNC95_IN_INV_SEL_V",""],["GPIO_FUNC95_IN_SEL",""],["GPIO_FUNC95_IN_SEL_CFG_REG",""],["GPIO_FUNC95_IN_SEL_S",""],["GPIO_FUNC95_IN_SEL_V",""],["GPIO_FUNC96_IN_INV_SEL_S",""],["GPIO_FUNC96_IN_INV_SEL_V",""],["GPIO_FUNC96_IN_SEL",""],["GPIO_FUNC96_IN_SEL_CFG_REG",""],["GPIO_FUNC96_IN_SEL_S",""],["GPIO_FUNC96_IN_SEL_V",""],["GPIO_FUNC97_IN_INV_SEL_S",""],["GPIO_FUNC97_IN_INV_SEL_V",""],["GPIO_FUNC97_IN_SEL",""],["GPIO_FUNC97_IN_SEL_CFG_REG",""],["GPIO_FUNC97_IN_SEL_S",""],["GPIO_FUNC97_IN_SEL_V",""],["GPIO_FUNC98_IN_INV_SEL_S",""],["GPIO_FUNC98_IN_INV_SEL_V",""],["GPIO_FUNC98_IN_SEL",""],["GPIO_FUNC98_IN_SEL_CFG_REG",""],["GPIO_FUNC98_IN_SEL_S",""],["GPIO_FUNC98_IN_SEL_V",""],["GPIO_FUNC99_IN_INV_SEL_S",""],["GPIO_FUNC99_IN_INV_SEL_V",""],["GPIO_FUNC99_IN_SEL",""],["GPIO_FUNC99_IN_SEL_CFG_REG",""],["GPIO_FUNC99_IN_SEL_S",""],["GPIO_FUNC99_IN_SEL_V",""],["GPIO_FUNC9_IN_INV_SEL_S",""],["GPIO_FUNC9_IN_INV_SEL_V",""],["GPIO_FUNC9_IN_SEL",""],["GPIO_FUNC9_IN_SEL_CFG_REG",""],["GPIO_FUNC9_IN_SEL_S",""],["GPIO_FUNC9_IN_SEL_V",""],["GPIO_FUNC9_OEN_INV_SEL_S",""],["GPIO_FUNC9_OEN_INV_SEL_V",""],["GPIO_FUNC9_OEN_SEL_S",""],["GPIO_FUNC9_OEN_SEL_V",""],["GPIO_FUNC9_OUT_INV_SEL_S",""],["GPIO_FUNC9_OUT_INV_SEL_V",""],["GPIO_FUNC9_OUT_SEL",""],["GPIO_FUNC9_OUT_SEL_CFG_REG",""],["GPIO_FUNC9_OUT_SEL_S",""],["GPIO_FUNC9_OUT_SEL_V",""],["GPIO_FUNCTION_CLK_EN_S",""],["GPIO_FUNCTION_CLK_EN_V",""],["GPIO_FUNC_IN_HIGH",""],["GPIO_FUNC_IN_LOW",""],["GPIO_ID_PIN0",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_ANYEDGE",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_DISABLE",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_HILEVEL",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_LOLEVEL",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_NEGEDGE",""],["GPIO_INT_TYPE_GPIO_PIN_INTR_POSEDGE",""],["GPIO_IN_DATA",""],["GPIO_IN_DATA_S",""],["GPIO_IN_DATA_V",""],["GPIO_IN_REG",""],["GPIO_LC_DIAG0_IDX",""],["GPIO_LC_DIAG1_IDX",""],["GPIO_LC_DIAG2_IDX",""],["GPIO_MAP_DATE_IDX",""],["GPIO_MATRIX_CONST_ONE_INPUT",""],["GPIO_MATRIX_CONST_ZERO_INPUT",""],["GPIO_MATRIX_DELAY_NS",""],["GPIO_MODE_DEF_DISABLE",""],["GPIO_MODE_DEF_INPUT",""],["GPIO_MODE_DEF_OD",""],["GPIO_MODE_DEF_OUTPUT",""],["GPIO_OUT_DATA",""],["GPIO_OUT_DATA_S",""],["GPIO_OUT_DATA_V",""],["GPIO_OUT_REG",""],["GPIO_OUT_W1TC",""],["GPIO_OUT_W1TC_REG",""],["GPIO_OUT_W1TC_S",""],["GPIO_OUT_W1TC_V",""],["GPIO_OUT_W1TS",""],["GPIO_OUT_W1TS_REG",""],["GPIO_OUT_W1TS_S",""],["GPIO_OUT_W1TS_V",""],["GPIO_PAD_DRIVER_DISABLE",""],["GPIO_PAD_DRIVER_ENABLE",""],["GPIO_PCPU_INT_REG",""],["GPIO_PCPU_NMI_INT_REG",""],["GPIO_PIN0_CONFIG",""],["GPIO_PIN0_CONFIG_S",""],["GPIO_PIN0_CONFIG_V",""],["GPIO_PIN0_INT_ENA",""],["GPIO_PIN0_INT_ENA_S",""],["GPIO_PIN0_INT_ENA_V",""],["GPIO_PIN0_INT_TYPE",""],["GPIO_PIN0_INT_TYPE_S",""],["GPIO_PIN0_INT_TYPE_V",""],["GPIO_PIN0_PAD_DRIVER_S",""],["GPIO_PIN0_PAD_DRIVER_V",""],["GPIO_PIN0_REG",""],["GPIO_PIN0_SYNC1_BYPASS",""],["GPIO_PIN0_SYNC1_BYPASS_S",""],["GPIO_PIN0_SYNC1_BYPASS_V",""],["GPIO_PIN0_SYNC2_BYPASS",""],["GPIO_PIN0_SYNC2_BYPASS_S",""],["GPIO_PIN0_SYNC2_BYPASS_V",""],["GPIO_PIN0_WAKEUP_ENABLE_S",""],["GPIO_PIN0_WAKEUP_ENABLE_V",""],["GPIO_PIN10_CONFIG",""],["GPIO_PIN10_CONFIG_S",""],["GPIO_PIN10_CONFIG_V",""],["GPIO_PIN10_INT_ENA",""],["GPIO_PIN10_INT_ENA_S",""],["GPIO_PIN10_INT_ENA_V",""],["GPIO_PIN10_INT_TYPE",""],["GPIO_PIN10_INT_TYPE_S",""],["GPIO_PIN10_INT_TYPE_V",""],["GPIO_PIN10_PAD_DRIVER_S",""],["GPIO_PIN10_PAD_DRIVER_V",""],["GPIO_PIN10_REG",""],["GPIO_PIN10_SYNC1_BYPASS",""],["GPIO_PIN10_SYNC1_BYPASS_S",""],["GPIO_PIN10_SYNC1_BYPASS_V",""],["GPIO_PIN10_SYNC2_BYPASS",""],["GPIO_PIN10_SYNC2_BYPASS_S",""],["GPIO_PIN10_SYNC2_BYPASS_V",""],["GPIO_PIN10_WAKEUP_ENABLE_S",""],["GPIO_PIN10_WAKEUP_ENABLE_V",""],["GPIO_PIN11_CONFIG",""],["GPIO_PIN11_CONFIG_S",""],["GPIO_PIN11_CONFIG_V",""],["GPIO_PIN11_INT_ENA",""],["GPIO_PIN11_INT_ENA_S",""],["GPIO_PIN11_INT_ENA_V",""],["GPIO_PIN11_INT_TYPE",""],["GPIO_PIN11_INT_TYPE_S",""],["GPIO_PIN11_INT_TYPE_V",""],["GPIO_PIN11_PAD_DRIVER_S",""],["GPIO_PIN11_PAD_DRIVER_V",""],["GPIO_PIN11_REG",""],["GPIO_PIN11_SYNC1_BYPASS",""],["GPIO_PIN11_SYNC1_BYPASS_S",""],["GPIO_PIN11_SYNC1_BYPASS_V",""],["GPIO_PIN11_SYNC2_BYPASS",""],["GPIO_PIN11_SYNC2_BYPASS_S",""],["GPIO_PIN11_SYNC2_BYPASS_V",""],["GPIO_PIN11_WAKEUP_ENABLE_S",""],["GPIO_PIN11_WAKEUP_ENABLE_V",""],["GPIO_PIN12_CONFIG",""],["GPIO_PIN12_CONFIG_S",""],["GPIO_PIN12_CONFIG_V",""],["GPIO_PIN12_INT_ENA",""],["GPIO_PIN12_INT_ENA_S",""],["GPIO_PIN12_INT_ENA_V",""],["GPIO_PIN12_INT_TYPE",""],["GPIO_PIN12_INT_TYPE_S",""],["GPIO_PIN12_INT_TYPE_V",""],["GPIO_PIN12_PAD_DRIVER_S",""],["GPIO_PIN12_PAD_DRIVER_V",""],["GPIO_PIN12_REG",""],["GPIO_PIN12_SYNC1_BYPASS",""],["GPIO_PIN12_SYNC1_BYPASS_S",""],["GPIO_PIN12_SYNC1_BYPASS_V",""],["GPIO_PIN12_SYNC2_BYPASS",""],["GPIO_PIN12_SYNC2_BYPASS_S",""],["GPIO_PIN12_SYNC2_BYPASS_V",""],["GPIO_PIN12_WAKEUP_ENABLE_S",""],["GPIO_PIN12_WAKEUP_ENABLE_V",""],["GPIO_PIN13_CONFIG",""],["GPIO_PIN13_CONFIG_S",""],["GPIO_PIN13_CONFIG_V",""],["GPIO_PIN13_INT_ENA",""],["GPIO_PIN13_INT_ENA_S",""],["GPIO_PIN13_INT_ENA_V",""],["GPIO_PIN13_INT_TYPE",""],["GPIO_PIN13_INT_TYPE_S",""],["GPIO_PIN13_INT_TYPE_V",""],["GPIO_PIN13_PAD_DRIVER_S",""],["GPIO_PIN13_PAD_DRIVER_V",""],["GPIO_PIN13_REG",""],["GPIO_PIN13_SYNC1_BYPASS",""],["GPIO_PIN13_SYNC1_BYPASS_S",""],["GPIO_PIN13_SYNC1_BYPASS_V",""],["GPIO_PIN13_SYNC2_BYPASS",""],["GPIO_PIN13_SYNC2_BYPASS_S",""],["GPIO_PIN13_SYNC2_BYPASS_V",""],["GPIO_PIN13_WAKEUP_ENABLE_S",""],["GPIO_PIN13_WAKEUP_ENABLE_V",""],["GPIO_PIN14_CONFIG",""],["GPIO_PIN14_CONFIG_S",""],["GPIO_PIN14_CONFIG_V",""],["GPIO_PIN14_INT_ENA",""],["GPIO_PIN14_INT_ENA_S",""],["GPIO_PIN14_INT_ENA_V",""],["GPIO_PIN14_INT_TYPE",""],["GPIO_PIN14_INT_TYPE_S",""],["GPIO_PIN14_INT_TYPE_V",""],["GPIO_PIN14_PAD_DRIVER_S",""],["GPIO_PIN14_PAD_DRIVER_V",""],["GPIO_PIN14_REG",""],["GPIO_PIN14_SYNC1_BYPASS",""],["GPIO_PIN14_SYNC1_BYPASS_S",""],["GPIO_PIN14_SYNC1_BYPASS_V",""],["GPIO_PIN14_SYNC2_BYPASS",""],["GPIO_PIN14_SYNC2_BYPASS_S",""],["GPIO_PIN14_SYNC2_BYPASS_V",""],["GPIO_PIN14_WAKEUP_ENABLE_S",""],["GPIO_PIN14_WAKEUP_ENABLE_V",""],["GPIO_PIN15_CONFIG",""],["GPIO_PIN15_CONFIG_S",""],["GPIO_PIN15_CONFIG_V",""],["GPIO_PIN15_INT_ENA",""],["GPIO_PIN15_INT_ENA_S",""],["GPIO_PIN15_INT_ENA_V",""],["GPIO_PIN15_INT_TYPE",""],["GPIO_PIN15_INT_TYPE_S",""],["GPIO_PIN15_INT_TYPE_V",""],["GPIO_PIN15_PAD_DRIVER_S",""],["GPIO_PIN15_PAD_DRIVER_V",""],["GPIO_PIN15_REG",""],["GPIO_PIN15_SYNC1_BYPASS",""],["GPIO_PIN15_SYNC1_BYPASS_S",""],["GPIO_PIN15_SYNC1_BYPASS_V",""],["GPIO_PIN15_SYNC2_BYPASS",""],["GPIO_PIN15_SYNC2_BYPASS_S",""],["GPIO_PIN15_SYNC2_BYPASS_V",""],["GPIO_PIN15_WAKEUP_ENABLE_S",""],["GPIO_PIN15_WAKEUP_ENABLE_V",""],["GPIO_PIN16_CONFIG",""],["GPIO_PIN16_CONFIG_S",""],["GPIO_PIN16_CONFIG_V",""],["GPIO_PIN16_INT_ENA",""],["GPIO_PIN16_INT_ENA_S",""],["GPIO_PIN16_INT_ENA_V",""],["GPIO_PIN16_INT_TYPE",""],["GPIO_PIN16_INT_TYPE_S",""],["GPIO_PIN16_INT_TYPE_V",""],["GPIO_PIN16_PAD_DRIVER_S",""],["GPIO_PIN16_PAD_DRIVER_V",""],["GPIO_PIN16_REG",""],["GPIO_PIN16_SYNC1_BYPASS",""],["GPIO_PIN16_SYNC1_BYPASS_S",""],["GPIO_PIN16_SYNC1_BYPASS_V",""],["GPIO_PIN16_SYNC2_BYPASS",""],["GPIO_PIN16_SYNC2_BYPASS_S",""],["GPIO_PIN16_SYNC2_BYPASS_V",""],["GPIO_PIN16_WAKEUP_ENABLE_S",""],["GPIO_PIN16_WAKEUP_ENABLE_V",""],["GPIO_PIN17_CONFIG",""],["GPIO_PIN17_CONFIG_S",""],["GPIO_PIN17_CONFIG_V",""],["GPIO_PIN17_INT_ENA",""],["GPIO_PIN17_INT_ENA_S",""],["GPIO_PIN17_INT_ENA_V",""],["GPIO_PIN17_INT_TYPE",""],["GPIO_PIN17_INT_TYPE_S",""],["GPIO_PIN17_INT_TYPE_V",""],["GPIO_PIN17_PAD_DRIVER_S",""],["GPIO_PIN17_PAD_DRIVER_V",""],["GPIO_PIN17_REG",""],["GPIO_PIN17_SYNC1_BYPASS",""],["GPIO_PIN17_SYNC1_BYPASS_S",""],["GPIO_PIN17_SYNC1_BYPASS_V",""],["GPIO_PIN17_SYNC2_BYPASS",""],["GPIO_PIN17_SYNC2_BYPASS_S",""],["GPIO_PIN17_SYNC2_BYPASS_V",""],["GPIO_PIN17_WAKEUP_ENABLE_S",""],["GPIO_PIN17_WAKEUP_ENABLE_V",""],["GPIO_PIN18_CONFIG",""],["GPIO_PIN18_CONFIG_S",""],["GPIO_PIN18_CONFIG_V",""],["GPIO_PIN18_INT_ENA",""],["GPIO_PIN18_INT_ENA_S",""],["GPIO_PIN18_INT_ENA_V",""],["GPIO_PIN18_INT_TYPE",""],["GPIO_PIN18_INT_TYPE_S",""],["GPIO_PIN18_INT_TYPE_V",""],["GPIO_PIN18_PAD_DRIVER_S",""],["GPIO_PIN18_PAD_DRIVER_V",""],["GPIO_PIN18_REG",""],["GPIO_PIN18_SYNC1_BYPASS",""],["GPIO_PIN18_SYNC1_BYPASS_S",""],["GPIO_PIN18_SYNC1_BYPASS_V",""],["GPIO_PIN18_SYNC2_BYPASS",""],["GPIO_PIN18_SYNC2_BYPASS_S",""],["GPIO_PIN18_SYNC2_BYPASS_V",""],["GPIO_PIN18_WAKEUP_ENABLE_S",""],["GPIO_PIN18_WAKEUP_ENABLE_V",""],["GPIO_PIN19_CONFIG",""],["GPIO_PIN19_CONFIG_S",""],["GPIO_PIN19_CONFIG_V",""],["GPIO_PIN19_INT_ENA",""],["GPIO_PIN19_INT_ENA_S",""],["GPIO_PIN19_INT_ENA_V",""],["GPIO_PIN19_INT_TYPE",""],["GPIO_PIN19_INT_TYPE_S",""],["GPIO_PIN19_INT_TYPE_V",""],["GPIO_PIN19_PAD_DRIVER_S",""],["GPIO_PIN19_PAD_DRIVER_V",""],["GPIO_PIN19_REG",""],["GPIO_PIN19_SYNC1_BYPASS",""],["GPIO_PIN19_SYNC1_BYPASS_S",""],["GPIO_PIN19_SYNC1_BYPASS_V",""],["GPIO_PIN19_SYNC2_BYPASS",""],["GPIO_PIN19_SYNC2_BYPASS_S",""],["GPIO_PIN19_SYNC2_BYPASS_V",""],["GPIO_PIN19_WAKEUP_ENABLE_S",""],["GPIO_PIN19_WAKEUP_ENABLE_V",""],["GPIO_PIN1_CONFIG",""],["GPIO_PIN1_CONFIG_S",""],["GPIO_PIN1_CONFIG_V",""],["GPIO_PIN1_INT_ENA",""],["GPIO_PIN1_INT_ENA_S",""],["GPIO_PIN1_INT_ENA_V",""],["GPIO_PIN1_INT_TYPE",""],["GPIO_PIN1_INT_TYPE_S",""],["GPIO_PIN1_INT_TYPE_V",""],["GPIO_PIN1_PAD_DRIVER_S",""],["GPIO_PIN1_PAD_DRIVER_V",""],["GPIO_PIN1_REG",""],["GPIO_PIN1_SYNC1_BYPASS",""],["GPIO_PIN1_SYNC1_BYPASS_S",""],["GPIO_PIN1_SYNC1_BYPASS_V",""],["GPIO_PIN1_SYNC2_BYPASS",""],["GPIO_PIN1_SYNC2_BYPASS_S",""],["GPIO_PIN1_SYNC2_BYPASS_V",""],["GPIO_PIN1_WAKEUP_ENABLE_S",""],["GPIO_PIN1_WAKEUP_ENABLE_V",""],["GPIO_PIN20_CONFIG",""],["GPIO_PIN20_CONFIG_S",""],["GPIO_PIN20_CONFIG_V",""],["GPIO_PIN20_INT_ENA",""],["GPIO_PIN20_INT_ENA_S",""],["GPIO_PIN20_INT_ENA_V",""],["GPIO_PIN20_INT_TYPE",""],["GPIO_PIN20_INT_TYPE_S",""],["GPIO_PIN20_INT_TYPE_V",""],["GPIO_PIN20_PAD_DRIVER_S",""],["GPIO_PIN20_PAD_DRIVER_V",""],["GPIO_PIN20_REG",""],["GPIO_PIN20_SYNC1_BYPASS",""],["GPIO_PIN20_SYNC1_BYPASS_S",""],["GPIO_PIN20_SYNC1_BYPASS_V",""],["GPIO_PIN20_SYNC2_BYPASS",""],["GPIO_PIN20_SYNC2_BYPASS_S",""],["GPIO_PIN20_SYNC2_BYPASS_V",""],["GPIO_PIN20_WAKEUP_ENABLE_S",""],["GPIO_PIN20_WAKEUP_ENABLE_V",""],["GPIO_PIN21_CONFIG",""],["GPIO_PIN21_CONFIG_S",""],["GPIO_PIN21_CONFIG_V",""],["GPIO_PIN21_INT_ENA",""],["GPIO_PIN21_INT_ENA_S",""],["GPIO_PIN21_INT_ENA_V",""],["GPIO_PIN21_INT_TYPE",""],["GPIO_PIN21_INT_TYPE_S",""],["GPIO_PIN21_INT_TYPE_V",""],["GPIO_PIN21_PAD_DRIVER_S",""],["GPIO_PIN21_PAD_DRIVER_V",""],["GPIO_PIN21_REG",""],["GPIO_PIN21_SYNC1_BYPASS",""],["GPIO_PIN21_SYNC1_BYPASS_S",""],["GPIO_PIN21_SYNC1_BYPASS_V",""],["GPIO_PIN21_SYNC2_BYPASS",""],["GPIO_PIN21_SYNC2_BYPASS_S",""],["GPIO_PIN21_SYNC2_BYPASS_V",""],["GPIO_PIN21_WAKEUP_ENABLE_S",""],["GPIO_PIN21_WAKEUP_ENABLE_V",""],["GPIO_PIN22_CONFIG",""],["GPIO_PIN22_CONFIG_S",""],["GPIO_PIN22_CONFIG_V",""],["GPIO_PIN22_INT_ENA",""],["GPIO_PIN22_INT_ENA_S",""],["GPIO_PIN22_INT_ENA_V",""],["GPIO_PIN22_INT_TYPE",""],["GPIO_PIN22_INT_TYPE_S",""],["GPIO_PIN22_INT_TYPE_V",""],["GPIO_PIN22_PAD_DRIVER_S",""],["GPIO_PIN22_PAD_DRIVER_V",""],["GPIO_PIN22_REG",""],["GPIO_PIN22_SYNC1_BYPASS",""],["GPIO_PIN22_SYNC1_BYPASS_S",""],["GPIO_PIN22_SYNC1_BYPASS_V",""],["GPIO_PIN22_SYNC2_BYPASS",""],["GPIO_PIN22_SYNC2_BYPASS_S",""],["GPIO_PIN22_SYNC2_BYPASS_V",""],["GPIO_PIN22_WAKEUP_ENABLE_S",""],["GPIO_PIN22_WAKEUP_ENABLE_V",""],["GPIO_PIN23_CONFIG",""],["GPIO_PIN23_CONFIG_S",""],["GPIO_PIN23_CONFIG_V",""],["GPIO_PIN23_INT_ENA",""],["GPIO_PIN23_INT_ENA_S",""],["GPIO_PIN23_INT_ENA_V",""],["GPIO_PIN23_INT_TYPE",""],["GPIO_PIN23_INT_TYPE_S",""],["GPIO_PIN23_INT_TYPE_V",""],["GPIO_PIN23_PAD_DRIVER_S",""],["GPIO_PIN23_PAD_DRIVER_V",""],["GPIO_PIN23_REG",""],["GPIO_PIN23_SYNC1_BYPASS",""],["GPIO_PIN23_SYNC1_BYPASS_S",""],["GPIO_PIN23_SYNC1_BYPASS_V",""],["GPIO_PIN23_SYNC2_BYPASS",""],["GPIO_PIN23_SYNC2_BYPASS_S",""],["GPIO_PIN23_SYNC2_BYPASS_V",""],["GPIO_PIN23_WAKEUP_ENABLE_S",""],["GPIO_PIN23_WAKEUP_ENABLE_V",""],["GPIO_PIN24_CONFIG",""],["GPIO_PIN24_CONFIG_S",""],["GPIO_PIN24_CONFIG_V",""],["GPIO_PIN24_INT_ENA",""],["GPIO_PIN24_INT_ENA_S",""],["GPIO_PIN24_INT_ENA_V",""],["GPIO_PIN24_INT_TYPE",""],["GPIO_PIN24_INT_TYPE_S",""],["GPIO_PIN24_INT_TYPE_V",""],["GPIO_PIN24_PAD_DRIVER_S",""],["GPIO_PIN24_PAD_DRIVER_V",""],["GPIO_PIN24_REG",""],["GPIO_PIN24_SYNC1_BYPASS",""],["GPIO_PIN24_SYNC1_BYPASS_S",""],["GPIO_PIN24_SYNC1_BYPASS_V",""],["GPIO_PIN24_SYNC2_BYPASS",""],["GPIO_PIN24_SYNC2_BYPASS_S",""],["GPIO_PIN24_SYNC2_BYPASS_V",""],["GPIO_PIN24_WAKEUP_ENABLE_S",""],["GPIO_PIN24_WAKEUP_ENABLE_V",""],["GPIO_PIN25_CONFIG",""],["GPIO_PIN25_CONFIG_S",""],["GPIO_PIN25_CONFIG_V",""],["GPIO_PIN25_INT_ENA",""],["GPIO_PIN25_INT_ENA_S",""],["GPIO_PIN25_INT_ENA_V",""],["GPIO_PIN25_INT_TYPE",""],["GPIO_PIN25_INT_TYPE_S",""],["GPIO_PIN25_INT_TYPE_V",""],["GPIO_PIN25_PAD_DRIVER_S",""],["GPIO_PIN25_PAD_DRIVER_V",""],["GPIO_PIN25_REG",""],["GPIO_PIN25_SYNC1_BYPASS",""],["GPIO_PIN25_SYNC1_BYPASS_S",""],["GPIO_PIN25_SYNC1_BYPASS_V",""],["GPIO_PIN25_SYNC2_BYPASS",""],["GPIO_PIN25_SYNC2_BYPASS_S",""],["GPIO_PIN25_SYNC2_BYPASS_V",""],["GPIO_PIN25_WAKEUP_ENABLE_S",""],["GPIO_PIN25_WAKEUP_ENABLE_V",""],["GPIO_PIN2_CONFIG",""],["GPIO_PIN2_CONFIG_S",""],["GPIO_PIN2_CONFIG_V",""],["GPIO_PIN2_INT_ENA",""],["GPIO_PIN2_INT_ENA_S",""],["GPIO_PIN2_INT_ENA_V",""],["GPIO_PIN2_INT_TYPE",""],["GPIO_PIN2_INT_TYPE_S",""],["GPIO_PIN2_INT_TYPE_V",""],["GPIO_PIN2_PAD_DRIVER_S",""],["GPIO_PIN2_PAD_DRIVER_V",""],["GPIO_PIN2_REG",""],["GPIO_PIN2_SYNC1_BYPASS",""],["GPIO_PIN2_SYNC1_BYPASS_S",""],["GPIO_PIN2_SYNC1_BYPASS_V",""],["GPIO_PIN2_SYNC2_BYPASS",""],["GPIO_PIN2_SYNC2_BYPASS_S",""],["GPIO_PIN2_SYNC2_BYPASS_V",""],["GPIO_PIN2_WAKEUP_ENABLE_S",""],["GPIO_PIN2_WAKEUP_ENABLE_V",""],["GPIO_PIN3_CONFIG",""],["GPIO_PIN3_CONFIG_S",""],["GPIO_PIN3_CONFIG_V",""],["GPIO_PIN3_INT_ENA",""],["GPIO_PIN3_INT_ENA_S",""],["GPIO_PIN3_INT_ENA_V",""],["GPIO_PIN3_INT_TYPE",""],["GPIO_PIN3_INT_TYPE_S",""],["GPIO_PIN3_INT_TYPE_V",""],["GPIO_PIN3_PAD_DRIVER_S",""],["GPIO_PIN3_PAD_DRIVER_V",""],["GPIO_PIN3_REG",""],["GPIO_PIN3_SYNC1_BYPASS",""],["GPIO_PIN3_SYNC1_BYPASS_S",""],["GPIO_PIN3_SYNC1_BYPASS_V",""],["GPIO_PIN3_SYNC2_BYPASS",""],["GPIO_PIN3_SYNC2_BYPASS_S",""],["GPIO_PIN3_SYNC2_BYPASS_V",""],["GPIO_PIN3_WAKEUP_ENABLE_S",""],["GPIO_PIN3_WAKEUP_ENABLE_V",""],["GPIO_PIN4_CONFIG",""],["GPIO_PIN4_CONFIG_S",""],["GPIO_PIN4_CONFIG_V",""],["GPIO_PIN4_INT_ENA",""],["GPIO_PIN4_INT_ENA_S",""],["GPIO_PIN4_INT_ENA_V",""],["GPIO_PIN4_INT_TYPE",""],["GPIO_PIN4_INT_TYPE_S",""],["GPIO_PIN4_INT_TYPE_V",""],["GPIO_PIN4_PAD_DRIVER_S",""],["GPIO_PIN4_PAD_DRIVER_V",""],["GPIO_PIN4_REG",""],["GPIO_PIN4_SYNC1_BYPASS",""],["GPIO_PIN4_SYNC1_BYPASS_S",""],["GPIO_PIN4_SYNC1_BYPASS_V",""],["GPIO_PIN4_SYNC2_BYPASS",""],["GPIO_PIN4_SYNC2_BYPASS_S",""],["GPIO_PIN4_SYNC2_BYPASS_V",""],["GPIO_PIN4_WAKEUP_ENABLE_S",""],["GPIO_PIN4_WAKEUP_ENABLE_V",""],["GPIO_PIN5_CONFIG",""],["GPIO_PIN5_CONFIG_S",""],["GPIO_PIN5_CONFIG_V",""],["GPIO_PIN5_INT_ENA",""],["GPIO_PIN5_INT_ENA_S",""],["GPIO_PIN5_INT_ENA_V",""],["GPIO_PIN5_INT_TYPE",""],["GPIO_PIN5_INT_TYPE_S",""],["GPIO_PIN5_INT_TYPE_V",""],["GPIO_PIN5_PAD_DRIVER_S",""],["GPIO_PIN5_PAD_DRIVER_V",""],["GPIO_PIN5_REG",""],["GPIO_PIN5_SYNC1_BYPASS",""],["GPIO_PIN5_SYNC1_BYPASS_S",""],["GPIO_PIN5_SYNC1_BYPASS_V",""],["GPIO_PIN5_SYNC2_BYPASS",""],["GPIO_PIN5_SYNC2_BYPASS_S",""],["GPIO_PIN5_SYNC2_BYPASS_V",""],["GPIO_PIN5_WAKEUP_ENABLE_S",""],["GPIO_PIN5_WAKEUP_ENABLE_V",""],["GPIO_PIN6_CONFIG",""],["GPIO_PIN6_CONFIG_S",""],["GPIO_PIN6_CONFIG_V",""],["GPIO_PIN6_INT_ENA",""],["GPIO_PIN6_INT_ENA_S",""],["GPIO_PIN6_INT_ENA_V",""],["GPIO_PIN6_INT_TYPE",""],["GPIO_PIN6_INT_TYPE_S",""],["GPIO_PIN6_INT_TYPE_V",""],["GPIO_PIN6_PAD_DRIVER_S",""],["GPIO_PIN6_PAD_DRIVER_V",""],["GPIO_PIN6_REG",""],["GPIO_PIN6_SYNC1_BYPASS",""],["GPIO_PIN6_SYNC1_BYPASS_S",""],["GPIO_PIN6_SYNC1_BYPASS_V",""],["GPIO_PIN6_SYNC2_BYPASS",""],["GPIO_PIN6_SYNC2_BYPASS_S",""],["GPIO_PIN6_SYNC2_BYPASS_V",""],["GPIO_PIN6_WAKEUP_ENABLE_S",""],["GPIO_PIN6_WAKEUP_ENABLE_V",""],["GPIO_PIN7_CONFIG",""],["GPIO_PIN7_CONFIG_S",""],["GPIO_PIN7_CONFIG_V",""],["GPIO_PIN7_INT_ENA",""],["GPIO_PIN7_INT_ENA_S",""],["GPIO_PIN7_INT_ENA_V",""],["GPIO_PIN7_INT_TYPE",""],["GPIO_PIN7_INT_TYPE_S",""],["GPIO_PIN7_INT_TYPE_V",""],["GPIO_PIN7_PAD_DRIVER_S",""],["GPIO_PIN7_PAD_DRIVER_V",""],["GPIO_PIN7_REG",""],["GPIO_PIN7_SYNC1_BYPASS",""],["GPIO_PIN7_SYNC1_BYPASS_S",""],["GPIO_PIN7_SYNC1_BYPASS_V",""],["GPIO_PIN7_SYNC2_BYPASS",""],["GPIO_PIN7_SYNC2_BYPASS_S",""],["GPIO_PIN7_SYNC2_BYPASS_V",""],["GPIO_PIN7_WAKEUP_ENABLE_S",""],["GPIO_PIN7_WAKEUP_ENABLE_V",""],["GPIO_PIN8_CONFIG",""],["GPIO_PIN8_CONFIG_S",""],["GPIO_PIN8_CONFIG_V",""],["GPIO_PIN8_INT_ENA",""],["GPIO_PIN8_INT_ENA_S",""],["GPIO_PIN8_INT_ENA_V",""],["GPIO_PIN8_INT_TYPE",""],["GPIO_PIN8_INT_TYPE_S",""],["GPIO_PIN8_INT_TYPE_V",""],["GPIO_PIN8_PAD_DRIVER_S",""],["GPIO_PIN8_PAD_DRIVER_V",""],["GPIO_PIN8_REG",""],["GPIO_PIN8_SYNC1_BYPASS",""],["GPIO_PIN8_SYNC1_BYPASS_S",""],["GPIO_PIN8_SYNC1_BYPASS_V",""],["GPIO_PIN8_SYNC2_BYPASS",""],["GPIO_PIN8_SYNC2_BYPASS_S",""],["GPIO_PIN8_SYNC2_BYPASS_V",""],["GPIO_PIN8_WAKEUP_ENABLE_S",""],["GPIO_PIN8_WAKEUP_ENABLE_V",""],["GPIO_PIN9_CONFIG",""],["GPIO_PIN9_CONFIG_S",""],["GPIO_PIN9_CONFIG_V",""],["GPIO_PIN9_INT_ENA",""],["GPIO_PIN9_INT_ENA_S",""],["GPIO_PIN9_INT_ENA_V",""],["GPIO_PIN9_INT_TYPE",""],["GPIO_PIN9_INT_TYPE_S",""],["GPIO_PIN9_INT_TYPE_V",""],["GPIO_PIN9_PAD_DRIVER_S",""],["GPIO_PIN9_PAD_DRIVER_V",""],["GPIO_PIN9_REG",""],["GPIO_PIN9_SYNC1_BYPASS",""],["GPIO_PIN9_SYNC1_BYPASS_S",""],["GPIO_PIN9_SYNC1_BYPASS_V",""],["GPIO_PIN9_SYNC2_BYPASS",""],["GPIO_PIN9_SYNC2_BYPASS_S",""],["GPIO_PIN9_SYNC2_BYPASS_V",""],["GPIO_PIN9_WAKEUP_ENABLE_S",""],["GPIO_PIN9_WAKEUP_ENABLE_V",""],["GPIO_PIN_CONFIG_LSB",""],["GPIO_PIN_CONFIG_MASK",""],["GPIO_PIN_CONFIG_MSB",""],["GPIO_PIN_COUNT",""],["GPIO_PIN_INT_TYPE_LSB",""],["GPIO_PIN_INT_TYPE_MASK",""],["GPIO_PIN_INT_TYPE_MSB",""],["GPIO_PIN_PAD_DRIVER_LSB",""],["GPIO_PIN_PAD_DRIVER_MASK",""],["GPIO_PIN_PAD_DRIVER_MSB",""],["GPIO_PIN_WAKEUP_ENABLE_LSB",""],["GPIO_PIN_WAKEUP_ENABLE_MASK",""],["GPIO_PIN_WAKEUP_ENABLE_MSB",""],["GPIO_PROCPU_INT",""],["GPIO_PROCPU_INT_S",""],["GPIO_PROCPU_INT_V",""],["GPIO_PROCPU_NMI_INT",""],["GPIO_PROCPU_NMI_INT_S",""],["GPIO_PROCPU_NMI_INT_V",""],["GPIO_SD0_IN",""],["GPIO_SD0_IN_S",""],["GPIO_SD0_IN_V",""],["GPIO_SD0_OUT_IDX",""],["GPIO_SD0_PRESCALE",""],["GPIO_SD0_PRESCALE_S",""],["GPIO_SD0_PRESCALE_V",""],["GPIO_SD1_IN",""],["GPIO_SD1_IN_S",""],["GPIO_SD1_IN_V",""],["GPIO_SD1_OUT_IDX",""],["GPIO_SD1_PRESCALE",""],["GPIO_SD1_PRESCALE_S",""],["GPIO_SD1_PRESCALE_V",""],["GPIO_SD2_IN",""],["GPIO_SD2_IN_S",""],["GPIO_SD2_IN_V",""],["GPIO_SD2_OUT_IDX",""],["GPIO_SD2_PRESCALE",""],["GPIO_SD2_PRESCALE_S",""],["GPIO_SD2_PRESCALE_V",""],["GPIO_SD3_IN",""],["GPIO_SD3_IN_S",""],["GPIO_SD3_IN_V",""],["GPIO_SD3_OUT_IDX",""],["GPIO_SD3_PRESCALE",""],["GPIO_SD3_PRESCALE_S",""],["GPIO_SD3_PRESCALE_V",""],["GPIO_SDIO_INT",""],["GPIO_SDIO_INT_S",""],["GPIO_SDIO_INT_V",""],["GPIO_SDIO_SEL",""],["GPIO_SDIO_SELECT_REG",""],["GPIO_SDIO_SEL_S",""],["GPIO_SDIO_SEL_V",""],["GPIO_SD_CLK_EN_S",""],["GPIO_SD_CLK_EN_V",""],["GPIO_SD_DATE",""],["GPIO_SD_DATE_S",""],["GPIO_SD_DATE_V",""],["GPIO_SIG0_IN_SEL_S",""],["GPIO_SIG0_IN_SEL_V",""],["GPIO_SIG100_IN_SEL_S",""],["GPIO_SIG100_IN_SEL_V",""],["GPIO_SIG101_IN_SEL_S",""],["GPIO_SIG101_IN_SEL_V",""],["GPIO_SIG102_IN_SEL_S",""],["GPIO_SIG102_IN_SEL_V",""],["GPIO_SIG103_IN_SEL_S",""],["GPIO_SIG103_IN_SEL_V",""],["GPIO_SIG104_IN_SEL_S",""],["GPIO_SIG104_IN_SEL_V",""],["GPIO_SIG105_IN_SEL_S",""],["GPIO_SIG105_IN_SEL_V",""],["GPIO_SIG106_IN_SEL_S",""],["GPIO_SIG106_IN_SEL_V",""],["GPIO_SIG107_IN_SEL_S",""],["GPIO_SIG107_IN_SEL_V",""],["GPIO_SIG108_IN_SEL_S",""],["GPIO_SIG108_IN_SEL_V",""],["GPIO_SIG109_IN_SEL_S",""],["GPIO_SIG109_IN_SEL_V",""],["GPIO_SIG10_IN_SEL_S",""],["GPIO_SIG10_IN_SEL_V",""],["GPIO_SIG110_IN_SEL_S",""],["GPIO_SIG110_IN_SEL_V",""],["GPIO_SIG111_IN_SEL_S",""],["GPIO_SIG111_IN_SEL_V",""],["GPIO_SIG112_IN_SEL_S",""],["GPIO_SIG112_IN_SEL_V",""],["GPIO_SIG113_IN_SEL_S",""],["GPIO_SIG113_IN_SEL_V",""],["GPIO_SIG114_IN_SEL_S",""],["GPIO_SIG114_IN_SEL_V",""],["GPIO_SIG115_IN_SEL_S",""],["GPIO_SIG115_IN_SEL_V",""],["GPIO_SIG116_IN_SEL_S",""],["GPIO_SIG116_IN_SEL_V",""],["GPIO_SIG117_IN_SEL_S",""],["GPIO_SIG117_IN_SEL_V",""],["GPIO_SIG118_IN_SEL_S",""],["GPIO_SIG118_IN_SEL_V",""],["GPIO_SIG119_IN_SEL_S",""],["GPIO_SIG119_IN_SEL_V",""],["GPIO_SIG11_IN_SEL_S",""],["GPIO_SIG11_IN_SEL_V",""],["GPIO_SIG120_IN_SEL_S",""],["GPIO_SIG120_IN_SEL_V",""],["GPIO_SIG121_IN_SEL_S",""],["GPIO_SIG121_IN_SEL_V",""],["GPIO_SIG122_IN_SEL_S",""],["GPIO_SIG122_IN_SEL_V",""],["GPIO_SIG123_IN_SEL_S",""],["GPIO_SIG123_IN_SEL_V",""],["GPIO_SIG124_IN_SEL_S",""],["GPIO_SIG124_IN_SEL_V",""],["GPIO_SIG125_IN_SEL_S",""],["GPIO_SIG125_IN_SEL_V",""],["GPIO_SIG126_IN_SEL_S",""],["GPIO_SIG126_IN_SEL_V",""],["GPIO_SIG127_IN_SEL_S",""],["GPIO_SIG127_IN_SEL_V",""],["GPIO_SIG12_IN_SEL_S",""],["GPIO_SIG12_IN_SEL_V",""],["GPIO_SIG13_IN_SEL_S",""],["GPIO_SIG13_IN_SEL_V",""],["GPIO_SIG14_IN_SEL_S",""],["GPIO_SIG14_IN_SEL_V",""],["GPIO_SIG15_IN_SEL_S",""],["GPIO_SIG15_IN_SEL_V",""],["GPIO_SIG16_IN_SEL_S",""],["GPIO_SIG16_IN_SEL_V",""],["GPIO_SIG17_IN_SEL_S",""],["GPIO_SIG17_IN_SEL_V",""],["GPIO_SIG18_IN_SEL_S",""],["GPIO_SIG18_IN_SEL_V",""],["GPIO_SIG19_IN_SEL_S",""],["GPIO_SIG19_IN_SEL_V",""],["GPIO_SIG1_IN_SEL_S",""],["GPIO_SIG1_IN_SEL_V",""],["GPIO_SIG20_IN_SEL_S",""],["GPIO_SIG20_IN_SEL_V",""],["GPIO_SIG21_IN_SEL_S",""],["GPIO_SIG21_IN_SEL_V",""],["GPIO_SIG22_IN_SEL_S",""],["GPIO_SIG22_IN_SEL_V",""],["GPIO_SIG23_IN_SEL_S",""],["GPIO_SIG23_IN_SEL_V",""],["GPIO_SIG24_IN_SEL_S",""],["GPIO_SIG24_IN_SEL_V",""],["GPIO_SIG25_IN_SEL_S",""],["GPIO_SIG25_IN_SEL_V",""],["GPIO_SIG26_IN_SEL_S",""],["GPIO_SIG26_IN_SEL_V",""],["GPIO_SIG27_IN_SEL_S",""],["GPIO_SIG27_IN_SEL_V",""],["GPIO_SIG28_IN_SEL_S",""],["GPIO_SIG28_IN_SEL_V",""],["GPIO_SIG29_IN_SEL_S",""],["GPIO_SIG29_IN_SEL_V",""],["GPIO_SIG2_IN_SEL_S",""],["GPIO_SIG2_IN_SEL_V",""],["GPIO_SIG30_IN_SEL_S",""],["GPIO_SIG30_IN_SEL_V",""],["GPIO_SIG31_IN_SEL_S",""],["GPIO_SIG31_IN_SEL_V",""],["GPIO_SIG32_IN_SEL_S",""],["GPIO_SIG32_IN_SEL_V",""],["GPIO_SIG33_IN_SEL_S",""],["GPIO_SIG33_IN_SEL_V",""],["GPIO_SIG34_IN_SEL_S",""],["GPIO_SIG34_IN_SEL_V",""],["GPIO_SIG35_IN_SEL_S",""],["GPIO_SIG35_IN_SEL_V",""],["GPIO_SIG36_IN_SEL_S",""],["GPIO_SIG36_IN_SEL_V",""],["GPIO_SIG37_IN_SEL_S",""],["GPIO_SIG37_IN_SEL_V",""],["GPIO_SIG38_IN_SEL_S",""],["GPIO_SIG38_IN_SEL_V",""],["GPIO_SIG39_IN_SEL_S",""],["GPIO_SIG39_IN_SEL_V",""],["GPIO_SIG3_IN_SEL_S",""],["GPIO_SIG3_IN_SEL_V",""],["GPIO_SIG40_IN_SEL_S",""],["GPIO_SIG40_IN_SEL_V",""],["GPIO_SIG41_IN_SEL_S",""],["GPIO_SIG41_IN_SEL_V",""],["GPIO_SIG42_IN_SEL_S",""],["GPIO_SIG42_IN_SEL_V",""],["GPIO_SIG43_IN_SEL_S",""],["GPIO_SIG43_IN_SEL_V",""],["GPIO_SIG44_IN_SEL_S",""],["GPIO_SIG44_IN_SEL_V",""],["GPIO_SIG45_IN_SEL_S",""],["GPIO_SIG45_IN_SEL_V",""],["GPIO_SIG46_IN_SEL_S",""],["GPIO_SIG46_IN_SEL_V",""],["GPIO_SIG47_IN_SEL_S",""],["GPIO_SIG47_IN_SEL_V",""],["GPIO_SIG48_IN_SEL_S",""],["GPIO_SIG48_IN_SEL_V",""],["GPIO_SIG49_IN_SEL_S",""],["GPIO_SIG49_IN_SEL_V",""],["GPIO_SIG4_IN_SEL_S",""],["GPIO_SIG4_IN_SEL_V",""],["GPIO_SIG50_IN_SEL_S",""],["GPIO_SIG50_IN_SEL_V",""],["GPIO_SIG51_IN_SEL_S",""],["GPIO_SIG51_IN_SEL_V",""],["GPIO_SIG52_IN_SEL_S",""],["GPIO_SIG52_IN_SEL_V",""],["GPIO_SIG53_IN_SEL_S",""],["GPIO_SIG53_IN_SEL_V",""],["GPIO_SIG54_IN_SEL_S",""],["GPIO_SIG54_IN_SEL_V",""],["GPIO_SIG55_IN_SEL_S",""],["GPIO_SIG55_IN_SEL_V",""],["GPIO_SIG56_IN_SEL_S",""],["GPIO_SIG56_IN_SEL_V",""],["GPIO_SIG57_IN_SEL_S",""],["GPIO_SIG57_IN_SEL_V",""],["GPIO_SIG58_IN_SEL_S",""],["GPIO_SIG58_IN_SEL_V",""],["GPIO_SIG59_IN_SEL_S",""],["GPIO_SIG59_IN_SEL_V",""],["GPIO_SIG5_IN_SEL_S",""],["GPIO_SIG5_IN_SEL_V",""],["GPIO_SIG60_IN_SEL_S",""],["GPIO_SIG60_IN_SEL_V",""],["GPIO_SIG61_IN_SEL_S",""],["GPIO_SIG61_IN_SEL_V",""],["GPIO_SIG62_IN_SEL_S",""],["GPIO_SIG62_IN_SEL_V",""],["GPIO_SIG63_IN_SEL_S",""],["GPIO_SIG63_IN_SEL_V",""],["GPIO_SIG64_IN_SEL_S",""],["GPIO_SIG64_IN_SEL_V",""],["GPIO_SIG65_IN_SEL_S",""],["GPIO_SIG65_IN_SEL_V",""],["GPIO_SIG66_IN_SEL_S",""],["GPIO_SIG66_IN_SEL_V",""],["GPIO_SIG67_IN_SEL_S",""],["GPIO_SIG67_IN_SEL_V",""],["GPIO_SIG68_IN_SEL_S",""],["GPIO_SIG68_IN_SEL_V",""],["GPIO_SIG69_IN_SEL_S",""],["GPIO_SIG69_IN_SEL_V",""],["GPIO_SIG6_IN_SEL_S",""],["GPIO_SIG6_IN_SEL_V",""],["GPIO_SIG70_IN_SEL_S",""],["GPIO_SIG70_IN_SEL_V",""],["GPIO_SIG71_IN_SEL_S",""],["GPIO_SIG71_IN_SEL_V",""],["GPIO_SIG72_IN_SEL_S",""],["GPIO_SIG72_IN_SEL_V",""],["GPIO_SIG73_IN_SEL_S",""],["GPIO_SIG73_IN_SEL_V",""],["GPIO_SIG74_IN_SEL_S",""],["GPIO_SIG74_IN_SEL_V",""],["GPIO_SIG75_IN_SEL_S",""],["GPIO_SIG75_IN_SEL_V",""],["GPIO_SIG76_IN_SEL_S",""],["GPIO_SIG76_IN_SEL_V",""],["GPIO_SIG77_IN_SEL_S",""],["GPIO_SIG77_IN_SEL_V",""],["GPIO_SIG78_IN_SEL_S",""],["GPIO_SIG78_IN_SEL_V",""],["GPIO_SIG79_IN_SEL_S",""],["GPIO_SIG79_IN_SEL_V",""],["GPIO_SIG7_IN_SEL_S",""],["GPIO_SIG7_IN_SEL_V",""],["GPIO_SIG80_IN_SEL_S",""],["GPIO_SIG80_IN_SEL_V",""],["GPIO_SIG81_IN_SEL_S",""],["GPIO_SIG81_IN_SEL_V",""],["GPIO_SIG82_IN_SEL_S",""],["GPIO_SIG82_IN_SEL_V",""],["GPIO_SIG83_IN_SEL_S",""],["GPIO_SIG83_IN_SEL_V",""],["GPIO_SIG84_IN_SEL_S",""],["GPIO_SIG84_IN_SEL_V",""],["GPIO_SIG85_IN_SEL_S",""],["GPIO_SIG85_IN_SEL_V",""],["GPIO_SIG86_IN_SEL_S",""],["GPIO_SIG86_IN_SEL_V",""],["GPIO_SIG87_IN_SEL_S",""],["GPIO_SIG87_IN_SEL_V",""],["GPIO_SIG88_IN_SEL_S",""],["GPIO_SIG88_IN_SEL_V",""],["GPIO_SIG89_IN_SEL_S",""],["GPIO_SIG89_IN_SEL_V",""],["GPIO_SIG8_IN_SEL_S",""],["GPIO_SIG8_IN_SEL_V",""],["GPIO_SIG90_IN_SEL_S",""],["GPIO_SIG90_IN_SEL_V",""],["GPIO_SIG91_IN_SEL_S",""],["GPIO_SIG91_IN_SEL_V",""],["GPIO_SIG92_IN_SEL_S",""],["GPIO_SIG92_IN_SEL_V",""],["GPIO_SIG93_IN_SEL_S",""],["GPIO_SIG93_IN_SEL_V",""],["GPIO_SIG94_IN_SEL_S",""],["GPIO_SIG94_IN_SEL_V",""],["GPIO_SIG95_IN_SEL_S",""],["GPIO_SIG95_IN_SEL_V",""],["GPIO_SIG96_IN_SEL_S",""],["GPIO_SIG96_IN_SEL_V",""],["GPIO_SIG97_IN_SEL_S",""],["GPIO_SIG97_IN_SEL_V",""],["GPIO_SIG98_IN_SEL_S",""],["GPIO_SIG98_IN_SEL_V",""],["GPIO_SIG99_IN_SEL_S",""],["GPIO_SIG99_IN_SEL_V",""],["GPIO_SIG9_IN_SEL_S",""],["GPIO_SIG9_IN_SEL_V",""],["GPIO_SPI_SWAP_S",""],["GPIO_SPI_SWAP_V",""],["GPIO_STATUS_INT",""],["GPIO_STATUS_INTERRUPT_NEXT",""],["GPIO_STATUS_INTERRUPT_NEXT_S",""],["GPIO_STATUS_INTERRUPT_NEXT_V",""],["GPIO_STATUS_INT_S",""],["GPIO_STATUS_INT_V",""],["GPIO_STATUS_NEXT_REG",""],["GPIO_STATUS_REG",""],["GPIO_STATUS_W1TC",""],["GPIO_STATUS_W1TC_REG",""],["GPIO_STATUS_W1TC_S",""],["GPIO_STATUS_W1TC_V",""],["GPIO_STATUS_W1TS",""],["GPIO_STATUS_W1TS_REG",""],["GPIO_STATUS_W1TS_S",""],["GPIO_STATUS_W1TS_V",""],["GPIO_STRAPPING",""],["GPIO_STRAPPING_S",""],["GPIO_STRAPPING_V",""],["GPIO_STRAP_REG",""],["GPIO_SUPPORTS_RTC_INDEPENDENT",""],["GPIO_WAKEUP_DISABLE",""],["GPIO_WAKEUP_ENABLE",""],["GPIO_WLAN_ACTIVE_IDX",""],["GPIO_WLAN_PRIO_IDX",""],["HAVE_INITFINI_ARRAY",""],["HTTPD_200",""],["HTTPD_204",""],["HTTPD_207",""],["HTTPD_400",""],["HTTPD_404",""],["HTTPD_408",""],["HTTPD_500",""],["HTTPD_MAX_REQ_HDR_LEN",""],["HTTPD_MAX_URI_LEN",""],["HTTPD_RESP_USE_STRLEN",""],["HTTPD_SOCK_ERR_FAIL",""],["HTTPD_SOCK_ERR_INVALID",""],["HTTPD_SOCK_ERR_TIMEOUT",""],["HTTPD_TYPE_JSON",""],["HTTPD_TYPE_OCTET",""],["HTTPD_TYPE_TEXT",""],["HTTP_MAX_HEADER_SIZE",""],["HTTP_PARSER_STRICT",""],["HTTP_PARSER_VERSION_MAJOR",""],["HTTP_PARSER_VERSION_MINOR",""],["HTTP_PARSER_VERSION_PATCH",""],["HUPCL",""],["HZ",""],["HttpStatus_Code_HttpStatus_BadRequest",""],["HttpStatus_Code_HttpStatus_Forbidden",""],["HttpStatus_Code_HttpStatus_Found",""],["HttpStatus_Code_HttpStatus_InternalError",""],["HttpStatus_Code_HttpStatus_MovedPermanently",""],["HttpStatus_Code_HttpStatus_MultipleChoices",""],["HttpStatus_Code_HttpStatus_NotFound",""],["HttpStatus_Code_HttpStatus_Ok",""],["HttpStatus_Code_HttpStatus_TemporaryRedirect",""],["HttpStatus_Code_HttpStatus_Unauthorized",""],["I2CEXT0_SCL_IN_IDX",""],["I2CEXT0_SCL_OUT_IDX",""],["I2CEXT0_SDA_IN_IDX",""],["I2CEXT0_SDA_OUT_IDX",""],["I2C_APB_CLK_FREQ",""],["I2C_CLK_FREQ_MAX",""],["I2C_NUM_0",""],["I2C_NUM_1",""],["I2C_NUM_MAX",""],["I2C_SCLK_SRC_FLAG_AWARE_DFS",""],["I2C_SCLK_SRC_FLAG_FOR_NOMAL",""],["I2C_SCLK_SRC_FLAG_LIGHT_SLEEP",""],["I2SI_BCK_IN_IDX",""],["I2SI_BCK_OUT_IDX",""],["I2SI_SD_IN_IDX",""],["I2SI_WS_IN_IDX",""],["I2SI_WS_OUT_IDX",""],["I2SO_BCK_IN_IDX",""],["I2SO_BCK_OUT_IDX",""],["I2SO_SD_OUT_IDX",""],["I2SO_WS_IN_IDX",""],["I2SO_WS_OUT_IDX",""],["I2S_CLK_EN_S",""],["I2S_CLK_EN_V",""],["I2S_DATE",""],["I2S_DATE_S",""],["I2S_DATE_V",""],["I2S_INTR_MAX",""],["I2S_LC_FIFO_TIMEOUT",""],["I2S_LC_FIFO_TIMEOUT_ENA_S",""],["I2S_LC_FIFO_TIMEOUT_ENA_V",""],["I2S_LC_FIFO_TIMEOUT_S",""],["I2S_LC_FIFO_TIMEOUT_SHIFT",""],["I2S_LC_FIFO_TIMEOUT_SHIFT_S",""],["I2S_LC_FIFO_TIMEOUT_SHIFT_V",""],["I2S_LC_FIFO_TIMEOUT_V",""],["I2S_MCLK_IN_IDX",""],["I2S_MCLK_OUT_IDX",""],["I2S_MCLK_SEL_S",""],["I2S_MCLK_SEL_V",""],["I2S_PCM2PDM_CONV_EN_S",""],["I2S_PCM2PDM_CONV_EN_V",""],["I2S_PIN_NO_CHANGE",""],["I2S_RX_24_FILL_EN_S",""],["I2S_RX_24_FILL_EN_V",""],["I2S_RX_BCK_DIV_NUM",""],["I2S_RX_BCK_DIV_NUM_S",""],["I2S_RX_BCK_DIV_NUM_V",""],["I2S_RX_BCK_IN_DM",""],["I2S_RX_BCK_IN_DM_S",""],["I2S_RX_BCK_IN_DM_V",""],["I2S_RX_BCK_OUT_DM",""],["I2S_RX_BCK_OUT_DM_S",""],["I2S_RX_BCK_OUT_DM_V",""],["I2S_RX_BIG_ENDIAN_S",""],["I2S_RX_BIG_ENDIAN_V",""],["I2S_RX_BITS_MOD",""],["I2S_RX_BITS_MOD_S",""],["I2S_RX_BITS_MOD_V",""],["I2S_RX_BIT_ORDER_S",""],["I2S_RX_BIT_ORDER_V",""],["I2S_RX_CLKM_DIV_NUM",""],["I2S_RX_CLKM_DIV_NUM_S",""],["I2S_RX_CLKM_DIV_NUM_V",""],["I2S_RX_CLKM_DIV_X",""],["I2S_RX_CLKM_DIV_X_S",""],["I2S_RX_CLKM_DIV_X_V",""],["I2S_RX_CLKM_DIV_Y",""],["I2S_RX_CLKM_DIV_YN1_S",""],["I2S_RX_CLKM_DIV_YN1_V",""],["I2S_RX_CLKM_DIV_Y_S",""],["I2S_RX_CLKM_DIV_Y_V",""],["I2S_RX_CLKM_DIV_Z",""],["I2S_RX_CLKM_DIV_Z_S",""],["I2S_RX_CLKM_DIV_Z_V",""],["I2S_RX_CLK_ACTIVE_S",""],["I2S_RX_CLK_ACTIVE_V",""],["I2S_RX_CLK_SEL",""],["I2S_RX_CLK_SEL_S",""],["I2S_RX_CLK_SEL_V",""],["I2S_RX_DONE_INT_CLR_S",""],["I2S_RX_DONE_INT_CLR_V",""],["I2S_RX_DONE_INT_ENA_S",""],["I2S_RX_DONE_INT_ENA_V",""],["I2S_RX_DONE_INT_RAW_S",""],["I2S_RX_DONE_INT_RAW_V",""],["I2S_RX_DONE_INT_ST_S",""],["I2S_RX_DONE_INT_ST_V",""],["I2S_RX_EOF_NUM",""],["I2S_RX_EOF_NUM_S",""],["I2S_RX_EOF_NUM_V",""],["I2S_RX_FIFO_RESET_S",""],["I2S_RX_FIFO_RESET_V",""],["I2S_RX_HALF_SAMPLE_BITS",""],["I2S_RX_HALF_SAMPLE_BITS_S",""],["I2S_RX_HALF_SAMPLE_BITS_V",""],["I2S_RX_HUNG_INT_CLR_S",""],["I2S_RX_HUNG_INT_CLR_V",""],["I2S_RX_HUNG_INT_ENA_S",""],["I2S_RX_HUNG_INT_ENA_V",""],["I2S_RX_HUNG_INT_RAW_S",""],["I2S_RX_HUNG_INT_RAW_V",""],["I2S_RX_HUNG_INT_ST_S",""],["I2S_RX_HUNG_INT_ST_V",""],["I2S_RX_LEFT_ALIGN_S",""],["I2S_RX_LEFT_ALIGN_V",""],["I2S_RX_MONO_FST_VLD_S",""],["I2S_RX_MONO_FST_VLD_V",""],["I2S_RX_MONO_S",""],["I2S_RX_MONO_V",""],["I2S_RX_MSB_SHIFT_S",""],["I2S_RX_MSB_SHIFT_V",""],["I2S_RX_PCM_BYPASS_S",""],["I2S_RX_PCM_BYPASS_V",""],["I2S_RX_PCM_CONF",""],["I2S_RX_PCM_CONF_S",""],["I2S_RX_PCM_CONF_V",""],["I2S_RX_PDM_EN_S",""],["I2S_RX_PDM_EN_V",""],["I2S_RX_RESET_S",""],["I2S_RX_RESET_V",""],["I2S_RX_SD_IN_DM",""],["I2S_RX_SD_IN_DM_S",""],["I2S_RX_SD_IN_DM_V",""],["I2S_RX_SLAVE_MOD_S",""],["I2S_RX_SLAVE_MOD_V",""],["I2S_RX_START_S",""],["I2S_RX_START_V",""],["I2S_RX_STOP_MODE",""],["I2S_RX_STOP_MODE_S",""],["I2S_RX_STOP_MODE_V",""],["I2S_RX_TDM_CHAN10_EN_S",""],["I2S_RX_TDM_CHAN10_EN_V",""],["I2S_RX_TDM_CHAN11_EN_S",""],["I2S_RX_TDM_CHAN11_EN_V",""],["I2S_RX_TDM_CHAN12_EN_S",""],["I2S_RX_TDM_CHAN12_EN_V",""],["I2S_RX_TDM_CHAN13_EN_S",""],["I2S_RX_TDM_CHAN13_EN_V",""],["I2S_RX_TDM_CHAN14_EN_S",""],["I2S_RX_TDM_CHAN14_EN_V",""],["I2S_RX_TDM_CHAN15_EN_S",""],["I2S_RX_TDM_CHAN15_EN_V",""],["I2S_RX_TDM_CHAN8_EN_S",""],["I2S_RX_TDM_CHAN8_EN_V",""],["I2S_RX_TDM_CHAN9_EN_S",""],["I2S_RX_TDM_CHAN9_EN_V",""],["I2S_RX_TDM_CHAN_BITS",""],["I2S_RX_TDM_CHAN_BITS_S",""],["I2S_RX_TDM_CHAN_BITS_V",""],["I2S_RX_TDM_EN_S",""],["I2S_RX_TDM_EN_V",""],["I2S_RX_TDM_PDM_CHAN0_EN_S",""],["I2S_RX_TDM_PDM_CHAN0_EN_V",""],["I2S_RX_TDM_PDM_CHAN1_EN_S",""],["I2S_RX_TDM_PDM_CHAN1_EN_V",""],["I2S_RX_TDM_PDM_CHAN2_EN_S",""],["I2S_RX_TDM_PDM_CHAN2_EN_V",""],["I2S_RX_TDM_PDM_CHAN3_EN_S",""],["I2S_RX_TDM_PDM_CHAN3_EN_V",""],["I2S_RX_TDM_PDM_CHAN4_EN_S",""],["I2S_RX_TDM_PDM_CHAN4_EN_V",""],["I2S_RX_TDM_PDM_CHAN5_EN_S",""],["I2S_RX_TDM_PDM_CHAN5_EN_V",""],["I2S_RX_TDM_PDM_CHAN6_EN_S",""],["I2S_RX_TDM_PDM_CHAN6_EN_V",""],["I2S_RX_TDM_PDM_CHAN7_EN_S",""],["I2S_RX_TDM_PDM_CHAN7_EN_V",""],["I2S_RX_TDM_TOT_CHAN_NUM",""],["I2S_RX_TDM_TOT_CHAN_NUM_S",""],["I2S_RX_TDM_TOT_CHAN_NUM_V",""],["I2S_RX_TDM_WS_WIDTH",""],["I2S_RX_TDM_WS_WIDTH_S",""],["I2S_RX_TDM_WS_WIDTH_V",""],["I2S_RX_UPDATE_S",""],["I2S_RX_UPDATE_V",""],["I2S_RX_WS_IDLE_POL_S",""],["I2S_RX_WS_IDLE_POL_V",""],["I2S_RX_WS_IN_DM",""],["I2S_RX_WS_IN_DM_S",""],["I2S_RX_WS_IN_DM_V",""],["I2S_RX_WS_OUT_DM",""],["I2S_RX_WS_OUT_DM_S",""],["I2S_RX_WS_OUT_DM_V",""],["I2S_SIG_LOOPBACK_S",""],["I2S_SIG_LOOPBACK_V",""],["I2S_SINGLE_DATA",""],["I2S_SINGLE_DATA_S",""],["I2S_SINGLE_DATA_V",""],["I2S_TX_24_FILL_EN_S",""],["I2S_TX_24_FILL_EN_V",""],["I2S_TX_BCK_DIV_NUM",""],["I2S_TX_BCK_DIV_NUM_S",""],["I2S_TX_BCK_DIV_NUM_V",""],["I2S_TX_BCK_IN_DM",""],["I2S_TX_BCK_IN_DM_S",""],["I2S_TX_BCK_IN_DM_V",""],["I2S_TX_BCK_OUT_DM",""],["I2S_TX_BCK_OUT_DM_S",""],["I2S_TX_BCK_OUT_DM_V",""],["I2S_TX_BIG_ENDIAN_S",""],["I2S_TX_BIG_ENDIAN_V",""],["I2S_TX_BITS_MOD",""],["I2S_TX_BITS_MOD_S",""],["I2S_TX_BITS_MOD_V",""],["I2S_TX_BIT_ORDER_S",""],["I2S_TX_BIT_ORDER_V",""],["I2S_TX_CHAN_EQUAL_S",""],["I2S_TX_CHAN_EQUAL_V",""],["I2S_TX_CHAN_MOD",""],["I2S_TX_CHAN_MOD_S",""],["I2S_TX_CHAN_MOD_V",""],["I2S_TX_CLKM_DIV_NUM",""],["I2S_TX_CLKM_DIV_NUM_S",""],["I2S_TX_CLKM_DIV_NUM_V",""],["I2S_TX_CLKM_DIV_X",""],["I2S_TX_CLKM_DIV_X_S",""],["I2S_TX_CLKM_DIV_X_V",""],["I2S_TX_CLKM_DIV_Y",""],["I2S_TX_CLKM_DIV_YN1_S",""],["I2S_TX_CLKM_DIV_YN1_V",""],["I2S_TX_CLKM_DIV_Y_S",""],["I2S_TX_CLKM_DIV_Y_V",""],["I2S_TX_CLKM_DIV_Z",""],["I2S_TX_CLKM_DIV_Z_S",""],["I2S_TX_CLKM_DIV_Z_V",""],["I2S_TX_CLK_ACTIVE_S",""],["I2S_TX_CLK_ACTIVE_V",""],["I2S_TX_CLK_SEL",""],["I2S_TX_CLK_SEL_S",""],["I2S_TX_CLK_SEL_V",""],["I2S_TX_DONE_INT_CLR_S",""],["I2S_TX_DONE_INT_CLR_V",""],["I2S_TX_DONE_INT_ENA_S",""],["I2S_TX_DONE_INT_ENA_V",""],["I2S_TX_DONE_INT_RAW_S",""],["I2S_TX_DONE_INT_RAW_V",""],["I2S_TX_DONE_INT_ST_S",""],["I2S_TX_DONE_INT_ST_V",""],["I2S_TX_FIFO_RESET_S",""],["I2S_TX_FIFO_RESET_V",""],["I2S_TX_HALF_SAMPLE_BITS",""],["I2S_TX_HALF_SAMPLE_BITS_S",""],["I2S_TX_HALF_SAMPLE_BITS_V",""],["I2S_TX_HUNG_INT_CLR_S",""],["I2S_TX_HUNG_INT_CLR_V",""],["I2S_TX_HUNG_INT_ENA_S",""],["I2S_TX_HUNG_INT_ENA_V",""],["I2S_TX_HUNG_INT_RAW_S",""],["I2S_TX_HUNG_INT_RAW_V",""],["I2S_TX_HUNG_INT_ST_S",""],["I2S_TX_HUNG_INT_ST_V",""],["I2S_TX_IDLE_S",""],["I2S_TX_IDLE_V",""],["I2S_TX_IIR_HP_MULT12_0",""],["I2S_TX_IIR_HP_MULT12_0_S",""],["I2S_TX_IIR_HP_MULT12_0_V",""],["I2S_TX_IIR_HP_MULT12_5",""],["I2S_TX_IIR_HP_MULT12_5_S",""],["I2S_TX_IIR_HP_MULT12_5_V",""],["I2S_TX_LEFT_ALIGN_S",""],["I2S_TX_LEFT_ALIGN_V",""],["I2S_TX_MONO_FST_VLD_S",""],["I2S_TX_MONO_FST_VLD_V",""],["I2S_TX_MONO_S",""],["I2S_TX_MONO_V",""],["I2S_TX_MSB_SHIFT_S",""],["I2S_TX_MSB_SHIFT_V",""],["I2S_TX_PCM_BYPASS_S",""],["I2S_TX_PCM_BYPASS_V",""],["I2S_TX_PCM_CONF",""],["I2S_TX_PCM_CONF_S",""],["I2S_TX_PCM_CONF_V",""],["I2S_TX_PDM_DAC_2OUT_EN_S",""],["I2S_TX_PDM_DAC_2OUT_EN_V",""],["I2S_TX_PDM_DAC_MODE_EN_S",""],["I2S_TX_PDM_DAC_MODE_EN_V",""],["I2S_TX_PDM_EN_S",""],["I2S_TX_PDM_EN_V",""],["I2S_TX_PDM_FP",""],["I2S_TX_PDM_FP_S",""],["I2S_TX_PDM_FP_V",""],["I2S_TX_PDM_FS",""],["I2S_TX_PDM_FS_S",""],["I2S_TX_PDM_FS_V",""],["I2S_TX_PDM_HP_BYPASS_S",""],["I2S_TX_PDM_HP_BYPASS_V",""],["I2S_TX_PDM_HP_IN_SHIFT",""],["I2S_TX_PDM_HP_IN_SHIFT_S",""],["I2S_TX_PDM_HP_IN_SHIFT_V",""],["I2S_TX_PDM_LP_IN_SHIFT",""],["I2S_TX_PDM_LP_IN_SHIFT_S",""],["I2S_TX_PDM_LP_IN_SHIFT_V",""],["I2S_TX_PDM_PRESCALE",""],["I2S_TX_PDM_PRESCALE_S",""],["I2S_TX_PDM_PRESCALE_V",""],["I2S_TX_PDM_SIGMADELTA_DITHER2_S",""],["I2S_TX_PDM_SIGMADELTA_DITHER2_V",""],["I2S_TX_PDM_SIGMADELTA_DITHER_S",""],["I2S_TX_PDM_SIGMADELTA_DITHER_V",""],["I2S_TX_PDM_SIGMADELTA_IN_SHIFT",""],["I2S_TX_PDM_SIGMADELTA_IN_SHIFT_S",""],["I2S_TX_PDM_SIGMADELTA_IN_SHIFT_V",""],["I2S_TX_PDM_SINC_IN_SHIFT",""],["I2S_TX_PDM_SINC_IN_SHIFT_S",""],["I2S_TX_PDM_SINC_IN_SHIFT_V",""],["I2S_TX_PDM_SINC_OSR2",""],["I2S_TX_PDM_SINC_OSR2_S",""],["I2S_TX_PDM_SINC_OSR2_V",""],["I2S_TX_RESET_S",""],["I2S_TX_RESET_V",""],["I2S_TX_SD1_OUT_DM",""],["I2S_TX_SD1_OUT_DM_S",""],["I2S_TX_SD1_OUT_DM_V",""],["I2S_TX_SD_OUT_DM",""],["I2S_TX_SD_OUT_DM_S",""],["I2S_TX_SD_OUT_DM_V",""],["I2S_TX_SLAVE_MOD_S",""],["I2S_TX_SLAVE_MOD_V",""],["I2S_TX_START_S",""],["I2S_TX_START_V",""],["I2S_TX_STOP_EN_S",""],["I2S_TX_STOP_EN_V",""],["I2S_TX_TDM_CHAN0_EN_S",""],["I2S_TX_TDM_CHAN0_EN_V",""],["I2S_TX_TDM_CHAN10_EN_S",""],["I2S_TX_TDM_CHAN10_EN_V",""],["I2S_TX_TDM_CHAN11_EN_S",""],["I2S_TX_TDM_CHAN11_EN_V",""],["I2S_TX_TDM_CHAN12_EN_S",""],["I2S_TX_TDM_CHAN12_EN_V",""],["I2S_TX_TDM_CHAN13_EN_S",""],["I2S_TX_TDM_CHAN13_EN_V",""],["I2S_TX_TDM_CHAN14_EN_S",""],["I2S_TX_TDM_CHAN14_EN_V",""],["I2S_TX_TDM_CHAN15_EN_S",""],["I2S_TX_TDM_CHAN15_EN_V",""],["I2S_TX_TDM_CHAN1_EN_S",""],["I2S_TX_TDM_CHAN1_EN_V",""],["I2S_TX_TDM_CHAN2_EN_S",""],["I2S_TX_TDM_CHAN2_EN_V",""],["I2S_TX_TDM_CHAN3_EN_S",""],["I2S_TX_TDM_CHAN3_EN_V",""],["I2S_TX_TDM_CHAN4_EN_S",""],["I2S_TX_TDM_CHAN4_EN_V",""],["I2S_TX_TDM_CHAN5_EN_S",""],["I2S_TX_TDM_CHAN5_EN_V",""],["I2S_TX_TDM_CHAN6_EN_S",""],["I2S_TX_TDM_CHAN6_EN_V",""],["I2S_TX_TDM_CHAN7_EN_S",""],["I2S_TX_TDM_CHAN7_EN_V",""],["I2S_TX_TDM_CHAN8_EN_S",""],["I2S_TX_TDM_CHAN8_EN_V",""],["I2S_TX_TDM_CHAN9_EN_S",""],["I2S_TX_TDM_CHAN9_EN_V",""],["I2S_TX_TDM_CHAN_BITS",""],["I2S_TX_TDM_CHAN_BITS_S",""],["I2S_TX_TDM_CHAN_BITS_V",""],["I2S_TX_TDM_EN_S",""],["I2S_TX_TDM_EN_V",""],["I2S_TX_TDM_SKIP_MSK_EN_S",""],["I2S_TX_TDM_SKIP_MSK_EN_V",""],["I2S_TX_TDM_TOT_CHAN_NUM",""],["I2S_TX_TDM_TOT_CHAN_NUM_S",""],["I2S_TX_TDM_TOT_CHAN_NUM_V",""],["I2S_TX_TDM_WS_WIDTH",""],["I2S_TX_TDM_WS_WIDTH_S",""],["I2S_TX_TDM_WS_WIDTH_V",""],["I2S_TX_UPDATE_S",""],["I2S_TX_UPDATE_V",""],["I2S_TX_WS_IDLE_POL_S",""],["I2S_TX_WS_IDLE_POL_V",""],["I2S_TX_WS_IN_DM",""],["I2S_TX_WS_IN_DM_S",""],["I2S_TX_WS_IN_DM_V",""],["I2S_TX_WS_OUT_DM",""],["I2S_TX_WS_OUT_DM_S",""],["I2S_TX_WS_OUT_DM_V",""],["ICANON",""],["ICMP6_STATS",""],["ICMP_STATS",""],["ICMP_TTL",""],["ICRNL",""],["IEXTEN",""],["IFNAMSIZ",""],["IF_NAMESIZE",""],["IGMP_DEBUG",""],["IGMP_STATS",""],["IGNBRK",""],["IGNCR",""],["IGNPAR",""],["INCLUDE_eTaskGetState",""],["INCLUDE_pcTaskGetTaskName",""],["INCLUDE_pxTaskGetStackStart",""],["INCLUDE_uxTaskGetStackHighWaterMark",""],["INCLUDE_uxTaskGetStackHighWaterMark2",""],["INCLUDE_uxTaskPriorityGet",""],["INCLUDE_vTaskCleanUpResources",""],["INCLUDE_vTaskDelay",""],["INCLUDE_vTaskDelayUntil",""],["INCLUDE_vTaskDelete",""],["INCLUDE_vTaskPrioritySet",""],["INCLUDE_vTaskSuspend",""],["INCLUDE_xQueueGetMutexHolder",""],["INCLUDE_xSemaphoreGetMutexHolder",""],["INCLUDE_xTaskAbortDelay",""],["INCLUDE_xTaskGetCurrentTaskHandle",""],["INCLUDE_xTaskGetHandle",""],["INCLUDE_xTaskGetIdleTaskHandle",""],["INCLUDE_xTaskGetSchedulerState",""],["INCLUDE_xTaskResumeFromISR",""],["INCLUDE_xTimerPendFunctionCall",""],["INET6_ADDRSTRLEN",""],["INET_ADDRSTRLEN",""],["INET_DEBUG",""],["INLCR",""],["INPCK",""],["INTERRUPT_CORE0_AES_INT_MAP",""],["INTERRUPT_CORE0_AES_INT_MAP_REG",""],["INTERRUPT_CORE0_AES_INT_MAP_S",""],["INTERRUPT_CORE0_AES_INT_MAP_V",""],["INTERRUPT_CORE0_APB_ADC_INT_MAP",""],["INTERRUPT_CORE0_APB_ADC_INT_MAP_REG",""],["INTERRUPT_CORE0_APB_ADC_INT_MAP_S",""],["INTERRUPT_CORE0_APB_ADC_INT_MAP_V",""],["INTERRUPT_CORE0_APB_CTRL_INTR_MAP",""],["INTERRUPT_CORE0_APB_CTRL_INTR_MAP_REG",""],["INTERRUPT_CORE0_APB_CTRL_INTR_MAP_S",""],["INTERRUPT_CORE0_APB_CTRL_INTR_MAP_V",""],["INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP",""],["INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_REG",""],["INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_S",""],["INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_V",""],["INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP",""],["INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_REG",""],["INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_S",""],["INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_V",""],["INTERRUPT_CORE0_BB_INT_MAP",""],["INTERRUPT_CORE0_BB_INT_MAP_REG",""],["INTERRUPT_CORE0_BB_INT_MAP_S",""],["INTERRUPT_CORE0_BB_INT_MAP_V",""],["INTERRUPT_CORE0_BT_BB_INT_MAP",""],["INTERRUPT_CORE0_BT_BB_INT_MAP_REG",""],["INTERRUPT_CORE0_BT_BB_INT_MAP_S",""],["INTERRUPT_CORE0_BT_BB_INT_MAP_V",""],["INTERRUPT_CORE0_BT_BB_NMI_MAP",""],["INTERRUPT_CORE0_BT_BB_NMI_MAP_REG",""],["INTERRUPT_CORE0_BT_BB_NMI_MAP_S",""],["INTERRUPT_CORE0_BT_BB_NMI_MAP_V",""],["INTERRUPT_CORE0_BT_MAC_INT_MAP",""],["INTERRUPT_CORE0_BT_MAC_INT_MAP_REG",""],["INTERRUPT_CORE0_BT_MAC_INT_MAP_S",""],["INTERRUPT_CORE0_BT_MAC_INT_MAP_V",""],["INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP",""],["INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_REG",""],["INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_S",""],["INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_V",""],["INTERRUPT_CORE0_CACHE_IA_INT_MAP",""],["INTERRUPT_CORE0_CACHE_IA_INT_MAP_REG",""],["INTERRUPT_CORE0_CACHE_IA_INT_MAP_S",""],["INTERRUPT_CORE0_CACHE_IA_INT_MAP_V",""],["INTERRUPT_CORE0_CAN_INT_MAP",""],["INTERRUPT_CORE0_CAN_INT_MAP_REG",""],["INTERRUPT_CORE0_CAN_INT_MAP_S",""],["INTERRUPT_CORE0_CAN_INT_MAP_V",""],["INTERRUPT_CORE0_CLK_EN_S",""],["INTERRUPT_CORE0_CLK_EN_V",""],["INTERRUPT_CORE0_CLOCK_GATE_REG",""],["INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP",""],["INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_REG",""],["INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_S",""],["INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_V",""],["INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP",""],["INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_REG",""],["INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_S",""],["INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_V",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_REG",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_S",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_V",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_REG",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_S",""],["INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_V",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_REG",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_S",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_V",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_REG",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_S",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_V",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_REG",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_S",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_V",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_REG",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_S",""],["INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_V",""],["INTERRUPT_CORE0_CPU_INT_CLEAR",""],["INTERRUPT_CORE0_CPU_INT_CLEAR_REG",""],["INTERRUPT_CORE0_CPU_INT_CLEAR_S",""],["INTERRUPT_CORE0_CPU_INT_CLEAR_V",""],["INTERRUPT_CORE0_CPU_INT_EIP_STATUS",""],["INTERRUPT_CORE0_CPU_INT_EIP_STATUS_REG",""],["INTERRUPT_CORE0_CPU_INT_EIP_STATUS_S",""],["INTERRUPT_CORE0_CPU_INT_EIP_STATUS_V",""],["INTERRUPT_CORE0_CPU_INT_ENABLE",""],["INTERRUPT_CORE0_CPU_INT_ENABLE_REG",""],["INTERRUPT_CORE0_CPU_INT_ENABLE_S",""],["INTERRUPT_CORE0_CPU_INT_ENABLE_V",""],["INTERRUPT_CORE0_CPU_INT_PRI_0_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_10_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_11_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_12_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_13_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_14_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_15_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_16_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_17_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_18_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_19_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_1_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_20_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_21_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_22_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_23_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_24_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_25_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_26_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_27_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_28_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_29_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_2_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_30_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_31_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_3_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_4_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_5_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_6_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_7_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_8_REG",""],["INTERRUPT_CORE0_CPU_INT_PRI_9_REG",""],["INTERRUPT_CORE0_CPU_INT_THRESH",""],["INTERRUPT_CORE0_CPU_INT_THRESH_REG",""],["INTERRUPT_CORE0_CPU_INT_THRESH_S",""],["INTERRUPT_CORE0_CPU_INT_THRESH_V",""],["INTERRUPT_CORE0_CPU_INT_TYPE",""],["INTERRUPT_CORE0_CPU_INT_TYPE_REG",""],["INTERRUPT_CORE0_CPU_INT_TYPE_S",""],["INTERRUPT_CORE0_CPU_INT_TYPE_V",""],["INTERRUPT_CORE0_CPU_PRI_0_MAP",""],["INTERRUPT_CORE0_CPU_PRI_0_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_0_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_10_MAP",""],["INTERRUPT_CORE0_CPU_PRI_10_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_10_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_11_MAP",""],["INTERRUPT_CORE0_CPU_PRI_11_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_11_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_12_MAP",""],["INTERRUPT_CORE0_CPU_PRI_12_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_12_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_13_MAP",""],["INTERRUPT_CORE0_CPU_PRI_13_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_13_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_14_MAP",""],["INTERRUPT_CORE0_CPU_PRI_14_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_14_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_15_MAP",""],["INTERRUPT_CORE0_CPU_PRI_15_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_15_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_16_MAP",""],["INTERRUPT_CORE0_CPU_PRI_16_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_16_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_17_MAP",""],["INTERRUPT_CORE0_CPU_PRI_17_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_17_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_18_MAP",""],["INTERRUPT_CORE0_CPU_PRI_18_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_18_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_19_MAP",""],["INTERRUPT_CORE0_CPU_PRI_19_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_19_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_1_MAP",""],["INTERRUPT_CORE0_CPU_PRI_1_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_1_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_20_MAP",""],["INTERRUPT_CORE0_CPU_PRI_20_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_20_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_21_MAP",""],["INTERRUPT_CORE0_CPU_PRI_21_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_21_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_22_MAP",""],["INTERRUPT_CORE0_CPU_PRI_22_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_22_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_23_MAP",""],["INTERRUPT_CORE0_CPU_PRI_23_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_23_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_24_MAP",""],["INTERRUPT_CORE0_CPU_PRI_24_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_24_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_25_MAP",""],["INTERRUPT_CORE0_CPU_PRI_25_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_25_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_26_MAP",""],["INTERRUPT_CORE0_CPU_PRI_26_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_26_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_27_MAP",""],["INTERRUPT_CORE0_CPU_PRI_27_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_27_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_28_MAP",""],["INTERRUPT_CORE0_CPU_PRI_28_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_28_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_29_MAP",""],["INTERRUPT_CORE0_CPU_PRI_29_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_29_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_2_MAP",""],["INTERRUPT_CORE0_CPU_PRI_2_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_2_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_30_MAP",""],["INTERRUPT_CORE0_CPU_PRI_30_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_30_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_31_MAP",""],["INTERRUPT_CORE0_CPU_PRI_31_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_31_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_3_MAP",""],["INTERRUPT_CORE0_CPU_PRI_3_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_3_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_4_MAP",""],["INTERRUPT_CORE0_CPU_PRI_4_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_4_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_5_MAP",""],["INTERRUPT_CORE0_CPU_PRI_5_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_5_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_6_MAP",""],["INTERRUPT_CORE0_CPU_PRI_6_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_6_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_7_MAP",""],["INTERRUPT_CORE0_CPU_PRI_7_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_7_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_8_MAP",""],["INTERRUPT_CORE0_CPU_PRI_8_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_8_MAP_V",""],["INTERRUPT_CORE0_CPU_PRI_9_MAP",""],["INTERRUPT_CORE0_CPU_PRI_9_MAP_S",""],["INTERRUPT_CORE0_CPU_PRI_9_MAP_V",""],["INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP",""],["INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_REG",""],["INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_S",""],["INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_V",""],["INTERRUPT_CORE0_DMA_CH0_INT_MAP",""],["INTERRUPT_CORE0_DMA_CH0_INT_MAP_REG",""],["INTERRUPT_CORE0_DMA_CH0_INT_MAP_S",""],["INTERRUPT_CORE0_DMA_CH0_INT_MAP_V",""],["INTERRUPT_CORE0_DMA_CH1_INT_MAP",""],["INTERRUPT_CORE0_DMA_CH1_INT_MAP_REG",""],["INTERRUPT_CORE0_DMA_CH1_INT_MAP_S",""],["INTERRUPT_CORE0_DMA_CH1_INT_MAP_V",""],["INTERRUPT_CORE0_DMA_CH2_INT_MAP",""],["INTERRUPT_CORE0_DMA_CH2_INT_MAP_REG",""],["INTERRUPT_CORE0_DMA_CH2_INT_MAP_S",""],["INTERRUPT_CORE0_DMA_CH2_INT_MAP_V",""],["INTERRUPT_CORE0_EFUSE_INT_MAP",""],["INTERRUPT_CORE0_EFUSE_INT_MAP_REG",""],["INTERRUPT_CORE0_EFUSE_INT_MAP_S",""],["INTERRUPT_CORE0_EFUSE_INT_MAP_V",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_REG",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_S",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_V",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_REG",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_S",""],["INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_V",""],["INTERRUPT_CORE0_I2C_EXT0_INTR_MAP",""],["INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_REG",""],["INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_S",""],["INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_V",""],["INTERRUPT_CORE0_I2C_MST_INT_MAP",""],["INTERRUPT_CORE0_I2C_MST_INT_MAP_REG",""],["INTERRUPT_CORE0_I2C_MST_INT_MAP_S",""],["INTERRUPT_CORE0_I2C_MST_INT_MAP_V",""],["INTERRUPT_CORE0_I2S1_INT_MAP",""],["INTERRUPT_CORE0_I2S1_INT_MAP_REG",""],["INTERRUPT_CORE0_I2S1_INT_MAP_S",""],["INTERRUPT_CORE0_I2S1_INT_MAP_V",""],["INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP",""],["INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_REG",""],["INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_S",""],["INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_V",""],["INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP",""],["INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_REG",""],["INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_S",""],["INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_V",""],["INTERRUPT_CORE0_INTERRUPT_DATE",""],["INTERRUPT_CORE0_INTERRUPT_DATE_REG",""],["INTERRUPT_CORE0_INTERRUPT_DATE_S",""],["INTERRUPT_CORE0_INTERRUPT_DATE_V",""],["INTERRUPT_CORE0_INTR_STATUS_0",""],["INTERRUPT_CORE0_INTR_STATUS_0_REG",""],["INTERRUPT_CORE0_INTR_STATUS_0_S",""],["INTERRUPT_CORE0_INTR_STATUS_0_V",""],["INTERRUPT_CORE0_INTR_STATUS_1",""],["INTERRUPT_CORE0_INTR_STATUS_1_REG",""],["INTERRUPT_CORE0_INTR_STATUS_1_S",""],["INTERRUPT_CORE0_INTR_STATUS_1_V",""],["INTERRUPT_CORE0_LEDC_INT_MAP",""],["INTERRUPT_CORE0_LEDC_INT_MAP_REG",""],["INTERRUPT_CORE0_LEDC_INT_MAP_S",""],["INTERRUPT_CORE0_LEDC_INT_MAP_V",""],["INTERRUPT_CORE0_MAC_INTR_MAP",""],["INTERRUPT_CORE0_MAC_INTR_MAP_REG",""],["INTERRUPT_CORE0_MAC_INTR_MAP_S",""],["INTERRUPT_CORE0_MAC_INTR_MAP_V",""],["INTERRUPT_CORE0_MAC_NMI_MAP",""],["INTERRUPT_CORE0_MAC_NMI_MAP_REG",""],["INTERRUPT_CORE0_MAC_NMI_MAP_S",""],["INTERRUPT_CORE0_MAC_NMI_MAP_V",""],["INTERRUPT_CORE0_PWR_INTR_MAP",""],["INTERRUPT_CORE0_PWR_INTR_MAP_REG",""],["INTERRUPT_CORE0_PWR_INTR_MAP_S",""],["INTERRUPT_CORE0_PWR_INTR_MAP_V",""],["INTERRUPT_CORE0_RMT_INTR_MAP",""],["INTERRUPT_CORE0_RMT_INTR_MAP_REG",""],["INTERRUPT_CORE0_RMT_INTR_MAP_S",""],["INTERRUPT_CORE0_RMT_INTR_MAP_V",""],["INTERRUPT_CORE0_RSA_INT_MAP",""],["INTERRUPT_CORE0_RSA_INT_MAP_REG",""],["INTERRUPT_CORE0_RSA_INT_MAP_S",""],["INTERRUPT_CORE0_RSA_INT_MAP_V",""],["INTERRUPT_CORE0_RTC_CORE_INTR_MAP",""],["INTERRUPT_CORE0_RTC_CORE_INTR_MAP_REG",""],["INTERRUPT_CORE0_RTC_CORE_INTR_MAP_S",""],["INTERRUPT_CORE0_RTC_CORE_INTR_MAP_V",""],["INTERRUPT_CORE0_RWBLE_IRQ_MAP",""],["INTERRUPT_CORE0_RWBLE_IRQ_MAP_REG",""],["INTERRUPT_CORE0_RWBLE_IRQ_MAP_S",""],["INTERRUPT_CORE0_RWBLE_IRQ_MAP_V",""],["INTERRUPT_CORE0_RWBLE_NMI_MAP",""],["INTERRUPT_CORE0_RWBLE_NMI_MAP_REG",""],["INTERRUPT_CORE0_RWBLE_NMI_MAP_S",""],["INTERRUPT_CORE0_RWBLE_NMI_MAP_V",""],["INTERRUPT_CORE0_RWBT_IRQ_MAP",""],["INTERRUPT_CORE0_RWBT_IRQ_MAP_REG",""],["INTERRUPT_CORE0_RWBT_IRQ_MAP_S",""],["INTERRUPT_CORE0_RWBT_IRQ_MAP_V",""],["INTERRUPT_CORE0_RWBT_NMI_MAP",""],["INTERRUPT_CORE0_RWBT_NMI_MAP_REG",""],["INTERRUPT_CORE0_RWBT_NMI_MAP_S",""],["INTERRUPT_CORE0_RWBT_NMI_MAP_V",""],["INTERRUPT_CORE0_SHA_INT_MAP",""],["INTERRUPT_CORE0_SHA_INT_MAP_REG",""],["INTERRUPT_CORE0_SHA_INT_MAP_S",""],["INTERRUPT_CORE0_SHA_INT_MAP_V",""],["INTERRUPT_CORE0_SLC0_INTR_MAP",""],["INTERRUPT_CORE0_SLC0_INTR_MAP_REG",""],["INTERRUPT_CORE0_SLC0_INTR_MAP_S",""],["INTERRUPT_CORE0_SLC0_INTR_MAP_V",""],["INTERRUPT_CORE0_SLC1_INTR_MAP",""],["INTERRUPT_CORE0_SLC1_INTR_MAP_REG",""],["INTERRUPT_CORE0_SLC1_INTR_MAP_S",""],["INTERRUPT_CORE0_SLC1_INTR_MAP_V",""],["INTERRUPT_CORE0_SPI_INTR_1_MAP",""],["INTERRUPT_CORE0_SPI_INTR_1_MAP_REG",""],["INTERRUPT_CORE0_SPI_INTR_1_MAP_S",""],["INTERRUPT_CORE0_SPI_INTR_1_MAP_V",""],["INTERRUPT_CORE0_SPI_INTR_2_MAP",""],["INTERRUPT_CORE0_SPI_INTR_2_MAP_REG",""],["INTERRUPT_CORE0_SPI_INTR_2_MAP_S",""],["INTERRUPT_CORE0_SPI_INTR_2_MAP_V",""],["INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP",""],["INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_REG",""],["INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_S",""],["INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_V",""],["INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP",""],["INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_REG",""],["INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_S",""],["INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_V",""],["INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP",""],["INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_REG",""],["INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_S",""],["INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_V",""],["INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP",""],["INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_REG",""],["INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_S",""],["INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_V",""],["INTERRUPT_CORE0_TG1_T0_INT_MAP",""],["INTERRUPT_CORE0_TG1_T0_INT_MAP_REG",""],["INTERRUPT_CORE0_TG1_T0_INT_MAP_S",""],["INTERRUPT_CORE0_TG1_T0_INT_MAP_V",""],["INTERRUPT_CORE0_TG1_WDT_INT_MAP",""],["INTERRUPT_CORE0_TG1_WDT_INT_MAP_REG",""],["INTERRUPT_CORE0_TG1_WDT_INT_MAP_S",""],["INTERRUPT_CORE0_TG1_WDT_INT_MAP_V",""],["INTERRUPT_CORE0_TG_T0_INT_MAP",""],["INTERRUPT_CORE0_TG_T0_INT_MAP_REG",""],["INTERRUPT_CORE0_TG_T0_INT_MAP_S",""],["INTERRUPT_CORE0_TG_T0_INT_MAP_V",""],["INTERRUPT_CORE0_TG_WDT_INT_MAP",""],["INTERRUPT_CORE0_TG_WDT_INT_MAP_REG",""],["INTERRUPT_CORE0_TG_WDT_INT_MAP_S",""],["INTERRUPT_CORE0_TG_WDT_INT_MAP_V",""],["INTERRUPT_CORE0_TIMER_INT1_MAP",""],["INTERRUPT_CORE0_TIMER_INT1_MAP_REG",""],["INTERRUPT_CORE0_TIMER_INT1_MAP_S",""],["INTERRUPT_CORE0_TIMER_INT1_MAP_V",""],["INTERRUPT_CORE0_TIMER_INT2_MAP",""],["INTERRUPT_CORE0_TIMER_INT2_MAP_REG",""],["INTERRUPT_CORE0_TIMER_INT2_MAP_S",""],["INTERRUPT_CORE0_TIMER_INT2_MAP_V",""],["INTERRUPT_CORE0_UART1_INTR_MAP",""],["INTERRUPT_CORE0_UART1_INTR_MAP_REG",""],["INTERRUPT_CORE0_UART1_INTR_MAP_S",""],["INTERRUPT_CORE0_UART1_INTR_MAP_V",""],["INTERRUPT_CORE0_UART_INTR_MAP",""],["INTERRUPT_CORE0_UART_INTR_MAP_REG",""],["INTERRUPT_CORE0_UART_INTR_MAP_S",""],["INTERRUPT_CORE0_UART_INTR_MAP_V",""],["INTERRUPT_CORE0_UHCI0_INTR_MAP",""],["INTERRUPT_CORE0_UHCI0_INTR_MAP_REG",""],["INTERRUPT_CORE0_UHCI0_INTR_MAP_S",""],["INTERRUPT_CORE0_UHCI0_INTR_MAP_V",""],["INTERRUPT_CORE0_USB_INTR_MAP",""],["INTERRUPT_CORE0_USB_INTR_MAP_REG",""],["INTERRUPT_CORE0_USB_INTR_MAP_S",""],["INTERRUPT_CORE0_USB_INTR_MAP_V",""],["IN_CLASSA_HOST",""],["IN_CLASSA_MAX",""],["IN_CLASSA_NET",""],["IN_CLASSA_NSHIFT",""],["IN_CLASSB_HOST",""],["IN_CLASSB_MAX",""],["IN_CLASSB_NET",""],["IN_CLASSB_NSHIFT",""],["IN_CLASSC_HOST",""],["IN_CLASSC_NET",""],["IN_CLASSC_NSHIFT",""],["IN_CLASSD_HOST",""],["IN_CLASSD_NET",""],["IN_CLASSD_NSHIFT",""],["IN_LOOPBACKNET",""],["IOCPARM_MASK",""],["IOC_IN",""],["IOC_INOUT",""],["IOC_OUT",""],["IOC_VOID",""],["IOV_MAX",""],["IO_MUX_DATE",""],["IO_MUX_DATE_REG",""],["IO_MUX_DATE_S",""],["IO_MUX_DATE_VERSION",""],["IP4ADDR_STRLEN_MAX",""],["IP6ADDR_STRLEN_MAX",""],["IP6_ADDR_DEPRECATED",""],["IP6_ADDR_DUPLICATED",""],["IP6_ADDR_INVALID",""],["IP6_ADDR_LIFE_INFINITE",""],["IP6_ADDR_LIFE_STATIC",""],["IP6_ADDR_PREFERRED",""],["IP6_ADDR_TENTATIVE",""],["IP6_ADDR_TENTATIVE_1",""],["IP6_ADDR_TENTATIVE_2",""],["IP6_ADDR_TENTATIVE_3",""],["IP6_ADDR_TENTATIVE_4",""],["IP6_ADDR_TENTATIVE_5",""],["IP6_ADDR_TENTATIVE_6",""],["IP6_ADDR_TENTATIVE_7",""],["IP6_ADDR_TENTATIVE_COUNT_MASK",""],["IP6_ADDR_VALID",""],["IP6_FRAG_STATS",""],["IP6_MULTICAST_SCOPE_ADMIN_LOCAL",""],["IP6_MULTICAST_SCOPE_GLOBAL",""],["IP6_MULTICAST_SCOPE_INTERFACE_LOCAL",""],["IP6_MULTICAST_SCOPE_LINK_LOCAL",""],["IP6_MULTICAST_SCOPE_ORGANIZATION_LOCAL",""],["IP6_MULTICAST_SCOPE_RESERVED",""],["IP6_MULTICAST_SCOPE_RESERVED0",""],["IP6_MULTICAST_SCOPE_RESERVED3",""],["IP6_MULTICAST_SCOPE_RESERVEDF",""],["IP6_MULTICAST_SCOPE_SITE_LOCAL",""],["IP6_NO_ZONE",""],["IP6_STATS",""],["IPADDR_STRLEN_MAX",""],["IPFRAG_STATS",""],["IPPROTO_ICMP",""],["IPPROTO_ICMPV6",""],["IPPROTO_IP",""],["IPPROTO_IPV6",""],["IPPROTO_RAW",""],["IPPROTO_TCP",""],["IPPROTO_UDP",""],["IPPROTO_UDPLITE",""],["IPSTR",""],["IPTOS_LOWCOST",""],["IPTOS_LOWDELAY",""],["IPTOS_MINCOST",""],["IPTOS_PREC_CRITIC_ECP",""],["IPTOS_PREC_FLASH",""],["IPTOS_PREC_FLASHOVERRIDE",""],["IPTOS_PREC_IMMEDIATE",""],["IPTOS_PREC_INTERNETCONTROL",""],["IPTOS_PREC_MASK",""],["IPTOS_PREC_NETCONTROL",""],["IPTOS_PREC_PRIORITY",""],["IPTOS_PREC_ROUTINE",""],["IPTOS_RELIABILITY",""],["IPTOS_THROUGHPUT",""],["IPTOS_TOS_MASK",""],["IPV6STR",""],["IPV6_ADD_MEMBERSHIP",""],["IPV6_CHECKSUM",""],["IPV6_CUSTOM_SCOPES",""],["IPV6_DROP_MEMBERSHIP",""],["IPV6_JOIN_GROUP",""],["IPV6_LEAVE_GROUP",""],["IPV6_MULTICAST_HOPS",""],["IPV6_MULTICAST_IF",""],["IPV6_MULTICAST_LOOP",""],["IPV6_REASS_MAXAGE",""],["IPV6_UNICAST_HOPS",""],["IPV6_V6ONLY",""],["IP_ADD_MEMBERSHIP",""],["IP_CLASSA_HOST",""],["IP_CLASSA_MAX",""],["IP_CLASSA_NET",""],["IP_CLASSA_NSHIFT",""],["IP_CLASSB_HOST",""],["IP_CLASSB_MAX",""],["IP_CLASSB_NET",""],["IP_CLASSB_NSHIFT",""],["IP_CLASSC_HOST",""],["IP_CLASSC_NET",""],["IP_CLASSC_NSHIFT",""],["IP_CLASSD_HOST",""],["IP_CLASSD_NET",""],["IP_CLASSD_NSHIFT",""],["IP_DEFAULT_TTL",""],["IP_DROP_MEMBERSHIP",""],["IP_FORWARD_ALLOW_TX_ON_RX_NETIF",""],["IP_FRAG",""],["IP_LOOPBACKNET",""],["IP_MULTICAST_IF",""],["IP_MULTICAST_LOOP",""],["IP_MULTICAST_TTL",""],["IP_OPTIONS_ALLOWED",""],["IP_PKTINFO",""],["IP_REASS_DEBUG",""],["IP_REASS_MAXAGE",""],["IP_REASS_MAX_PBUFS",""],["IP_SOF_BROADCAST",""],["IP_SOF_BROADCAST_RECV",""],["IP_STATS",""],["IP_TOS",""],["IP_TTL",""],["IRQ_COP",""],["IRQ_HOST",""],["IRQ_H_EXT",""],["IRQ_H_SOFT",""],["IRQ_H_TIMER",""],["IRQ_M_EXT",""],["IRQ_M_SOFT",""],["IRQ_M_TIMER",""],["IRQ_S_EXT",""],["IRQ_S_SOFT",""],["IRQ_S_TIMER",""],["IRQ_U_EXT",""],["IRQ_U_SOFT",""],["IRQ_U_TIMER",""],["ISDIO_MRITE",""],["ISDIO_READ",""],["ISDIO_WRITE",""],["ISIG",""],["ISTRIP",""],["ITIMER_PROF",""],["ITIMER_REAL",""],["ITIMER_VIRTUAL",""],["IUCLC",""],["IV_BYTES",""],["IV_WORDS",""],["IXANY",""],["IXOFF",""],["IXON",""],["K_DIG_MID_MUL10000",""],["K_RTC_MID_MUL10000",""],["LEDC_APB_CLK_HZ",""],["LEDC_ERR_DUTY",""],["LEDC_ERR_VAL",""],["LEDC_LS_SIG_OUT0_IDX",""],["LEDC_LS_SIG_OUT1_IDX",""],["LEDC_LS_SIG_OUT2_IDX",""],["LEDC_LS_SIG_OUT3_IDX",""],["LEDC_LS_SIG_OUT4_IDX",""],["LEDC_LS_SIG_OUT5_IDX",""],["LEDC_REF_CLK_HZ",""],["LINE_MAX",""],["LINKLBL_IDX",""],["LINK_MAX",""],["LINK_STATS",""],["LITTLE_ENDIAN",""],["LLDESC_ADDR_MASK",""],["LLDESC_EOF_MASK",""],["LLDESC_EOF_SHIFT",""],["LLDESC_HW_OWNED",""],["LLDESC_LENGTH_MASK",""],["LLDESC_LENGTH_SHIFT",""],["LLDESC_MAX_NUM_PER_DESC",""],["LLDESC_OWNER_MASK",""],["LLDESC_OWNER_SHIFT",""],["LLDESC_RX_AMPDU_ENTRY_MBLK_NUM",""],["LLDESC_RX_AMPDU_ENTRY_MBLK_SIZE",""],["LLDESC_RX_AMPDU_LEN_MBLK_SIZE",""],["LLDESC_RX_AMPDU_LEN_MLBK_NUM",""],["LLDESC_RX_MBLK_NUM",""],["LLDESC_RX_MBLK_SIZE",""],["LLDESC_RX_SMBLK_SIZE",""],["LLDESC_SIZE_MASK",""],["LLDESC_SIZE_SHIFT",""],["LLDESC_SOSF_MASK",""],["LLDESC_SOSF_SHIFT",""],["LLDESC_SW_OWNED",""],["LLDESC_TX_MBLK_NUM",""],["LLDESC_TX_MBLK_SIZE",""],["LOCK_EX",""],["LOCK_NB",""],["LOCK_SH",""],["LOCK_UN",""],["LOG_COLOR_BLACK",""],["LOG_COLOR_BLUE",""],["LOG_COLOR_BROWN",""],["LOG_COLOR_CYAN",""],["LOG_COLOR_GREEN",""],["LOG_COLOR_PURPLE",""],["LOG_COLOR_RED",""],["LOG_LOCAL_LEVEL",""],["LOG_RESET_COLOR",""],["LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT",""],["LWIP_ALTCP",""],["LWIP_ALTCP_TLS",""],["LWIP_ARP",""],["LWIP_AUTOIP",""],["LWIP_CALLBACK_API",""],["LWIP_CHECKSUM_CTRL_PER_NETIF",""],["LWIP_CHECKSUM_ON_COPY",""],["LWIP_COMPAT_MUTEX",""],["LWIP_COMPAT_SOCKETS",""],["LWIP_DBG_FRESH",""],["LWIP_DBG_HALT",""],["LWIP_DBG_LEVEL_ALL",""],["LWIP_DBG_LEVEL_OFF",""],["LWIP_DBG_LEVEL_SERIOUS",""],["LWIP_DBG_LEVEL_SEVERE",""],["LWIP_DBG_LEVEL_WARNING",""],["LWIP_DBG_MASK_LEVEL",""],["LWIP_DBG_MIN_LEVEL",""],["LWIP_DBG_OFF",""],["LWIP_DBG_ON",""],["LWIP_DBG_STATE",""],["LWIP_DBG_TRACE",""],["LWIP_DBG_TYPES_ON",""],["LWIP_DHCP",""],["LWIP_DHCP6_GET_NTP_SRV",""],["LWIP_DHCP6_MAX_DNS_SERVERS",""],["LWIP_DHCP6_MAX_NTP_SERVERS",""],["LWIP_DHCP_AUTOIP_COOP",""],["LWIP_DHCP_AUTOIP_COOP_TRIES",""],["LWIP_DHCP_BOOTP_FILE",""],["LWIP_DHCP_GET_NTP_SRV",""],["LWIP_DHCP_MAX_DNS_SERVERS",""],["LWIP_DHCP_MAX_NTP_SERVERS",""],["LWIP_DNS",""],["LWIP_DNS_SECURE_NO_MULTIPLE_OUTSTANDING",""],["LWIP_DNS_SECURE_RAND_SRC_PORT",""],["LWIP_DNS_SECURE_RAND_XID",""],["LWIP_DNS_SUPPORT_MDNS_QUERIES",""],["LWIP_ETHERNET",""],["LWIP_EVENT_API",""],["LWIP_FIONREAD_LINUXMODE",""],["LWIP_HAVE_INT64",""],["LWIP_HOOK_FILENAME",""],["LWIP_ICMP",""],["LWIP_ICMP6",""],["LWIP_ICMP6_DATASIZE",""],["LWIP_ICMP6_HL",""],["LWIP_IGMP",""],["LWIP_IPV4",""],["LWIP_IPV6",""],["LWIP_IPV6_ADDRESS_LIFETIMES",""],["LWIP_IPV6_AUTOCONFIG",""],["LWIP_IPV6_DHCP6",""],["LWIP_IPV6_DHCP6_STATEFUL",""],["LWIP_IPV6_DHCP6_STATELESS",""],["LWIP_IPV6_DUP_DETECT_ATTEMPTS",""],["LWIP_IPV6_FORWARD",""],["LWIP_IPV6_FRAG",""],["LWIP_IPV6_MLD",""],["LWIP_IPV6_NUM_ADDRESSES",""],["LWIP_IPV6_SCOPES_DEBUG",""],["LWIP_IPV6_SEND_ROUTER_SOLICIT",""],["LWIP_LOOPBACK_MAX_PBUFS",""],["LWIP_LOOPIF_MULTICAST",""],["LWIP_MIB2_CALLBACKS",""],["LWIP_MPU_COMPATIBLE",""],["LWIP_ND6_ALLOW_RA_UPDATES",""],["LWIP_ND6_DELAY_FIRST_PROBE_TIME",""],["LWIP_ND6_MAX_ANYCAST_DELAY_TIME",""],["LWIP_ND6_MAX_MULTICAST_SOLICIT",""],["LWIP_ND6_MAX_NEIGHBOR_ADVERTISEMENT",""],["LWIP_ND6_MAX_UNICAST_SOLICIT",""],["LWIP_ND6_NUM_DESTINATIONS",""],["LWIP_ND6_NUM_NEIGHBORS",""],["LWIP_ND6_NUM_PREFIXES",""],["LWIP_ND6_NUM_ROUTERS",""],["LWIP_ND6_QUEUEING",""],["LWIP_ND6_RDNSS_MAX_DNS_SERVERS",""],["LWIP_ND6_REACHABLE_TIME",""],["LWIP_ND6_RETRANS_TIMER",""],["LWIP_ND6_TCP_REACHABILITY_HINTS",""],["LWIP_NETCONN",""],["LWIP_NETCONN_FULLDUPLEX",""],["LWIP_NETCONN_SEM_PER_THREAD",""],["LWIP_NETIF_API",""],["LWIP_NETIF_EXT_STATUS_CALLBACK",""],["LWIP_NETIF_HOSTNAME",""],["LWIP_NETIF_HWADDRHINT",""],["LWIP_NETIF_LINK_CALLBACK",""],["LWIP_NETIF_LOOPBACK",""],["LWIP_NETIF_REMOVE_CALLBACK",""],["LWIP_NETIF_STATUS_CALLBACK",""],["LWIP_NETIF_TX_SINGLE_PBUF",""],["LWIP_NETIF_USE_HINTS",""],["LWIP_NO_CTYPE_H",""],["LWIP_NO_INTTYPES_H",""],["LWIP_NO_LIMITS_H",""],["LWIP_NO_STDDEF_H",""],["LWIP_NO_STDINT_H",""],["LWIP_NSC_IPV4_ADDRESS_CHANGED",""],["LWIP_NSC_IPV4_GATEWAY_CHANGED",""],["LWIP_NSC_IPV4_NETMASK_CHANGED",""],["LWIP_NSC_IPV4_SETTINGS_CHANGED",""],["LWIP_NSC_IPV6_ADDR_STATE_CHANGED",""],["LWIP_NSC_IPV6_SET",""],["LWIP_NSC_LINK_CHANGED",""],["LWIP_NSC_NETIF_ADDED",""],["LWIP_NSC_NETIF_REMOVED",""],["LWIP_NSC_NONE",""],["LWIP_NSC_STATUS_CHANGED",""],["LWIP_NUM_NETIF_CLIENT_DATA",""],["LWIP_PERF",""],["LWIP_POSIX_SOCKETS_IO_NAMES",""],["LWIP_RAW",""],["LWIP_SELECT_MAXNFDS",""],["LWIP_SINGLE_NETIF",""],["LWIP_SOCKET",""],["LWIP_SOCKET_OFFSET",""],["LWIP_SOCKET_POLL",""],["LWIP_SOCKET_SELECT",""],["LWIP_SO_RCVTIMEO",""],["LWIP_SO_SNDRCVTIMEO_NONSTANDARD",""],["LWIP_SO_SNDTIMEO",""],["LWIP_STATS_DISPLAY",""],["LWIP_TCP",""],["LWIP_TCPIP_CORE_LOCKING",""],["LWIP_TCPIP_CORE_LOCKING_INPUT",""],["LWIP_TCPIP_TIMEOUT",""],["LWIP_TCP_CLOSE_TIMEOUT_MS_DEFAULT",""],["LWIP_TCP_KEEPALIVE",""],["LWIP_TCP_MAX_SACK_NUM",""],["LWIP_TCP_PCB_NUM_EXT_ARGS",""],["LWIP_TCP_RTO_TIME",""],["LWIP_TCP_TIMESTAMPS",""],["LWIP_TESTMODE",""],["LWIP_TIMERS",""],["LWIP_TIMERS_CUSTOM",""],["LWIP_TIMEVAL_PRIVATE",""],["LWIP_UDP",""],["LWIP_UDPLITE",""],["LWIP_UINT32_MAX",""],["LWIP_WND_SCALE",""],["L_ctermid",""],["L_tmpnam",""],["MACSTR",""],["MALLOC_CAP_32BIT",""],["MALLOC_CAP_8BIT",""],["MALLOC_CAP_DEFAULT",""],["MALLOC_CAP_DMA",""],["MALLOC_CAP_EXEC",""],["MALLOC_CAP_INTERNAL",""],["MALLOC_CAP_INVALID",""],["MALLOC_CAP_IRAM_8BIT",""],["MALLOC_CAP_PID2",""],["MALLOC_CAP_PID3",""],["MALLOC_CAP_PID4",""],["MALLOC_CAP_PID5",""],["MALLOC_CAP_PID6",""],["MALLOC_CAP_PID7",""],["MALLOC_CAP_RETENTION",""],["MALLOC_CAP_SPIRAM",""],["MAXNAMLEN",""],["MAXPATHLEN",""],["MAX_BLE_DEVNAME_LEN",""],["MAX_BLE_MANUFACTURER_DATA_LEN",""],["MAX_CANON",""],["MAX_FDS",""],["MAX_GPIO_NUM",""],["MAX_INPUT",""],["MAX_PAD_GPIO_NUM",""],["MAX_PASSPHRASE_LEN",""],["MAX_RTC_GPIO_NUM",""],["MAX_SSID_LEN",""],["MAX_WIFI_IFS",""],["MAX_WPS_AP_CRED",""],["MBEDTLS_AES_DECRYPT",""],["MBEDTLS_AES_ENCRYPT",""],["MBEDTLS_ASN1_BIT_STRING",""],["MBEDTLS_ASN1_BMP_STRING",""],["MBEDTLS_ASN1_BOOLEAN",""],["MBEDTLS_ASN1_CONSTRUCTED",""],["MBEDTLS_ASN1_CONTEXT_SPECIFIC",""],["MBEDTLS_ASN1_GENERALIZED_TIME",""],["MBEDTLS_ASN1_IA5_STRING",""],["MBEDTLS_ASN1_INTEGER",""],["MBEDTLS_ASN1_NULL",""],["MBEDTLS_ASN1_OCTET_STRING",""],["MBEDTLS_ASN1_OID",""],["MBEDTLS_ASN1_PRIMITIVE",""],["MBEDTLS_ASN1_PRINTABLE_STRING",""],["MBEDTLS_ASN1_SEQUENCE",""],["MBEDTLS_ASN1_SET",""],["MBEDTLS_ASN1_T61_STRING",""],["MBEDTLS_ASN1_TAG_CLASS_MASK",""],["MBEDTLS_ASN1_TAG_PC_MASK",""],["MBEDTLS_ASN1_TAG_VALUE_MASK",""],["MBEDTLS_ASN1_UNIVERSAL_STRING",""],["MBEDTLS_ASN1_UTC_TIME",""],["MBEDTLS_ASN1_UTF8_STRING",""],["MBEDTLS_CIPHERSUITE_NODTLS",""],["MBEDTLS_CIPHERSUITE_SHORT_TAG",""],["MBEDTLS_CIPHERSUITE_WEAK",""],["MBEDTLS_CIPHER_VARIABLE_IV_LEN",""],["MBEDTLS_CIPHER_VARIABLE_KEY_LEN",""],["MBEDTLS_CTR_DRBG_BLOCKSIZE",""],["MBEDTLS_CTR_DRBG_ENTROPY_LEN",""],["MBEDTLS_CTR_DRBG_KEYBITS",""],["MBEDTLS_CTR_DRBG_KEYSIZE",""],["MBEDTLS_CTR_DRBG_MAX_INPUT",""],["MBEDTLS_CTR_DRBG_MAX_REQUEST",""],["MBEDTLS_CTR_DRBG_MAX_SEED_INPUT",""],["MBEDTLS_CTR_DRBG_PR_OFF",""],["MBEDTLS_CTR_DRBG_PR_ON",""],["MBEDTLS_CTR_DRBG_RESEED_INTERVAL",""],["MBEDTLS_CTR_DRBG_SEEDLEN",""],["MBEDTLS_ECDSA_MAX_LEN",""],["MBEDTLS_ECP_DP_MAX",""],["MBEDTLS_ECP_FIXED_POINT_OPTIM",""],["MBEDTLS_ECP_MAX_BITS",""],["MBEDTLS_ECP_MAX_BITS_MIN",""],["MBEDTLS_ECP_MAX_BYTES",""],["MBEDTLS_ECP_MAX_PT_LEN",""],["MBEDTLS_ECP_PF_COMPRESSED",""],["MBEDTLS_ECP_PF_UNCOMPRESSED",""],["MBEDTLS_ECP_TLS_NAMED_CURVE",""],["MBEDTLS_ECP_WINDOW_SIZE",""],["MBEDTLS_ENTROPY_BLOCK_SIZE",""],["MBEDTLS_ENTROPY_MAX_GATHER",""],["MBEDTLS_ENTROPY_MAX_SEED_SIZE",""],["MBEDTLS_ENTROPY_MAX_SOURCES",""],["MBEDTLS_ENTROPY_SOURCE_MANUAL",""],["MBEDTLS_ENTROPY_SOURCE_STRONG",""],["MBEDTLS_ENTROPY_SOURCE_WEAK",""],["MBEDTLS_ERR_AES_BAD_INPUT_DATA",""],["MBEDTLS_ERR_AES_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_AES_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_AES_INVALID_INPUT_LENGTH",""],["MBEDTLS_ERR_AES_INVALID_KEY_LENGTH",""],["MBEDTLS_ERR_ASN1_ALLOC_FAILED",""],["MBEDTLS_ERR_ASN1_BUF_TOO_SMALL",""],["MBEDTLS_ERR_ASN1_INVALID_DATA",""],["MBEDTLS_ERR_ASN1_INVALID_LENGTH",""],["MBEDTLS_ERR_ASN1_LENGTH_MISMATCH",""],["MBEDTLS_ERR_ASN1_OUT_OF_DATA",""],["MBEDTLS_ERR_ASN1_UNEXPECTED_TAG",""],["MBEDTLS_ERR_CIPHER_ALLOC_FAILED",""],["MBEDTLS_ERR_CIPHER_AUTH_FAILED",""],["MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA",""],["MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED",""],["MBEDTLS_ERR_CIPHER_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_CIPHER_INVALID_CONTEXT",""],["MBEDTLS_ERR_CIPHER_INVALID_PADDING",""],["MBEDTLS_ERR_CTR_DRBG_ENTROPY_SOURCE_FAILED",""],["MBEDTLS_ERR_CTR_DRBG_FILE_IO_ERROR",""],["MBEDTLS_ERR_CTR_DRBG_INPUT_TOO_BIG",""],["MBEDTLS_ERR_CTR_DRBG_REQUEST_TOO_BIG",""],["MBEDTLS_ERR_DHM_ALLOC_FAILED",""],["MBEDTLS_ERR_DHM_BAD_INPUT_DATA",""],["MBEDTLS_ERR_DHM_CALC_SECRET_FAILED",""],["MBEDTLS_ERR_DHM_FILE_IO_ERROR",""],["MBEDTLS_ERR_DHM_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_DHM_INVALID_FORMAT",""],["MBEDTLS_ERR_DHM_MAKE_PARAMS_FAILED",""],["MBEDTLS_ERR_DHM_MAKE_PUBLIC_FAILED",""],["MBEDTLS_ERR_DHM_READ_PARAMS_FAILED",""],["MBEDTLS_ERR_DHM_READ_PUBLIC_FAILED",""],["MBEDTLS_ERR_DHM_SET_GROUP_FAILED",""],["MBEDTLS_ERR_ECP_ALLOC_FAILED",""],["MBEDTLS_ERR_ECP_BAD_INPUT_DATA",""],["MBEDTLS_ERR_ECP_BUFFER_TOO_SMALL",""],["MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_ECP_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_ECP_INVALID_KEY",""],["MBEDTLS_ERR_ECP_IN_PROGRESS",""],["MBEDTLS_ERR_ECP_RANDOM_FAILED",""],["MBEDTLS_ERR_ECP_SIG_LEN_MISMATCH",""],["MBEDTLS_ERR_ECP_VERIFY_FAILED",""],["MBEDTLS_ERR_ENTROPY_FILE_IO_ERROR",""],["MBEDTLS_ERR_ENTROPY_MAX_SOURCES",""],["MBEDTLS_ERR_ENTROPY_NO_SOURCES_DEFINED",""],["MBEDTLS_ERR_ENTROPY_NO_STRONG_SOURCE",""],["MBEDTLS_ERR_ENTROPY_SOURCE_FAILED",""],["MBEDTLS_ERR_MD_ALLOC_FAILED",""],["MBEDTLS_ERR_MD_BAD_INPUT_DATA",""],["MBEDTLS_ERR_MD_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_MD_FILE_IO_ERROR",""],["MBEDTLS_ERR_MD_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_MPI_ALLOC_FAILED",""],["MBEDTLS_ERR_MPI_BAD_INPUT_DATA",""],["MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL",""],["MBEDTLS_ERR_MPI_DIVISION_BY_ZERO",""],["MBEDTLS_ERR_MPI_FILE_IO_ERROR",""],["MBEDTLS_ERR_MPI_INVALID_CHARACTER",""],["MBEDTLS_ERR_MPI_NEGATIVE_VALUE",""],["MBEDTLS_ERR_MPI_NOT_ACCEPTABLE",""],["MBEDTLS_ERR_NET_ACCEPT_FAILED",""],["MBEDTLS_ERR_NET_BAD_INPUT_DATA",""],["MBEDTLS_ERR_NET_BIND_FAILED",""],["MBEDTLS_ERR_NET_BUFFER_TOO_SMALL",""],["MBEDTLS_ERR_NET_CONNECT_FAILED",""],["MBEDTLS_ERR_NET_CONN_RESET",""],["MBEDTLS_ERR_NET_INVALID_CONTEXT",""],["MBEDTLS_ERR_NET_LISTEN_FAILED",""],["MBEDTLS_ERR_NET_POLL_FAILED",""],["MBEDTLS_ERR_NET_RECV_FAILED",""],["MBEDTLS_ERR_NET_SEND_FAILED",""],["MBEDTLS_ERR_NET_SOCKET_FAILED",""],["MBEDTLS_ERR_NET_UNKNOWN_HOST",""],["MBEDTLS_ERR_PK_ALLOC_FAILED",""],["MBEDTLS_ERR_PK_BAD_INPUT_DATA",""],["MBEDTLS_ERR_PK_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_PK_FILE_IO_ERROR",""],["MBEDTLS_ERR_PK_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_PK_INVALID_ALG",""],["MBEDTLS_ERR_PK_INVALID_PUBKEY",""],["MBEDTLS_ERR_PK_KEY_INVALID_FORMAT",""],["MBEDTLS_ERR_PK_KEY_INVALID_VERSION",""],["MBEDTLS_ERR_PK_PASSWORD_MISMATCH",""],["MBEDTLS_ERR_PK_PASSWORD_REQUIRED",""],["MBEDTLS_ERR_PK_SIG_LEN_MISMATCH",""],["MBEDTLS_ERR_PK_TYPE_MISMATCH",""],["MBEDTLS_ERR_PK_UNKNOWN_NAMED_CURVE",""],["MBEDTLS_ERR_PK_UNKNOWN_PK_ALG",""],["MBEDTLS_ERR_PLATFORM_FEATURE_UNSUPPORTED",""],["MBEDTLS_ERR_PLATFORM_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_RSA_BAD_INPUT_DATA",""],["MBEDTLS_ERR_RSA_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_RSA_INVALID_PADDING",""],["MBEDTLS_ERR_RSA_KEY_CHECK_FAILED",""],["MBEDTLS_ERR_RSA_KEY_GEN_FAILED",""],["MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE",""],["MBEDTLS_ERR_RSA_PRIVATE_FAILED",""],["MBEDTLS_ERR_RSA_PUBLIC_FAILED",""],["MBEDTLS_ERR_RSA_RNG_FAILED",""],["MBEDTLS_ERR_RSA_UNSUPPORTED_OPERATION",""],["MBEDTLS_ERR_RSA_VERIFY_FAILED",""],["MBEDTLS_ERR_SHA512_BAD_INPUT_DATA",""],["MBEDTLS_ERR_SHA512_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_SSL_ALLOC_FAILED",""],["MBEDTLS_ERR_SSL_ASYNC_IN_PROGRESS",""],["MBEDTLS_ERR_SSL_BAD_CONFIG",""],["MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE",""],["MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST",""],["MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_VERIFY",""],["MBEDTLS_ERR_SSL_BAD_HS_CHANGE_CIPHER_SPEC",""],["MBEDTLS_ERR_SSL_BAD_HS_CLIENT_HELLO",""],["MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE",""],["MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_CS",""],["MBEDTLS_ERR_SSL_BAD_HS_CLIENT_KEY_EXCHANGE_RP",""],["MBEDTLS_ERR_SSL_BAD_HS_FINISHED",""],["MBEDTLS_ERR_SSL_BAD_HS_NEW_SESSION_TICKET",""],["MBEDTLS_ERR_SSL_BAD_HS_PROTOCOL_VERSION",""],["MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO",""],["MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO_DONE",""],["MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE",""],["MBEDTLS_ERR_SSL_BAD_INPUT_DATA",""],["MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL",""],["MBEDTLS_ERR_SSL_CA_CHAIN_REQUIRED",""],["MBEDTLS_ERR_SSL_CERTIFICATE_REQUIRED",""],["MBEDTLS_ERR_SSL_CERTIFICATE_TOO_LARGE",""],["MBEDTLS_ERR_SSL_CLIENT_RECONNECT",""],["MBEDTLS_ERR_SSL_COMPRESSION_FAILED",""],["MBEDTLS_ERR_SSL_CONN_EOF",""],["MBEDTLS_ERR_SSL_CONTINUE_PROCESSING",""],["MBEDTLS_ERR_SSL_COUNTER_WRAPPING",""],["MBEDTLS_ERR_SSL_CRYPTO_IN_PROGRESS",""],["MBEDTLS_ERR_SSL_EARLY_MESSAGE",""],["MBEDTLS_ERR_SSL_FATAL_ALERT_MESSAGE",""],["MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_SSL_HELLO_VERIFY_REQUIRED",""],["MBEDTLS_ERR_SSL_HW_ACCEL_FAILED",""],["MBEDTLS_ERR_SSL_HW_ACCEL_FALLTHROUGH",""],["MBEDTLS_ERR_SSL_INTERNAL_ERROR",""],["MBEDTLS_ERR_SSL_INVALID_MAC",""],["MBEDTLS_ERR_SSL_INVALID_RECORD",""],["MBEDTLS_ERR_SSL_INVALID_VERIFY_HASH",""],["MBEDTLS_ERR_SSL_NON_FATAL",""],["MBEDTLS_ERR_SSL_NO_CIPHER_CHOSEN",""],["MBEDTLS_ERR_SSL_NO_CLIENT_CERTIFICATE",""],["MBEDTLS_ERR_SSL_NO_RNG",""],["MBEDTLS_ERR_SSL_NO_USABLE_CIPHERSUITE",""],["MBEDTLS_ERR_SSL_PEER_CLOSE_NOTIFY",""],["MBEDTLS_ERR_SSL_PEER_VERIFY_FAILED",""],["MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH",""],["MBEDTLS_ERR_SSL_PRIVATE_KEY_REQUIRED",""],["MBEDTLS_ERR_SSL_SESSION_TICKET_EXPIRED",""],["MBEDTLS_ERR_SSL_TIMEOUT",""],["MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE",""],["MBEDTLS_ERR_SSL_UNEXPECTED_RECORD",""],["MBEDTLS_ERR_SSL_UNKNOWN_CIPHER",""],["MBEDTLS_ERR_SSL_UNKNOWN_IDENTITY",""],["MBEDTLS_ERR_SSL_WAITING_SERVER_HELLO_RENEGO",""],["MBEDTLS_ERR_SSL_WANT_READ",""],["MBEDTLS_ERR_SSL_WANT_WRITE",""],["MBEDTLS_ERR_X509_ALLOC_FAILED",""],["MBEDTLS_ERR_X509_BAD_INPUT_DATA",""],["MBEDTLS_ERR_X509_BUFFER_TOO_SMALL",""],["MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT",""],["MBEDTLS_ERR_X509_CERT_VERIFY_FAILED",""],["MBEDTLS_ERR_X509_FATAL_ERROR",""],["MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE",""],["MBEDTLS_ERR_X509_FILE_IO_ERROR",""],["MBEDTLS_ERR_X509_INVALID_ALG",""],["MBEDTLS_ERR_X509_INVALID_DATE",""],["MBEDTLS_ERR_X509_INVALID_EXTENSIONS",""],["MBEDTLS_ERR_X509_INVALID_FORMAT",""],["MBEDTLS_ERR_X509_INVALID_NAME",""],["MBEDTLS_ERR_X509_INVALID_SERIAL",""],["MBEDTLS_ERR_X509_INVALID_SIGNATURE",""],["MBEDTLS_ERR_X509_INVALID_VERSION",""],["MBEDTLS_ERR_X509_SIG_MISMATCH",""],["MBEDTLS_ERR_X509_UNKNOWN_OID",""],["MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG",""],["MBEDTLS_ERR_X509_UNKNOWN_VERSION",""],["MBEDTLS_EXIT_FAILURE",""],["MBEDTLS_EXIT_SUCCESS",""],["MBEDTLS_KEY_LENGTH_DES","Key length, in bits (including parity), for DES keys."],["MBEDTLS_KEY_LENGTH_DES_EDE","Key length in bits, including parity, for DES in two-key EDE."],["MBEDTLS_KEY_LENGTH_DES_EDE3","Key length in bits, including parity, for DES in three-key EDE."],["MBEDTLS_KEY_LENGTH_NONE","Undefined key length."],["MBEDTLS_LN_2_DIV_LN_10_SCALE100",""],["MBEDTLS_MAX_BLOCK_LENGTH",""],["MBEDTLS_MAX_IV_LENGTH",""],["MBEDTLS_MD_MAX_SIZE",""],["MBEDTLS_MPI_MAX_BITS",""],["MBEDTLS_MPI_MAX_BITS_SCALE100",""],["MBEDTLS_MPI_MAX_LIMBS",""],["MBEDTLS_MPI_MAX_SIZE",""],["MBEDTLS_MPI_RW_BUFFER_SIZE",""],["MBEDTLS_MPI_WINDOW_SIZE",""],["MBEDTLS_NET_LISTEN_BACKLOG",""],["MBEDTLS_NET_POLL_READ",""],["MBEDTLS_NET_POLL_WRITE",""],["MBEDTLS_NET_PROTO_TCP",""],["MBEDTLS_NET_PROTO_UDP",""],["MBEDTLS_PK_DEBUG_MAX_ITEMS",""],["MBEDTLS_PLATFORM_STD_EXIT_FAILURE",""],["MBEDTLS_PLATFORM_STD_EXIT_SUCCESS",""],["MBEDTLS_PLATFORM_STD_NV_SEED_FILE",""],["MBEDTLS_PSK_MAX_LEN",""],["MBEDTLS_RSA_CRYPT",""],["MBEDTLS_RSA_PKCS_V15",""],["MBEDTLS_RSA_PKCS_V21",""],["MBEDTLS_RSA_PRIVATE",""],["MBEDTLS_RSA_PUBLIC",""],["MBEDTLS_RSA_SALT_LEN_ANY",""],["MBEDTLS_RSA_SIGN",""],["MBEDTLS_SSL_ALERT_LEVEL_FATAL",""],["MBEDTLS_SSL_ALERT_LEVEL_WARNING",""],["MBEDTLS_SSL_ALERT_MSG_ACCESS_DENIED",""],["MBEDTLS_SSL_ALERT_MSG_BAD_CERT",""],["MBEDTLS_SSL_ALERT_MSG_BAD_RECORD_MAC",""],["MBEDTLS_SSL_ALERT_MSG_CERT_EXPIRED",""],["MBEDTLS_SSL_ALERT_MSG_CERT_REVOKED",""],["MBEDTLS_SSL_ALERT_MSG_CERT_UNKNOWN",""],["MBEDTLS_SSL_ALERT_MSG_CLOSE_NOTIFY",""],["MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR",""],["MBEDTLS_SSL_ALERT_MSG_DECOMPRESSION_FAILURE",""],["MBEDTLS_SSL_ALERT_MSG_DECRYPTION_FAILED",""],["MBEDTLS_SSL_ALERT_MSG_DECRYPT_ERROR",""],["MBEDTLS_SSL_ALERT_MSG_EXPORT_RESTRICTION",""],["MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE",""],["MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER",""],["MBEDTLS_SSL_ALERT_MSG_INAPROPRIATE_FALLBACK",""],["MBEDTLS_SSL_ALERT_MSG_INSUFFICIENT_SECURITY",""],["MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR",""],["MBEDTLS_SSL_ALERT_MSG_NO_APPLICATION_PROTOCOL",""],["MBEDTLS_SSL_ALERT_MSG_NO_CERT",""],["MBEDTLS_SSL_ALERT_MSG_NO_RENEGOTIATION",""],["MBEDTLS_SSL_ALERT_MSG_PROTOCOL_VERSION",""],["MBEDTLS_SSL_ALERT_MSG_RECORD_OVERFLOW",""],["MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE",""],["MBEDTLS_SSL_ALERT_MSG_UNKNOWN_CA",""],["MBEDTLS_SSL_ALERT_MSG_UNKNOWN_PSK_IDENTITY",""],["MBEDTLS_SSL_ALERT_MSG_UNRECOGNIZED_NAME",""],["MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_CERT",""],["MBEDTLS_SSL_ALERT_MSG_UNSUPPORTED_EXT",""],["MBEDTLS_SSL_ALERT_MSG_USER_CANCELED",""],["MBEDTLS_SSL_ANTI_REPLAY_DISABLED",""],["MBEDTLS_SSL_ANTI_REPLAY_ENABLED",""],["MBEDTLS_SSL_ARC4_DISABLED",""],["MBEDTLS_SSL_ARC4_ENABLED",""],["MBEDTLS_SSL_CBC_RECORD_SPLITTING_DISABLED",""],["MBEDTLS_SSL_CBC_RECORD_SPLITTING_ENABLED",""],["MBEDTLS_SSL_CERT_REQ_CA_LIST_DISABLED",""],["MBEDTLS_SSL_CERT_REQ_CA_LIST_ENABLED",""],["MBEDTLS_SSL_CERT_TYPE_ECDSA_SIGN",""],["MBEDTLS_SSL_CERT_TYPE_RSA_SIGN",""],["MBEDTLS_SSL_COMPRESS_DEFLATE",""],["MBEDTLS_SSL_COMPRESS_NULL",""],["MBEDTLS_SSL_DEFAULT_TICKET_LIFETIME",""],["MBEDTLS_SSL_DTLS_MAX_BUFFERING",""],["MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MAX",""],["MBEDTLS_SSL_DTLS_TIMEOUT_DFL_MIN",""],["MBEDTLS_SSL_EMPTY_RENEGOTIATION_INFO",""],["MBEDTLS_SSL_ETM_DISABLED",""],["MBEDTLS_SSL_ETM_ENABLED",""],["MBEDTLS_SSL_EXTENDED_MS_DISABLED",""],["MBEDTLS_SSL_EXTENDED_MS_ENABLED",""],["MBEDTLS_SSL_FALLBACK_SCSV_VALUE",""],["MBEDTLS_SSL_HASH_MD5",""],["MBEDTLS_SSL_HASH_NONE",""],["MBEDTLS_SSL_HASH_SHA1",""],["MBEDTLS_SSL_HASH_SHA224",""],["MBEDTLS_SSL_HASH_SHA256",""],["MBEDTLS_SSL_HASH_SHA384",""],["MBEDTLS_SSL_HASH_SHA512",""],["MBEDTLS_SSL_HS_CERTIFICATE",""],["MBEDTLS_SSL_HS_CERTIFICATE_REQUEST",""],["MBEDTLS_SSL_HS_CERTIFICATE_VERIFY",""],["MBEDTLS_SSL_HS_CLIENT_HELLO",""],["MBEDTLS_SSL_HS_CLIENT_KEY_EXCHANGE",""],["MBEDTLS_SSL_HS_FINISHED",""],["MBEDTLS_SSL_HS_HELLO_REQUEST",""],["MBEDTLS_SSL_HS_HELLO_VERIFY_REQUEST",""],["MBEDTLS_SSL_HS_NEW_SESSION_TICKET",""],["MBEDTLS_SSL_HS_SERVER_HELLO",""],["MBEDTLS_SSL_HS_SERVER_HELLO_DONE",""],["MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE",""],["MBEDTLS_SSL_IN_CONTENT_LEN",""],["MBEDTLS_SSL_IS_CLIENT",""],["MBEDTLS_SSL_IS_FALLBACK",""],["MBEDTLS_SSL_IS_NOT_FALLBACK",""],["MBEDTLS_SSL_IS_SERVER",""],["MBEDTLS_SSL_LEGACY_ALLOW_RENEGOTIATION",""],["MBEDTLS_SSL_LEGACY_BREAK_HANDSHAKE",""],["MBEDTLS_SSL_LEGACY_NO_RENEGOTIATION",""],["MBEDTLS_SSL_LEGACY_RENEGOTIATION",""],["MBEDTLS_SSL_MAJOR_VERSION_3",""],["MBEDTLS_SSL_MAX_ALPN_LIST_LEN",""],["MBEDTLS_SSL_MAX_ALPN_NAME_LEN",""],["MBEDTLS_SSL_MAX_CONTENT_LEN",""],["MBEDTLS_SSL_MAX_FRAG_LEN_1024",""],["MBEDTLS_SSL_MAX_FRAG_LEN_2048",""],["MBEDTLS_SSL_MAX_FRAG_LEN_4096",""],["MBEDTLS_SSL_MAX_FRAG_LEN_512",""],["MBEDTLS_SSL_MAX_FRAG_LEN_INVALID",""],["MBEDTLS_SSL_MAX_FRAG_LEN_NONE",""],["MBEDTLS_SSL_MAX_HOST_NAME_LEN",""],["MBEDTLS_SSL_MINOR_VERSION_0",""],["MBEDTLS_SSL_MINOR_VERSION_1",""],["MBEDTLS_SSL_MINOR_VERSION_2",""],["MBEDTLS_SSL_MINOR_VERSION_3",""],["MBEDTLS_SSL_MSG_ALERT",""],["MBEDTLS_SSL_MSG_APPLICATION_DATA",""],["MBEDTLS_SSL_MSG_CHANGE_CIPHER_SPEC",""],["MBEDTLS_SSL_MSG_HANDSHAKE",""],["MBEDTLS_SSL_OUT_CONTENT_LEN",""],["MBEDTLS_SSL_PRESET_DEFAULT",""],["MBEDTLS_SSL_PRESET_SUITEB",""],["MBEDTLS_SSL_RENEGOTIATION_DISABLED",""],["MBEDTLS_SSL_RENEGOTIATION_ENABLED",""],["MBEDTLS_SSL_RENEGOTIATION_NOT_ENFORCED",""],["MBEDTLS_SSL_RENEGO_MAX_RECORDS_DEFAULT",""],["MBEDTLS_SSL_SECURE_RENEGOTIATION",""],["MBEDTLS_SSL_SESSION_TICKETS_DISABLED",""],["MBEDTLS_SSL_SESSION_TICKETS_ENABLED",""],["MBEDTLS_SSL_SIG_ANON",""],["MBEDTLS_SSL_SIG_ECDSA",""],["MBEDTLS_SSL_SIG_RSA",""],["MBEDTLS_SSL_TRANSPORT_DATAGRAM",""],["MBEDTLS_SSL_TRANSPORT_STREAM",""],["MBEDTLS_SSL_TRUNCATED_HMAC_LEN",""],["MBEDTLS_SSL_TRUNC_HMAC_DISABLED",""],["MBEDTLS_SSL_TRUNC_HMAC_ENABLED",""],["MBEDTLS_SSL_VERIFY_DATA_MAX_LEN",""],["MBEDTLS_SSL_VERIFY_NONE",""],["MBEDTLS_SSL_VERIFY_OPTIONAL",""],["MBEDTLS_SSL_VERIFY_REQUIRED",""],["MBEDTLS_SSL_VERIFY_UNSET",""],["MBEDTLS_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CCM_8",""],["MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA",""],["MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA256",""],["MBEDTLS_TLS_DHE_PSK_WITH_NULL_SHA384",""],["MBEDTLS_TLS_DHE_PSK_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CCM_8",""],["MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_DHE_RSA_WITH_DES_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_NULL_SHA",""],["MBEDTLS_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA256",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_NULL_SHA384",""],["MBEDTLS_TLS_ECDHE_PSK_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_NULL_SHA",""],["MBEDTLS_TLS_ECDHE_RSA_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_NULL_SHA",""],["MBEDTLS_TLS_ECDH_ECDSA_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_ECDH_RSA_WITH_NULL_SHA",""],["MBEDTLS_TLS_ECDH_RSA_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_ECJPAKE_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_EXT_ALPN",""],["MBEDTLS_TLS_EXT_ECJPAKE_KKPP",""],["MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC",""],["MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET",""],["MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH",""],["MBEDTLS_TLS_EXT_RENEGOTIATION_INFO",""],["MBEDTLS_TLS_EXT_SERVERNAME",""],["MBEDTLS_TLS_EXT_SERVERNAME_HOSTNAME",""],["MBEDTLS_TLS_EXT_SESSION_TICKET",""],["MBEDTLS_TLS_EXT_SIG_ALG",""],["MBEDTLS_TLS_EXT_SUPPORTED_ELLIPTIC_CURVES",""],["MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS",""],["MBEDTLS_TLS_EXT_TRUNCATED_HMAC",""],["MBEDTLS_TLS_PSK_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_PSK_WITH_AES_128_CCM",""],["MBEDTLS_TLS_PSK_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_PSK_WITH_AES_256_CCM",""],["MBEDTLS_TLS_PSK_WITH_AES_256_CCM_8",""],["MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_PSK_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_PSK_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_PSK_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_PSK_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_PSK_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_PSK_WITH_NULL_SHA",""],["MBEDTLS_TLS_PSK_WITH_NULL_SHA256",""],["MBEDTLS_TLS_PSK_WITH_NULL_SHA384",""],["MBEDTLS_TLS_PSK_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA",""],["MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA256",""],["MBEDTLS_TLS_RSA_PSK_WITH_NULL_SHA384",""],["MBEDTLS_TLS_RSA_PSK_WITH_RC4_128_SHA",""],["MBEDTLS_TLS_RSA_WITH_3DES_EDE_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_WITH_AES_128_CCM",""],["MBEDTLS_TLS_RSA_WITH_AES_128_CCM_8",""],["MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256",""],["MBEDTLS_TLS_RSA_WITH_AES_256_CCM",""],["MBEDTLS_TLS_RSA_WITH_AES_256_CCM_8",""],["MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_WITH_ARIA_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_WITH_ARIA_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_WITH_ARIA_256_CBC_SHA384",""],["MBEDTLS_TLS_RSA_WITH_ARIA_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256",""],["MBEDTLS_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384",""],["MBEDTLS_TLS_RSA_WITH_DES_CBC_SHA",""],["MBEDTLS_TLS_RSA_WITH_NULL_MD5",""],["MBEDTLS_TLS_RSA_WITH_NULL_SHA",""],["MBEDTLS_TLS_RSA_WITH_NULL_SHA256",""],["MBEDTLS_TLS_RSA_WITH_RC4_128_MD5",""],["MBEDTLS_TLS_RSA_WITH_RC4_128_SHA",""],["MBEDTLS_X509_BADCERT_BAD_KEY",""],["MBEDTLS_X509_BADCERT_BAD_MD",""],["MBEDTLS_X509_BADCERT_BAD_PK",""],["MBEDTLS_X509_BADCERT_CN_MISMATCH",""],["MBEDTLS_X509_BADCERT_EXPIRED",""],["MBEDTLS_X509_BADCERT_EXT_KEY_USAGE",""],["MBEDTLS_X509_BADCERT_FUTURE",""],["MBEDTLS_X509_BADCERT_KEY_USAGE",""],["MBEDTLS_X509_BADCERT_MISSING",""],["MBEDTLS_X509_BADCERT_NOT_TRUSTED",""],["MBEDTLS_X509_BADCERT_NS_CERT_TYPE",""],["MBEDTLS_X509_BADCERT_OTHER",""],["MBEDTLS_X509_BADCERT_REVOKED",""],["MBEDTLS_X509_BADCERT_SKIP_VERIFY",""],["MBEDTLS_X509_BADCRL_BAD_KEY",""],["MBEDTLS_X509_BADCRL_BAD_MD",""],["MBEDTLS_X509_BADCRL_BAD_PK",""],["MBEDTLS_X509_BADCRL_EXPIRED",""],["MBEDTLS_X509_BADCRL_FUTURE",""],["MBEDTLS_X509_BADCRL_NOT_TRUSTED",""],["MBEDTLS_X509_CRT_VERSION_1",""],["MBEDTLS_X509_CRT_VERSION_2",""],["MBEDTLS_X509_CRT_VERSION_3",""],["MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER",""],["MBEDTLS_X509_EXT_BASIC_CONSTRAINTS",""],["MBEDTLS_X509_EXT_CERTIFICATE_POLICIES",""],["MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS",""],["MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE",""],["MBEDTLS_X509_EXT_FRESHEST_CRL",""],["MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY",""],["MBEDTLS_X509_EXT_ISSUER_ALT_NAME",""],["MBEDTLS_X509_EXT_KEY_USAGE",""],["MBEDTLS_X509_EXT_NAME_CONSTRAINTS",""],["MBEDTLS_X509_EXT_NS_CERT_TYPE",""],["MBEDTLS_X509_EXT_POLICY_CONSTRAINTS",""],["MBEDTLS_X509_EXT_POLICY_MAPPINGS",""],["MBEDTLS_X509_EXT_SUBJECT_ALT_NAME",""],["MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS",""],["MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER",""],["MBEDTLS_X509_FORMAT_DER",""],["MBEDTLS_X509_FORMAT_PEM",""],["MBEDTLS_X509_KU_CRL_SIGN",""],["MBEDTLS_X509_KU_DATA_ENCIPHERMENT",""],["MBEDTLS_X509_KU_DECIPHER_ONLY",""],["MBEDTLS_X509_KU_DIGITAL_SIGNATURE",""],["MBEDTLS_X509_KU_ENCIPHER_ONLY",""],["MBEDTLS_X509_KU_KEY_AGREEMENT",""],["MBEDTLS_X509_KU_KEY_CERT_SIGN",""],["MBEDTLS_X509_KU_KEY_ENCIPHERMENT",""],["MBEDTLS_X509_KU_NON_REPUDIATION",""],["MBEDTLS_X509_MAX_DN_NAME_SIZE",""],["MBEDTLS_X509_MAX_FILE_PATH_LEN",""],["MBEDTLS_X509_MAX_INTERMEDIATE_CA",""],["MBEDTLS_X509_MAX_VERIFY_CHAIN_SIZE",""],["MBEDTLS_X509_NS_CERT_TYPE_EMAIL",""],["MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA",""],["MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING",""],["MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA",""],["MBEDTLS_X509_NS_CERT_TYPE_RESERVED",""],["MBEDTLS_X509_NS_CERT_TYPE_SSL_CA",""],["MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT",""],["MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER",""],["MBEDTLS_X509_RFC5280_MAX_SERIAL_LEN",""],["MBEDTLS_X509_RFC5280_UTC_TIME_LEN",""],["MB_LEN_MAX",""],["MCONTROL_ACTION",""],["MCONTROL_ACTION_DEBUG_EXCEPTION",""],["MCONTROL_ACTION_DEBUG_MODE",""],["MCONTROL_ACTION_TRACE_EMIT",""],["MCONTROL_ACTION_TRACE_START",""],["MCONTROL_ACTION_TRACE_STOP",""],["MCONTROL_CHAIN",""],["MCONTROL_EXECUTE",""],["MCONTROL_H",""],["MCONTROL_LOAD",""],["MCONTROL_M",""],["MCONTROL_MATCH",""],["MCONTROL_MATCH_EQUAL",""],["MCONTROL_MATCH_GE",""],["MCONTROL_MATCH_LT",""],["MCONTROL_MATCH_MASK_HIGH",""],["MCONTROL_MATCH_MASK_LOW",""],["MCONTROL_MATCH_NAPOT",""],["MCONTROL_S",""],["MCONTROL_SELECT",""],["MCONTROL_STORE",""],["MCONTROL_TIMING",""],["MCONTROL_TYPE_MATCH",""],["MCONTROL_TYPE_NONE",""],["MCONTROL_U",""],["MCU_SEL",""],["MCU_SEL_S",""],["MCU_SEL_V",""],["MDNS_TYPE_A",""],["MDNS_TYPE_AAAA",""],["MDNS_TYPE_ANY",""],["MDNS_TYPE_NSEC",""],["MDNS_TYPE_OPT",""],["MDNS_TYPE_PTR",""],["MDNS_TYPE_SRV",""],["MDNS_TYPE_TXT",""],["MEMP_MEM_INIT",""],["MEMP_MEM_MALLOC",""],["MEMP_NUM_ALTCP_PCB",""],["MEMP_NUM_API_MSG",""],["MEMP_NUM_ARP_QUEUE",""],["MEMP_NUM_DNS_API_MSG",""],["MEMP_NUM_FRAG_PBUF",""],["MEMP_NUM_IGMP_GROUP",""],["MEMP_NUM_LOCALHOSTLIST",""],["MEMP_NUM_MLD6_GROUP",""],["MEMP_NUM_ND6_QUEUE",""],["MEMP_NUM_NETBUF",""],["MEMP_NUM_NETCONN",""],["MEMP_NUM_NETDB",""],["MEMP_NUM_NETIFAPI_MSG",""],["MEMP_NUM_PBUF",""],["MEMP_NUM_RAW_PCB",""],["MEMP_NUM_REASSDATA",""],["MEMP_NUM_SELECT_CB",""],["MEMP_NUM_SOCKET_SETGETSOCKOPT_DATA",""],["MEMP_NUM_TCPIP_MSG_API",""],["MEMP_NUM_TCPIP_MSG_INPKT",""],["MEMP_NUM_TCP_PCB",""],["MEMP_NUM_TCP_PCB_LISTEN",""],["MEMP_NUM_TCP_SEG",""],["MEMP_NUM_UDP_PCB",""],["MEMP_OVERFLOW_CHECK",""],["MEMP_SANITY_CHECK",""],["MEMP_SIZE",""],["MEMP_STATS",""],["MEMP_USE_CUSTOM_POOLS",""],["MEM_ALIGNMENT",""],["MEM_DEBUG",""],["MEM_LIBC_MALLOC",""],["MEM_OVERFLOW_CHECK",""],["MEM_SANITY_CHECK",""],["MEM_SIZE",""],["MEM_STATS",""],["MEM_USE_POOLS",""],["MEM_USE_POOLS_TRY_BIGGER_POOL",""],["MHZ",""],["MIB2_STATS",""],["MINSIGSTKSZ",""],["MLD6_STATS",""],["MMC_ALL_SEND_CID",""],["MMC_APP_CMD",""],["MMC_CSD_CSDVER_1_0",""],["MMC_CSD_CSDVER_2_0",""],["MMC_CSD_CSDVER_EXT_CSD",""],["MMC_CSD_MMCVER_1_0",""],["MMC_CSD_MMCVER_1_4",""],["MMC_CSD_MMCVER_2_0",""],["MMC_CSD_MMCVER_3_1",""],["MMC_CSD_MMCVER_4_0",""],["MMC_GET_CID",""],["MMC_GET_CSD",""],["MMC_GET_OCR",""],["MMC_GET_SDSTAT",""],["MMC_GET_TYPE",""],["MMC_GO_IDLE_STATE",""],["MMC_OCR_1_65V_1_95V",""],["MMC_OCR_2_0V_2_1V",""],["MMC_OCR_2_1V_2_2V",""],["MMC_OCR_2_2V_2_3V",""],["MMC_OCR_2_3V_2_4V",""],["MMC_OCR_2_4V_2_5V",""],["MMC_OCR_2_5V_2_6V",""],["MMC_OCR_2_6V_2_7V",""],["MMC_OCR_2_7V_2_8V",""],["MMC_OCR_2_8V_2_9V",""],["MMC_OCR_2_9V_3_0V",""],["MMC_OCR_3_0V_3_1V",""],["MMC_OCR_3_1V_3_2V",""],["MMC_OCR_3_2V_3_3V",""],["MMC_OCR_3_3V_3_4V",""],["MMC_OCR_3_4V_3_5V",""],["MMC_OCR_3_5V_3_6V",""],["MMC_OCR_ACCESS_MODE_MASK",""],["MMC_OCR_BYTE_MODE",""],["MMC_OCR_MEM_READY",""],["MMC_OCR_SECTOR_MODE",""],["MMC_R1_APP_CMD",""],["MMC_R1_READY_FOR_DATA",""],["MMC_R1_SWITCH_ERROR",""],["MMC_READ_BLOCK_MULTIPLE",""],["MMC_READ_BLOCK_SINGLE",""],["MMC_READ_DAT_UNTIL_STOP",""],["MMC_SELECT_CARD",""],["MMC_SEND_CID",""],["MMC_SEND_CSD",""],["MMC_SEND_EXT_CSD",""],["MMC_SEND_OP_COND",""],["MMC_SEND_STATUS",""],["MMC_SET_BLOCKLEN",""],["MMC_SET_BLOCK_COUNT",""],["MMC_SET_RELATIVE_ADDR",""],["MMC_STOP_TRANSMISSION",""],["MMC_SWITCH",""],["MMC_SWITCH_MODE_CLEAR_BITS",""],["MMC_SWITCH_MODE_CMD_SET",""],["MMC_SWITCH_MODE_SET_BITS",""],["MMC_SWITCH_MODE_WRITE_BYTE",""],["MMC_WRITE_BLOCK_MULTIPLE",""],["MMC_WRITE_BLOCK_SINGLE",""],["MMC_WRITE_DAT_UNTIL_STOP",""],["MSG_CTRUNC",""],["MSG_DONTROUTE",""],["MSG_DONTWAIT",""],["MSG_EOR",""],["MSG_MORE",""],["MSG_NOSIGNAL",""],["MSG_OOB",""],["MSG_PEEK",""],["MSG_TRUNC",""],["MSG_WAITALL",""],["MSTATUS32_SD",""],["MSTATUS64_SD",""],["MSTATUS_FS",""],["MSTATUS_HIE",""],["MSTATUS_HPIE",""],["MSTATUS_MIE",""],["MSTATUS_MPIE",""],["MSTATUS_MPP",""],["MSTATUS_MPRV",""],["MSTATUS_MXR",""],["MSTATUS_SD",""],["MSTATUS_SIE",""],["MSTATUS_SPIE",""],["MSTATUS_SPP",""],["MSTATUS_SUM",""],["MSTATUS_SXL",""],["MSTATUS_TSR",""],["MSTATUS_TVM",""],["MSTATUS_TW",""],["MSTATUS_UIE",""],["MSTATUS_UPIE",""],["MSTATUS_UXL",""],["MSTATUS_VS",""],["MSTATUS_XS",""],["NAME_MAX",""],["NAPT_DEBUG",""],["NBBY",""],["NBT_BLE_IDX",""],["NCCS",""],["ND6_STATS",""],["NETIF_ADDR_IDX_MAX",""],["NETIF_FLAG_BROADCAST",""],["NETIF_FLAG_ETHARP",""],["NETIF_FLAG_ETHERNET",""],["NETIF_FLAG_GARP",""],["NETIF_FLAG_IGMP",""],["NETIF_FLAG_LINK_UP",""],["NETIF_FLAG_MLD6",""],["NETIF_FLAG_UP",""],["NETIF_MAX_HWADDR_LEN",""],["NETIF_NAMESIZE",""],["NETIF_NO_INDEX",""],["NGROUPS_MAX",""],["NI_DGRAM",""],["NI_MAXHOST",""],["NI_MAXSERV",""],["NI_NUMERICSERV",""],["NL0",""],["NL1",""],["NLDLY",""],["NL_ARGMAX",""],["NOFILE",""],["NOFLSH",""],["NO_SYS",""],["NSIG",""],["NVS_DEFAULT_PART_NAME",""],["NVS_KEY_NAME_MAX_SIZE",""],["NVS_KEY_SIZE",""],["NVS_PART_NAME_MAX_SIZE",""],["OCRNL",""],["OFILL",""],["OLCUC",""],["ONLCR",""],["ONLRET",""],["ONOCR",""],["OPEN_MAX",""],["OPOST",""],["OSI_FUNCS_TIME_BLOCKING",""],["OSI_QUEUE_SEND_BACK",""],["OSI_QUEUE_SEND_FRONT",""],["OSI_QUEUE_SEND_OVERWRITE",""],["OTA_SIZE_UNKNOWN",""],["OTA_WITH_SEQUENTIAL_WRITES",""],["OTHER_BLOCKS_POWERUP",""],["OTHER_BLOCKS_WAIT",""],["O_APPEND",""],["O_CLOEXEC",""],["O_CREAT",""],["O_DIRECT",""],["O_DIRECTORY",""],["O_EXCL",""],["O_EXEC",""],["O_NDELAY",""],["O_NOCTTY",""],["O_NOFOLLOW",""],["O_NONBLOCK",""],["O_RDONLY",""],["O_RDWR",""],["O_SEARCH",""],["O_SYNC",""],["O_TRUNC",""],["O_WRONLY",""],["PAD_POWER_SEL_S",""],["PAD_POWER_SEL_V",""],["PAD_POWER_SWITCH_DELAY",""],["PAD_POWER_SWITCH_DELAY_S",""],["PAD_POWER_SWITCH_DELAY_V",""],["PARENB",""],["PARMRK",""],["PARODD",""],["PART_FLAG_ENCRYPTED",""],["PART_SUBTYPE_DATA_EFUSE_EM",""],["PART_SUBTYPE_DATA_NVS_KEYS",""],["PART_SUBTYPE_DATA_OTA",""],["PART_SUBTYPE_DATA_RF",""],["PART_SUBTYPE_DATA_WIFI",""],["PART_SUBTYPE_END",""],["PART_SUBTYPE_FACTORY",""],["PART_SUBTYPE_OTA_FLAG",""],["PART_SUBTYPE_OTA_MASK",""],["PART_SUBTYPE_TEST",""],["PART_TYPE_APP",""],["PART_TYPE_DATA",""],["PART_TYPE_END",""],["PATHSIZE",""],["PATH_MAX",""],["PBUF_ALLOC_FLAG_DATA_CONTIGUOUS",""],["PBUF_ALLOC_FLAG_RX",""],["PBUF_FLAG_IS_CUSTOM",""],["PBUF_FLAG_LLBCAST",""],["PBUF_FLAG_LLMCAST",""],["PBUF_FLAG_MCASTLOOP",""],["PBUF_FLAG_PUSH",""],["PBUF_FLAG_TCP_FIN",""],["PBUF_IP_HLEN",""],["PBUF_LINK_ENCAPSULATION_HLEN",""],["PBUF_LINK_HLEN",""],["PBUF_POOL_FREE_OOSEQ",""],["PBUF_POOL_SIZE",""],["PBUF_TRANSPORT_HLEN",""],["PBUF_TYPE_ALLOC_SRC_MASK",""],["PBUF_TYPE_ALLOC_SRC_MASK_APP_MAX",""],["PBUF_TYPE_ALLOC_SRC_MASK_APP_MIN",""],["PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP",""],["PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF",""],["PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF_POOL",""],["PBUF_TYPE_FLAG_DATA_VOLATILE",""],["PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS",""],["PCMCLK_IN_IDX",""],["PCMCLK_OUT_IDX",""],["PCMDIN_IDX",""],["PCMDOUT_IDX",""],["PCMFSYNC_IN_IDX",""],["PCMFSYNC_OUT_IDX",""],["PDP_ENDIAN",""],["PERIPHS_IO_MUX_GPIO10_U",""],["PERIPHS_IO_MUX_GPIO18_U",""],["PERIPHS_IO_MUX_GPIO19_U",""],["PERIPHS_IO_MUX_GPIO2_U",""],["PERIPHS_IO_MUX_GPIO3_U",""],["PERIPHS_IO_MUX_GPIO8_U",""],["PERIPHS_IO_MUX_GPIO9_U",""],["PERIPHS_IO_MUX_MTCK_U",""],["PERIPHS_IO_MUX_MTDI_U",""],["PERIPHS_IO_MUX_MTDO_U",""],["PERIPHS_IO_MUX_MTMS_U",""],["PERIPHS_IO_MUX_SPICLK_U",""],["PERIPHS_IO_MUX_SPICS0_U",""],["PERIPHS_IO_MUX_SPID_U",""],["PERIPHS_IO_MUX_SPIHD_U",""],["PERIPHS_IO_MUX_SPIQ_U",""],["PERIPHS_IO_MUX_SPIWP_U",""],["PERIPHS_IO_MUX_U0RXD_U",""],["PERIPHS_IO_MUX_U0TXD_U",""],["PERIPHS_IO_MUX_VDD_SPI_U",""],["PERIPHS_IO_MUX_XTAL_32K_N_U",""],["PERIPHS_IO_MUX_XTAL_32K_P_U",""],["PF_INET",""],["PF_INET6",""],["PF_UNSPEC",""],["PIN_CTRL",""],["PIN_FUNC_GPIO",""],["PIPE_BUF",""],["PKT_RX_ON_IDX",""],["PKT_TX_ON_IDX",""],["PMPADDR_ALL",""],["PMP_A",""],["PMP_L",""],["PMP_NA4",""],["PMP_NAPOT",""],["PMP_R",""],["PMP_SHIFT",""],["PMP_TOR",""],["PMP_W",""],["PMP_X",""],["POLLERR",""],["POLLHUP",""],["POLLIN",""],["POLLNVAL",""],["POLLOUT",""],["POLLPRI",""],["POLLRDBAND",""],["POLLRDNORM",""],["POLLWRBAND",""],["POLLWRNORM",""],["PRO_CPU_NUM",""],["PRV_H",""],["PRV_M",""],["PRV_S",""],["PRV_U",""],["PTE_A",""],["PTE_D",""],["PTE_G",""],["PTE_PPN_SHIFT",""],["PTE_R",""],["PTE_SOFT",""],["PTE_U",""],["PTE_V",""],["PTE_W",""],["PTE_X",""],["PTHREAD_CANCEL_ASYNCHRONOUS",""],["PTHREAD_CANCEL_DEFERRED",""],["PTHREAD_CANCEL_DISABLE",""],["PTHREAD_CANCEL_ENABLE",""],["PTHREAD_CREATE_DETACHED",""],["PTHREAD_CREATE_JOINABLE",""],["PTHREAD_EXPLICIT_SCHED",""],["PTHREAD_INHERIT_SCHED",""],["PTHREAD_MUTEX_DEFAULT",""],["PTHREAD_MUTEX_ERRORCHECK",""],["PTHREAD_MUTEX_NORMAL",""],["PTHREAD_MUTEX_RECURSIVE",""],["PTHREAD_SCOPE_PROCESS",""],["PTHREAD_SCOPE_SYSTEM",""],["PTHREAD_STACK_MIN",""],["P_tmpdir",""],["RAND_MAX",""],["RAW_DEBUG",""],["RAW_TTL",""],["REF_CLK_FREQ",""],["REG_IO_MUX_BASE",""],["RE_DUP_MAX",""],["RISCV_PGLEVEL_BITS",""],["RISCV_PGSHIFT",""],["RISCV_PGSIZE",""],["RMT_CHANNEL_FLAGS_ALWAYS_ON",""],["RMT_CHANNEL_FLAGS_AWARE_DFS",""],["RMT_MEM_ITEM_NUM",""],["RMT_SIG_IN0_IDX",""],["RMT_SIG_IN1_IDX",""],["RMT_SIG_OUT0_IDX",""],["RMT_SIG_OUT1_IDX",""],["RTC_CK8M_ENABLE_WAIT_DEFAULT",""],["RTC_CLK_CAL_FRACT",""],["RTC_CLK_FREQ",""],["RTC_CNTL_ALL_RESET_FLAG_APPCPU_S",""],["RTC_CNTL_ALL_RESET_FLAG_APPCPU_V",""],["RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_S",""],["RTC_CNTL_ALL_RESET_FLAG_CLR_APPCPU_V",""],["RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_S",""],["RTC_CNTL_ALL_RESET_FLAG_CLR_PROCPU_V",""],["RTC_CNTL_ALL_RESET_FLAG_PROCPU_S",""],["RTC_CNTL_ALL_RESET_FLAG_PROCPU_V",""],["RTC_CNTL_ANALOG_FORCE_ISO_S",""],["RTC_CNTL_ANALOG_FORCE_ISO_V",""],["RTC_CNTL_ANALOG_FORCE_NOISO_S",""],["RTC_CNTL_ANALOG_FORCE_NOISO_V",""],["RTC_CNTL_ANA_CLK_DIV",""],["RTC_CNTL_ANA_CLK_DIV_S",""],["RTC_CNTL_ANA_CLK_DIV_V",""],["RTC_CNTL_ANA_CLK_DIV_VLD_S",""],["RTC_CNTL_ANA_CLK_DIV_VLD_V",""],["RTC_CNTL_ANA_CLK_RTC_SEL",""],["RTC_CNTL_ANA_CLK_RTC_SEL_S",""],["RTC_CNTL_ANA_CLK_RTC_SEL_V",""],["RTC_CNTL_ANA_CONF_REG",""],["RTC_CNTL_APB2RTC_BRIDGE_SEL_S",""],["RTC_CNTL_APB2RTC_BRIDGE_SEL_V",""],["RTC_CNTL_BBPLL_CAL_INT_CLR_S",""],["RTC_CNTL_BBPLL_CAL_INT_CLR_V",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_S",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_V",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_S",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_W1TC_V",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_S",""],["RTC_CNTL_BBPLL_CAL_INT_ENA_W1TS_V",""],["RTC_CNTL_BBPLL_CAL_INT_RAW_S",""],["RTC_CNTL_BBPLL_CAL_INT_RAW_V",""],["RTC_CNTL_BBPLL_CAL_INT_ST_S",""],["RTC_CNTL_BBPLL_CAL_INT_ST_V",""],["RTC_CNTL_BBPLL_CAL_SLP_START_S",""],["RTC_CNTL_BBPLL_CAL_SLP_START_V",""],["RTC_CNTL_BBPLL_FORCE_PD_S",""],["RTC_CNTL_BBPLL_FORCE_PD_V",""],["RTC_CNTL_BBPLL_FORCE_PU_S",""],["RTC_CNTL_BBPLL_FORCE_PU_V",""],["RTC_CNTL_BBPLL_I2C_FORCE_PD_S",""],["RTC_CNTL_BBPLL_I2C_FORCE_PD_V",""],["RTC_CNTL_BBPLL_I2C_FORCE_PU_S",""],["RTC_CNTL_BBPLL_I2C_FORCE_PU_V",""],["RTC_CNTL_BB_I2C_FORCE_PD_S",""],["RTC_CNTL_BB_I2C_FORCE_PD_V",""],["RTC_CNTL_BB_I2C_FORCE_PU_S",""],["RTC_CNTL_BB_I2C_FORCE_PU_V",""],["RTC_CNTL_BIASSLP_MONITOR_DEFAULT",""],["RTC_CNTL_BIASSLP_SLEEP_DEFAULT",""],["RTC_CNTL_BIASSLP_SLEEP_ON",""],["RTC_CNTL_BIAS_BUF_DEEP_SLP_S",""],["RTC_CNTL_BIAS_BUF_DEEP_SLP_V",""],["RTC_CNTL_BIAS_BUF_IDLE_S",""],["RTC_CNTL_BIAS_BUF_IDLE_V",""],["RTC_CNTL_BIAS_BUF_MONITOR_S",""],["RTC_CNTL_BIAS_BUF_MONITOR_V",""],["RTC_CNTL_BIAS_BUF_WAKE_S",""],["RTC_CNTL_BIAS_BUF_WAKE_V",""],["RTC_CNTL_BIAS_CONF_REG",""],["RTC_CNTL_BIAS_SLEEP_DEEP_SLP_S",""],["RTC_CNTL_BIAS_SLEEP_DEEP_SLP_V",""],["RTC_CNTL_BIAS_SLEEP_MONITOR_S",""],["RTC_CNTL_BIAS_SLEEP_MONITOR_V",""],["RTC_CNTL_BROWN_OUT_ANA_RST_EN_S",""],["RTC_CNTL_BROWN_OUT_ANA_RST_EN_V",""],["RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_S",""],["RTC_CNTL_BROWN_OUT_CLOSE_FLASH_ENA_V",""],["RTC_CNTL_BROWN_OUT_CNT_CLR_S",""],["RTC_CNTL_BROWN_OUT_CNT_CLR_V",""],["RTC_CNTL_BROWN_OUT_DET_S",""],["RTC_CNTL_BROWN_OUT_DET_V",""],["RTC_CNTL_BROWN_OUT_ENA_S",""],["RTC_CNTL_BROWN_OUT_ENA_V",""],["RTC_CNTL_BROWN_OUT_INT_CLR_S",""],["RTC_CNTL_BROWN_OUT_INT_CLR_V",""],["RTC_CNTL_BROWN_OUT_INT_ENA_S",""],["RTC_CNTL_BROWN_OUT_INT_ENA_V",""],["RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_S",""],["RTC_CNTL_BROWN_OUT_INT_ENA_W1TC_V",""],["RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_S",""],["RTC_CNTL_BROWN_OUT_INT_ENA_W1TS_V",""],["RTC_CNTL_BROWN_OUT_INT_RAW_S",""],["RTC_CNTL_BROWN_OUT_INT_RAW_V",""],["RTC_CNTL_BROWN_OUT_INT_ST_S",""],["RTC_CNTL_BROWN_OUT_INT_ST_V",""],["RTC_CNTL_BROWN_OUT_INT_WAIT",""],["RTC_CNTL_BROWN_OUT_INT_WAIT_S",""],["RTC_CNTL_BROWN_OUT_INT_WAIT_V",""],["RTC_CNTL_BROWN_OUT_PD_RF_ENA_S",""],["RTC_CNTL_BROWN_OUT_PD_RF_ENA_V",""],["RTC_CNTL_BROWN_OUT_REG",""],["RTC_CNTL_BROWN_OUT_RST_ENA_S",""],["RTC_CNTL_BROWN_OUT_RST_ENA_V",""],["RTC_CNTL_BROWN_OUT_RST_SEL_S",""],["RTC_CNTL_BROWN_OUT_RST_SEL_V",""],["RTC_CNTL_BROWN_OUT_RST_WAIT",""],["RTC_CNTL_BROWN_OUT_RST_WAIT_S",""],["RTC_CNTL_BROWN_OUT_RST_WAIT_V",""],["RTC_CNTL_BT_FORCE_ISO_S",""],["RTC_CNTL_BT_FORCE_ISO_V",""],["RTC_CNTL_BT_FORCE_NOISO_S",""],["RTC_CNTL_BT_FORCE_NOISO_V",""],["RTC_CNTL_BT_FORCE_PD_S",""],["RTC_CNTL_BT_FORCE_PD_V",""],["RTC_CNTL_BT_FORCE_PU_S",""],["RTC_CNTL_BT_FORCE_PU_V",""],["RTC_CNTL_BT_PD_EN_S",""],["RTC_CNTL_BT_PD_EN_V",""],["RTC_CNTL_BT_POWERUP_TIMER",""],["RTC_CNTL_BT_POWERUP_TIMER_S",""],["RTC_CNTL_BT_POWERUP_TIMER_V",""],["RTC_CNTL_BT_WAIT_TIMER",""],["RTC_CNTL_BT_WAIT_TIMER_S",""],["RTC_CNTL_BT_WAIT_TIMER_V",""],["RTC_CNTL_CK8M_DFREQ",""],["RTC_CNTL_CK8M_DFREQ_DEFAULT",""],["RTC_CNTL_CK8M_DFREQ_S",""],["RTC_CNTL_CK8M_DFREQ_V",""],["RTC_CNTL_CK8M_DIV",""],["RTC_CNTL_CK8M_DIV_S",""],["RTC_CNTL_CK8M_DIV_SEL",""],["RTC_CNTL_CK8M_DIV_SEL_S",""],["RTC_CNTL_CK8M_DIV_SEL_V",""],["RTC_CNTL_CK8M_DIV_SEL_VLD_S",""],["RTC_CNTL_CK8M_DIV_SEL_VLD_V",""],["RTC_CNTL_CK8M_DIV_V",""],["RTC_CNTL_CK8M_FORCE_NOGATING_S",""],["RTC_CNTL_CK8M_FORCE_NOGATING_V",""],["RTC_CNTL_CK8M_FORCE_PD_S",""],["RTC_CNTL_CK8M_FORCE_PD_V",""],["RTC_CNTL_CK8M_FORCE_PU_S",""],["RTC_CNTL_CK8M_FORCE_PU_V",""],["RTC_CNTL_CK8M_WAIT",""],["RTC_CNTL_CK8M_WAIT_DEFAULT",""],["RTC_CNTL_CK8M_WAIT_S",""],["RTC_CNTL_CK8M_WAIT_SLP_CYCLES",""],["RTC_CNTL_CK8M_WAIT_V",""],["RTC_CNTL_CKGEN_I2C_PU_S",""],["RTC_CNTL_CKGEN_I2C_PU_V",""],["RTC_CNTL_CLK_CONF_REG",""],["RTC_CNTL_CLR_DG_PAD_AUTOHOLD_S",""],["RTC_CNTL_CLR_DG_PAD_AUTOHOLD_V",""],["RTC_CNTL_CNTL_DATE",""],["RTC_CNTL_CNTL_DATE_S",""],["RTC_CNTL_CNTL_DATE_V",""],["RTC_CNTL_COCPU_STATE_DONE_S",""],["RTC_CNTL_COCPU_STATE_DONE_V",""],["RTC_CNTL_COCPU_STATE_SLP_S",""],["RTC_CNTL_COCPU_STATE_SLP_V",""],["RTC_CNTL_COCPU_STATE_START_S",""],["RTC_CNTL_COCPU_STATE_START_V",""],["RTC_CNTL_COCPU_STATE_SWITCH_S",""],["RTC_CNTL_COCPU_STATE_SWITCH_V",""],["RTC_CNTL_CPUPERIOD_SEL",""],["RTC_CNTL_CPUPERIOD_SEL_S",""],["RTC_CNTL_CPUPERIOD_SEL_V",""],["RTC_CNTL_CPUSEL_CONF_S",""],["RTC_CNTL_CPUSEL_CONF_V",""],["RTC_CNTL_CPU_PERIOD_CONF_REG",""],["RTC_CNTL_CPU_STALL_EN_S",""],["RTC_CNTL_CPU_STALL_EN_V",""],["RTC_CNTL_CPU_STALL_WAIT",""],["RTC_CNTL_CPU_STALL_WAIT_S",""],["RTC_CNTL_CPU_STALL_WAIT_V",""],["RTC_CNTL_CPU_TOP_FORCE_ISO_S",""],["RTC_CNTL_CPU_TOP_FORCE_ISO_V",""],["RTC_CNTL_CPU_TOP_FORCE_NOISO_S",""],["RTC_CNTL_CPU_TOP_FORCE_NOISO_V",""],["RTC_CNTL_CPU_TOP_FORCE_PD_S",""],["RTC_CNTL_CPU_TOP_FORCE_PD_V",""],["RTC_CNTL_CPU_TOP_FORCE_PU_S",""],["RTC_CNTL_CPU_TOP_FORCE_PU_V",""],["RTC_CNTL_CPU_TOP_PD_EN_S",""],["RTC_CNTL_CPU_TOP_PD_EN_V",""],["RTC_CNTL_CPU_TOP_POWERUP_TIMER",""],["RTC_CNTL_CPU_TOP_POWERUP_TIMER_S",""],["RTC_CNTL_CPU_TOP_POWERUP_TIMER_V",""],["RTC_CNTL_CPU_TOP_WAIT_TIMER",""],["RTC_CNTL_CPU_TOP_WAIT_TIMER_S",""],["RTC_CNTL_CPU_TOP_WAIT_TIMER_V",""],["RTC_CNTL_DAC_XTAL_32K",""],["RTC_CNTL_DAC_XTAL_32K_S",""],["RTC_CNTL_DAC_XTAL_32K_V",""],["RTC_CNTL_DATE_REG",""],["RTC_CNTL_DBG_ATTEN_DEEPSLEEP_DEFAULT",""],["RTC_CNTL_DBG_ATTEN_DEEP_SLP",""],["RTC_CNTL_DBG_ATTEN_DEEP_SLP_S",""],["RTC_CNTL_DBG_ATTEN_DEEP_SLP_V",""],["RTC_CNTL_DBG_ATTEN_LIGHTSLEEP_DEFAULT",""],["RTC_CNTL_DBG_ATTEN_LIGHTSLEEP_NODROP",""],["RTC_CNTL_DBG_ATTEN_MONITOR",""],["RTC_CNTL_DBG_ATTEN_MONITOR_DEFAULT",""],["RTC_CNTL_DBG_ATTEN_MONITOR_S",""],["RTC_CNTL_DBG_ATTEN_MONITOR_V",""],["RTC_CNTL_DBG_MAP_REG",""],["RTC_CNTL_DBG_SAR_SEL_REG",""],["RTC_CNTL_DBG_SEL_REG",""],["RTC_CNTL_DBIAS_0V90",""],["RTC_CNTL_DBIAS_0V95",""],["RTC_CNTL_DBIAS_1V00",""],["RTC_CNTL_DBIAS_1V05",""],["RTC_CNTL_DBIAS_1V10",""],["RTC_CNTL_DBIAS_1V15",""],["RTC_CNTL_DBIAS_1V20",""],["RTC_CNTL_DBIAS_1V25",""],["RTC_CNTL_DBIAS_1V30",""],["RTC_CNTL_DBIAS_SLP",""],["RTC_CNTL_DBOOST_FORCE_PD_S",""],["RTC_CNTL_DBOOST_FORCE_PD_V",""],["RTC_CNTL_DBOOST_FORCE_PU_S",""],["RTC_CNTL_DBOOST_FORCE_PU_V",""],["RTC_CNTL_DBUF_XTAL_32K_S",""],["RTC_CNTL_DBUF_XTAL_32K_V",""],["RTC_CNTL_DEBUG_12M_NO_GATING_S",""],["RTC_CNTL_DEBUG_12M_NO_GATING_V",""],["RTC_CNTL_DEBUG_BIT_SEL",""],["RTC_CNTL_DEBUG_BIT_SEL_S",""],["RTC_CNTL_DEBUG_BIT_SEL_V",""],["RTC_CNTL_DEBUG_SEL0",""],["RTC_CNTL_DEBUG_SEL0_S",""],["RTC_CNTL_DEBUG_SEL0_V",""],["RTC_CNTL_DEBUG_SEL1",""],["RTC_CNTL_DEBUG_SEL1_S",""],["RTC_CNTL_DEBUG_SEL1_V",""],["RTC_CNTL_DEBUG_SEL2",""],["RTC_CNTL_DEBUG_SEL2_S",""],["RTC_CNTL_DEBUG_SEL2_V",""],["RTC_CNTL_DEBUG_SEL3",""],["RTC_CNTL_DEBUG_SEL3_S",""],["RTC_CNTL_DEBUG_SEL3_V",""],["RTC_CNTL_DEBUG_SEL4",""],["RTC_CNTL_DEBUG_SEL4_S",""],["RTC_CNTL_DEBUG_SEL4_V",""],["RTC_CNTL_DEEP_SLP_REJECT_EN_S",""],["RTC_CNTL_DEEP_SLP_REJECT_EN_V",""],["RTC_CNTL_DGM_XTAL_32K",""],["RTC_CNTL_DGM_XTAL_32K_S",""],["RTC_CNTL_DGM_XTAL_32K_V",""],["RTC_CNTL_DG_PAD_AUTOHOLD_EN_S",""],["RTC_CNTL_DG_PAD_AUTOHOLD_EN_V",""],["RTC_CNTL_DG_PAD_AUTOHOLD_S",""],["RTC_CNTL_DG_PAD_AUTOHOLD_V",""],["RTC_CNTL_DG_PAD_FORCE_HOLD_S",""],["RTC_CNTL_DG_PAD_FORCE_HOLD_V",""],["RTC_CNTL_DG_PAD_FORCE_ISO_S",""],["RTC_CNTL_DG_PAD_FORCE_ISO_V",""],["RTC_CNTL_DG_PAD_FORCE_NOISO_S",""],["RTC_CNTL_DG_PAD_FORCE_NOISO_V",""],["RTC_CNTL_DG_PAD_FORCE_UNHOLD_S",""],["RTC_CNTL_DG_PAD_FORCE_UNHOLD_V",""],["RTC_CNTL_DG_PERI_FORCE_ISO_S",""],["RTC_CNTL_DG_PERI_FORCE_ISO_V",""],["RTC_CNTL_DG_PERI_FORCE_NOISO_S",""],["RTC_CNTL_DG_PERI_FORCE_NOISO_V",""],["RTC_CNTL_DG_PERI_FORCE_PD_S",""],["RTC_CNTL_DG_PERI_FORCE_PD_V",""],["RTC_CNTL_DG_PERI_FORCE_PU_S",""],["RTC_CNTL_DG_PERI_FORCE_PU_V",""],["RTC_CNTL_DG_PERI_PD_EN_S",""],["RTC_CNTL_DG_PERI_PD_EN_V",""],["RTC_CNTL_DG_PERI_POWERUP_TIMER",""],["RTC_CNTL_DG_PERI_POWERUP_TIMER_S",""],["RTC_CNTL_DG_PERI_POWERUP_TIMER_V",""],["RTC_CNTL_DG_PERI_WAIT_TIMER",""],["RTC_CNTL_DG_PERI_WAIT_TIMER_S",""],["RTC_CNTL_DG_PERI_WAIT_TIMER_V",""],["RTC_CNTL_DG_VDD_DRV_B_SLP",""],["RTC_CNTL_DG_VDD_DRV_B_SLP_DEFAULT",""],["RTC_CNTL_DG_VDD_DRV_B_SLP_EN_S",""],["RTC_CNTL_DG_VDD_DRV_B_SLP_EN_V",""],["RTC_CNTL_DG_VDD_DRV_B_SLP_S",""],["RTC_CNTL_DG_VDD_DRV_B_SLP_V",""],["RTC_CNTL_DG_WRAP_FORCE_ISO_S",""],["RTC_CNTL_DG_WRAP_FORCE_ISO_V",""],["RTC_CNTL_DG_WRAP_FORCE_NOISO_S",""],["RTC_CNTL_DG_WRAP_FORCE_NOISO_V",""],["RTC_CNTL_DG_WRAP_FORCE_NORST_S",""],["RTC_CNTL_DG_WRAP_FORCE_NORST_V",""],["RTC_CNTL_DG_WRAP_FORCE_PD_S",""],["RTC_CNTL_DG_WRAP_FORCE_PD_V",""],["RTC_CNTL_DG_WRAP_FORCE_PU_S",""],["RTC_CNTL_DG_WRAP_FORCE_PU_V",""],["RTC_CNTL_DG_WRAP_FORCE_RST_S",""],["RTC_CNTL_DG_WRAP_FORCE_RST_V",""],["RTC_CNTL_DG_WRAP_PD_EN_S",""],["RTC_CNTL_DG_WRAP_PD_EN_V",""],["RTC_CNTL_DG_WRAP_POWERUP_TIMER",""],["RTC_CNTL_DG_WRAP_POWERUP_TIMER_S",""],["RTC_CNTL_DG_WRAP_POWERUP_TIMER_V",""],["RTC_CNTL_DG_WRAP_WAIT_TIMER",""],["RTC_CNTL_DG_WRAP_WAIT_TIMER_S",""],["RTC_CNTL_DG_WRAP_WAIT_TIMER_V",""],["RTC_CNTL_DIAG0_REG",""],["RTC_CNTL_DIG_CAL_EN_S",""],["RTC_CNTL_DIG_CAL_EN_V",""],["RTC_CNTL_DIG_CLK8M_D256_EN_S",""],["RTC_CNTL_DIG_CLK8M_D256_EN_V",""],["RTC_CNTL_DIG_CLK8M_EN_S",""],["RTC_CNTL_DIG_CLK8M_EN_V",""],["RTC_CNTL_DIG_ISO_FORCE_OFF_S",""],["RTC_CNTL_DIG_ISO_FORCE_OFF_V",""],["RTC_CNTL_DIG_ISO_FORCE_ON_S",""],["RTC_CNTL_DIG_ISO_FORCE_ON_V",""],["RTC_CNTL_DIG_ISO_REG",""],["RTC_CNTL_DIG_ISO_S",""],["RTC_CNTL_DIG_ISO_V",""],["RTC_CNTL_DIG_PAD_HOLD",""],["RTC_CNTL_DIG_PAD_HOLD_REG",""],["RTC_CNTL_DIG_PAD_HOLD_S",""],["RTC_CNTL_DIG_PAD_HOLD_V",""],["RTC_CNTL_DIG_PWC_REG",""],["RTC_CNTL_DIG_XTAL32K_EN_S",""],["RTC_CNTL_DIG_XTAL32K_EN_V",""],["RTC_CNTL_DREFH_SDIO",""],["RTC_CNTL_DREFH_SDIO_S",""],["RTC_CNTL_DREFH_SDIO_V",""],["RTC_CNTL_DREFL_SDIO",""],["RTC_CNTL_DREFL_SDIO_S",""],["RTC_CNTL_DREFL_SDIO_V",""],["RTC_CNTL_DREFM_SDIO",""],["RTC_CNTL_DREFM_SDIO_S",""],["RTC_CNTL_DREFM_SDIO_V",""],["RTC_CNTL_DRESET_MASK_APPCPU_S",""],["RTC_CNTL_DRESET_MASK_APPCPU_V",""],["RTC_CNTL_DRESET_MASK_PROCPU_S",""],["RTC_CNTL_DRESET_MASK_PROCPU_V",""],["RTC_CNTL_DRES_XTAL_32K",""],["RTC_CNTL_DRES_XTAL_32K_S",""],["RTC_CNTL_DRES_XTAL_32K_V",""],["RTC_CNTL_EFUSE_CLK_FORCE_GATING_S",""],["RTC_CNTL_EFUSE_CLK_FORCE_GATING_V",""],["RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_S",""],["RTC_CNTL_EFUSE_CLK_FORCE_NOGATING_V",""],["RTC_CNTL_ENB_CK8M_DIV_S",""],["RTC_CNTL_ENB_CK8M_DIV_V",""],["RTC_CNTL_ENB_CK8M_S",""],["RTC_CNTL_ENB_CK8M_V",""],["RTC_CNTL_ENCKINIT_XTAL_32K_S",""],["RTC_CNTL_ENCKINIT_XTAL_32K_V",""],["RTC_CNTL_EXT_WAKEUP_CONF_REG",""],["RTC_CNTL_EXT_XTL_CONF_REG",""],["RTC_CNTL_FASTMEM_FORCE_LPD_S",""],["RTC_CNTL_FASTMEM_FORCE_LPD_V",""],["RTC_CNTL_FASTMEM_FORCE_LPU_S",""],["RTC_CNTL_FASTMEM_FORCE_LPU_V",""],["RTC_CNTL_FAST_CLK_RTC_SEL_S",""],["RTC_CNTL_FAST_CLK_RTC_SEL_V",""],["RTC_CNTL_FIB_SEL",""],["RTC_CNTL_FIB_SEL_REG",""],["RTC_CNTL_FIB_SEL_S",""],["RTC_CNTL_FIB_SEL_V",""],["RTC_CNTL_FORCE_DOWNLOAD_BOOT_S",""],["RTC_CNTL_FORCE_DOWNLOAD_BOOT_V",""],["RTC_CNTL_FORCE_XPD_SAR",""],["RTC_CNTL_FORCE_XPD_SAR_S",""],["RTC_CNTL_FORCE_XPD_SAR_V",""],["RTC_CNTL_GLITCH_DET_INT_CLR_S",""],["RTC_CNTL_GLITCH_DET_INT_CLR_V",""],["RTC_CNTL_GLITCH_DET_INT_ENA_S",""],["RTC_CNTL_GLITCH_DET_INT_ENA_V",""],["RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_S",""],["RTC_CNTL_GLITCH_DET_INT_ENA_W1TC_V",""],["RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_S",""],["RTC_CNTL_GLITCH_DET_INT_ENA_W1TS_V",""],["RTC_CNTL_GLITCH_DET_INT_RAW_S",""],["RTC_CNTL_GLITCH_DET_INT_RAW_V",""],["RTC_CNTL_GLITCH_DET_INT_ST_S",""],["RTC_CNTL_GLITCH_DET_INT_ST_V",""],["RTC_CNTL_GLITCH_RST_EN_S",""],["RTC_CNTL_GLITCH_RST_EN_V",""],["RTC_CNTL_GPIO_PIN0_FUN_SEL",""],["RTC_CNTL_GPIO_PIN0_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN0_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN0_HOLD_S",""],["RTC_CNTL_GPIO_PIN0_HOLD_V",""],["RTC_CNTL_GPIO_PIN0_INT_TYPE",""],["RTC_CNTL_GPIO_PIN0_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN0_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN0_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN0_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN0_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN1_FUN_SEL",""],["RTC_CNTL_GPIO_PIN1_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN1_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN1_HOLD_S",""],["RTC_CNTL_GPIO_PIN1_HOLD_V",""],["RTC_CNTL_GPIO_PIN1_INT_TYPE",""],["RTC_CNTL_GPIO_PIN1_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN1_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN1_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN1_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN1_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN2_FUN_SEL",""],["RTC_CNTL_GPIO_PIN2_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN2_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN2_HOLD_S",""],["RTC_CNTL_GPIO_PIN2_HOLD_V",""],["RTC_CNTL_GPIO_PIN2_INT_TYPE",""],["RTC_CNTL_GPIO_PIN2_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN2_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN2_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN2_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN2_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN3_FUN_SEL",""],["RTC_CNTL_GPIO_PIN3_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN3_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN3_HOLD_S",""],["RTC_CNTL_GPIO_PIN3_HOLD_V",""],["RTC_CNTL_GPIO_PIN3_INT_TYPE",""],["RTC_CNTL_GPIO_PIN3_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN3_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN3_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN3_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN3_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN4_FUN_SEL",""],["RTC_CNTL_GPIO_PIN4_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN4_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN4_HOLD_S",""],["RTC_CNTL_GPIO_PIN4_HOLD_V",""],["RTC_CNTL_GPIO_PIN4_INT_TYPE",""],["RTC_CNTL_GPIO_PIN4_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN4_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN4_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN4_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN4_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN5_FUN_SEL",""],["RTC_CNTL_GPIO_PIN5_FUN_SEL_S",""],["RTC_CNTL_GPIO_PIN5_FUN_SEL_V",""],["RTC_CNTL_GPIO_PIN5_HOLD_S",""],["RTC_CNTL_GPIO_PIN5_HOLD_V",""],["RTC_CNTL_GPIO_PIN5_INT_TYPE",""],["RTC_CNTL_GPIO_PIN5_INT_TYPE_S",""],["RTC_CNTL_GPIO_PIN5_INT_TYPE_V",""],["RTC_CNTL_GPIO_PIN5_MUX_SEL_S",""],["RTC_CNTL_GPIO_PIN5_MUX_SEL_V",""],["RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_S",""],["RTC_CNTL_GPIO_PIN5_WAKEUP_ENABLE_V",""],["RTC_CNTL_GPIO_PIN_CLK_GATE_S",""],["RTC_CNTL_GPIO_PIN_CLK_GATE_V",""],["RTC_CNTL_GPIO_WAKEUP_FILTER_S",""],["RTC_CNTL_GPIO_WAKEUP_FILTER_V",""],["RTC_CNTL_GPIO_WAKEUP_REG",""],["RTC_CNTL_GPIO_WAKEUP_STATUS",""],["RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_S",""],["RTC_CNTL_GPIO_WAKEUP_STATUS_CLR_V",""],["RTC_CNTL_GPIO_WAKEUP_STATUS_S",""],["RTC_CNTL_GPIO_WAKEUP_STATUS_V",""],["RTC_CNTL_I2C_RESET_POR_FORCE_PD_S",""],["RTC_CNTL_I2C_RESET_POR_FORCE_PD_V",""],["RTC_CNTL_I2C_RESET_POR_FORCE_PU_S",""],["RTC_CNTL_I2C_RESET_POR_FORCE_PU_V",""],["RTC_CNTL_INT_CLR_REG",""],["RTC_CNTL_INT_ENA_REG",""],["RTC_CNTL_INT_ENA_W1TC_REG",""],["RTC_CNTL_INT_ENA_W1TS_REG",""],["RTC_CNTL_INT_RAW_REG",""],["RTC_CNTL_INT_ST_REG",""],["RTC_CNTL_IN_LOW_POWER_STATE_S",""],["RTC_CNTL_IN_LOW_POWER_STATE_V",""],["RTC_CNTL_IN_WAKEUP_STATE_S",""],["RTC_CNTL_IN_WAKEUP_STATE_V",""],["RTC_CNTL_IO_MUX_RESET_DISABLE_S",""],["RTC_CNTL_IO_MUX_RESET_DISABLE_V",""],["RTC_CNTL_JTAG_RESET_FLAG_APPCPU_S",""],["RTC_CNTL_JTAG_RESET_FLAG_APPCPU_V",""],["RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_S",""],["RTC_CNTL_JTAG_RESET_FLAG_CLR_APPCPU_V",""],["RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_S",""],["RTC_CNTL_JTAG_RESET_FLAG_CLR_PROCPU_V",""],["RTC_CNTL_JTAG_RESET_FLAG_PROCPU_S",""],["RTC_CNTL_JTAG_RESET_FLAG_PROCPU_V",""],["RTC_CNTL_LIGHT_SLP_REJECT_EN_S",""],["RTC_CNTL_LIGHT_SLP_REJECT_EN_V",""],["RTC_CNTL_LOW_POWER_DIAG1",""],["RTC_CNTL_LOW_POWER_DIAG1_S",""],["RTC_CNTL_LOW_POWER_DIAG1_V",""],["RTC_CNTL_LOW_POWER_ST_REG",""],["RTC_CNTL_LSLP_MEM_FORCE_PD_S",""],["RTC_CNTL_LSLP_MEM_FORCE_PD_V",""],["RTC_CNTL_LSLP_MEM_FORCE_PU_S",""],["RTC_CNTL_LSLP_MEM_FORCE_PU_V",""],["RTC_CNTL_MAIN_STATE",""],["RTC_CNTL_MAIN_STATE_IN_IDLE_S",""],["RTC_CNTL_MAIN_STATE_IN_IDLE_V",""],["RTC_CNTL_MAIN_STATE_IN_SLP_S",""],["RTC_CNTL_MAIN_STATE_IN_SLP_V",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_8M_S",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_8M_V",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_S",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_PLL_V",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_S",""],["RTC_CNTL_MAIN_STATE_IN_WAIT_XTL_V",""],["RTC_CNTL_MAIN_STATE_PLL_ON_S",""],["RTC_CNTL_MAIN_STATE_PLL_ON_V",""],["RTC_CNTL_MAIN_STATE_S",""],["RTC_CNTL_MAIN_STATE_V",""],["RTC_CNTL_MAIN_STATE_WAIT_END_S",""],["RTC_CNTL_MAIN_STATE_WAIT_END_V",""],["RTC_CNTL_MAIN_STATE_XTAL_ISO_S",""],["RTC_CNTL_MAIN_STATE_XTAL_ISO_V",""],["RTC_CNTL_MAIN_TIMER_ALARM_EN_S",""],["RTC_CNTL_MAIN_TIMER_ALARM_EN_V",""],["RTC_CNTL_MAIN_TIMER_INT_CLR_S",""],["RTC_CNTL_MAIN_TIMER_INT_CLR_V",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_S",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_V",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_S",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_W1TC_V",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_S",""],["RTC_CNTL_MAIN_TIMER_INT_ENA_W1TS_V",""],["RTC_CNTL_MAIN_TIMER_INT_RAW_S",""],["RTC_CNTL_MAIN_TIMER_INT_RAW_V",""],["RTC_CNTL_MAIN_TIMER_INT_ST_S",""],["RTC_CNTL_MAIN_TIMER_INT_ST_V",""],["RTC_CNTL_MIN_SLP_VAL",""],["RTC_CNTL_MIN_SLP_VAL_MIN",""],["RTC_CNTL_MIN_SLP_VAL_S",""],["RTC_CNTL_MIN_SLP_VAL_V",""],["RTC_CNTL_MIN_TIME_CK8M_OFF",""],["RTC_CNTL_MIN_TIME_CK8M_OFF_S",""],["RTC_CNTL_MIN_TIME_CK8M_OFF_V",""],["RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_S",""],["RTC_CNTL_OCD_HALT_ON_RESET_APPCPU_V",""],["RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_S",""],["RTC_CNTL_OCD_HALT_ON_RESET_PROCPU_V",""],["RTC_CNTL_OPTION1_REG",""],["RTC_CNTL_OPTIONS0_REG",""],["RTC_CNTL_OTHER_BLOCKS_POWERUP_CYCLES",""],["RTC_CNTL_OTHER_BLOCKS_WAIT_CYCLES",""],["RTC_CNTL_PAD_FORCE_HOLD_S",""],["RTC_CNTL_PAD_FORCE_HOLD_V",""],["RTC_CNTL_PAD_HOLD_REG",""],["RTC_CNTL_PD_CUR_DEEP_SLP_S",""],["RTC_CNTL_PD_CUR_DEEP_SLP_V",""],["RTC_CNTL_PD_CUR_MONITOR_DEFAULT",""],["RTC_CNTL_PD_CUR_MONITOR_S",""],["RTC_CNTL_PD_CUR_MONITOR_V",""],["RTC_CNTL_PD_CUR_SLEEP_DEFAULT",""],["RTC_CNTL_PD_CUR_SLEEP_ON",""],["RTC_CNTL_PERI_ISO_S",""],["RTC_CNTL_PERI_ISO_V",""],["RTC_CNTL_PG_CTRL_REG",""],["RTC_CNTL_PLLA_FORCE_PD_S",""],["RTC_CNTL_PLLA_FORCE_PD_V",""],["RTC_CNTL_PLLA_FORCE_PU_S",""],["RTC_CNTL_PLLA_FORCE_PU_V",""],["RTC_CNTL_PLL_BUF_WAIT",""],["RTC_CNTL_PLL_BUF_WAIT_DEFAULT",""],["RTC_CNTL_PLL_BUF_WAIT_S",""],["RTC_CNTL_PLL_BUF_WAIT_SLP_CYCLES",""],["RTC_CNTL_PLL_BUF_WAIT_V",""],["RTC_CNTL_PLL_FORCE_ISO_S",""],["RTC_CNTL_PLL_FORCE_ISO_V",""],["RTC_CNTL_PLL_FORCE_NOISO_S",""],["RTC_CNTL_PLL_FORCE_NOISO_V",""],["RTC_CNTL_PLL_I2C_PU_S",""],["RTC_CNTL_PLL_I2C_PU_V",""],["RTC_CNTL_POWER_GLITCH_DSENSE",""],["RTC_CNTL_POWER_GLITCH_DSENSE_S",""],["RTC_CNTL_POWER_GLITCH_DSENSE_V",""],["RTC_CNTL_POWER_GLITCH_EFUSE_SEL_S",""],["RTC_CNTL_POWER_GLITCH_EFUSE_SEL_V",""],["RTC_CNTL_POWER_GLITCH_EN_S",""],["RTC_CNTL_POWER_GLITCH_EN_V",""],["RTC_CNTL_POWER_GLITCH_FORCE_PD_S",""],["RTC_CNTL_POWER_GLITCH_FORCE_PD_V",""],["RTC_CNTL_POWER_GLITCH_FORCE_PU_S",""],["RTC_CNTL_POWER_GLITCH_FORCE_PU_V",""],["RTC_CNTL_PVTMON_PU_S",""],["RTC_CNTL_PVTMON_PU_V",""],["RTC_CNTL_PWC_REG",""],["RTC_CNTL_RDY_FOR_WAKEUP_S",""],["RTC_CNTL_RDY_FOR_WAKEUP_V",""],["RTC_CNTL_REG",""],["RTC_CNTL_REG1P8_READY_S",""],["RTC_CNTL_REG1P8_READY_V",""],["RTC_CNTL_REGULATOR_FORCE_PD_S",""],["RTC_CNTL_REGULATOR_FORCE_PD_V",""],["RTC_CNTL_REGULATOR_FORCE_PU_S",""],["RTC_CNTL_REGULATOR_FORCE_PU_V",""],["RTC_CNTL_REJECT_CAUSE",""],["RTC_CNTL_REJECT_CAUSE_S",""],["RTC_CNTL_REJECT_CAUSE_V",""],["RTC_CNTL_RESET_CAUSE_APPCPU",""],["RTC_CNTL_RESET_CAUSE_APPCPU_S",""],["RTC_CNTL_RESET_CAUSE_APPCPU_V",""],["RTC_CNTL_RESET_CAUSE_PROCPU",""],["RTC_CNTL_RESET_CAUSE_PROCPU_S",""],["RTC_CNTL_RESET_CAUSE_PROCPU_V",""],["RTC_CNTL_RESET_STATE_REG",""],["RTC_CNTL_RETENTION_CLKOFF_WAIT",""],["RTC_CNTL_RETENTION_CLKOFF_WAIT_S",""],["RTC_CNTL_RETENTION_CLKOFF_WAIT_V",""],["RTC_CNTL_RETENTION_CLK_SEL_S",""],["RTC_CNTL_RETENTION_CLK_SEL_V",""],["RTC_CNTL_RETENTION_CTRL_REG",""],["RTC_CNTL_RETENTION_DONE_WAIT",""],["RTC_CNTL_RETENTION_DONE_WAIT_S",""],["RTC_CNTL_RETENTION_DONE_WAIT_V",""],["RTC_CNTL_RETENTION_EN_S",""],["RTC_CNTL_RETENTION_EN_V",""],["RTC_CNTL_RETENTION_WAIT",""],["RTC_CNTL_RETENTION_WAIT_S",""],["RTC_CNTL_RETENTION_WAIT_V",""],["RTC_CNTL_RFRX_PBUS_PU_S",""],["RTC_CNTL_RFRX_PBUS_PU_V",""],["RTC_CNTL_SAR2_PWDET_CCT",""],["RTC_CNTL_SAR2_PWDET_CCT_S",""],["RTC_CNTL_SAR2_PWDET_CCT_V",""],["RTC_CNTL_SAR_DEBUG_SEL",""],["RTC_CNTL_SAR_DEBUG_SEL_S",""],["RTC_CNTL_SAR_DEBUG_SEL_V",""],["RTC_CNTL_SAR_I2C_PU_S",""],["RTC_CNTL_SAR_I2C_PU_V",""],["RTC_CNTL_SCK_DCAP",""],["RTC_CNTL_SCK_DCAP_DEFAULT",""],["RTC_CNTL_SCK_DCAP_S",""],["RTC_CNTL_SCK_DCAP_V",""],["RTC_CNTL_SCRATCH0",""],["RTC_CNTL_SCRATCH0_S",""],["RTC_CNTL_SCRATCH0_V",""],["RTC_CNTL_SCRATCH1",""],["RTC_CNTL_SCRATCH1_S",""],["RTC_CNTL_SCRATCH1_V",""],["RTC_CNTL_SCRATCH2",""],["RTC_CNTL_SCRATCH2_S",""],["RTC_CNTL_SCRATCH2_V",""],["RTC_CNTL_SCRATCH3",""],["RTC_CNTL_SCRATCH3_S",""],["RTC_CNTL_SCRATCH3_V",""],["RTC_CNTL_SCRATCH4",""],["RTC_CNTL_SCRATCH4_S",""],["RTC_CNTL_SCRATCH4_V",""],["RTC_CNTL_SCRATCH5",""],["RTC_CNTL_SCRATCH5_S",""],["RTC_CNTL_SCRATCH5_V",""],["RTC_CNTL_SCRATCH6",""],["RTC_CNTL_SCRATCH6_S",""],["RTC_CNTL_SCRATCH6_V",""],["RTC_CNTL_SCRATCH7",""],["RTC_CNTL_SCRATCH7_S",""],["RTC_CNTL_SCRATCH7_V",""],["RTC_CNTL_SDIO_ACTIVE_IND_S",""],["RTC_CNTL_SDIO_ACTIVE_IND_V",""],["RTC_CNTL_SDIO_CONF_REG",""],["RTC_CNTL_SDIO_DCAP",""],["RTC_CNTL_SDIO_DCAP_S",""],["RTC_CNTL_SDIO_DCAP_V",""],["RTC_CNTL_SDIO_DCURLIM",""],["RTC_CNTL_SDIO_DCURLIM_S",""],["RTC_CNTL_SDIO_DCURLIM_V",""],["RTC_CNTL_SDIO_DTHDRV",""],["RTC_CNTL_SDIO_DTHDRV_S",""],["RTC_CNTL_SDIO_DTHDRV_V",""],["RTC_CNTL_SDIO_ENCURLIM_S",""],["RTC_CNTL_SDIO_ENCURLIM_V",""],["RTC_CNTL_SDIO_EN_INITI_S",""],["RTC_CNTL_SDIO_EN_INITI_V",""],["RTC_CNTL_SDIO_FORCE_S",""],["RTC_CNTL_SDIO_FORCE_V",""],["RTC_CNTL_SDIO_INITI",""],["RTC_CNTL_SDIO_INITI_S",""],["RTC_CNTL_SDIO_INITI_V",""],["RTC_CNTL_SDIO_MODECURLIM_S",""],["RTC_CNTL_SDIO_MODECURLIM_V",""],["RTC_CNTL_SDIO_PD_EN_S",""],["RTC_CNTL_SDIO_PD_EN_V",""],["RTC_CNTL_SDIO_TIEH_S",""],["RTC_CNTL_SDIO_TIEH_V",""],["RTC_CNTL_SDIO_TIMER_TARGET",""],["RTC_CNTL_SDIO_TIMER_TARGET_S",""],["RTC_CNTL_SDIO_TIMER_TARGET_V",""],["RTC_CNTL_SENSOR_CTRL_REG",""],["RTC_CNTL_SLEEP_EN_S",""],["RTC_CNTL_SLEEP_EN_V",""],["RTC_CNTL_SLEEP_REJECT_ENA",""],["RTC_CNTL_SLEEP_REJECT_ENA_S",""],["RTC_CNTL_SLEEP_REJECT_ENA_V",""],["RTC_CNTL_SLOW_CLK_CONF_REG",""],["RTC_CNTL_SLOW_CLK_NEXT_EDGE_S",""],["RTC_CNTL_SLOW_CLK_NEXT_EDGE_V",""],["RTC_CNTL_SLP_REJECT_CAUSE_CLR_S",""],["RTC_CNTL_SLP_REJECT_CAUSE_CLR_V",""],["RTC_CNTL_SLP_REJECT_CAUSE_REG",""],["RTC_CNTL_SLP_REJECT_CONF_REG",""],["RTC_CNTL_SLP_REJECT_INT_CLR_S",""],["RTC_CNTL_SLP_REJECT_INT_CLR_V",""],["RTC_CNTL_SLP_REJECT_INT_ENA_S",""],["RTC_CNTL_SLP_REJECT_INT_ENA_V",""],["RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_S",""],["RTC_CNTL_SLP_REJECT_INT_ENA_W1TC_V",""],["RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_S",""],["RTC_CNTL_SLP_REJECT_INT_ENA_W1TS_V",""],["RTC_CNTL_SLP_REJECT_INT_RAW_S",""],["RTC_CNTL_SLP_REJECT_INT_RAW_V",""],["RTC_CNTL_SLP_REJECT_INT_ST_S",""],["RTC_CNTL_SLP_REJECT_INT_ST_V",""],["RTC_CNTL_SLP_REJECT_S",""],["RTC_CNTL_SLP_REJECT_V",""],["RTC_CNTL_SLP_TIMER0_REG",""],["RTC_CNTL_SLP_TIMER1_REG",""],["RTC_CNTL_SLP_VAL_HI",""],["RTC_CNTL_SLP_VAL_HI_S",""],["RTC_CNTL_SLP_VAL_HI_V",""],["RTC_CNTL_SLP_VAL_LO",""],["RTC_CNTL_SLP_VAL_LO_S",""],["RTC_CNTL_SLP_VAL_LO_V",""],["RTC_CNTL_SLP_WAKEUP_CAUSE_REG",""],["RTC_CNTL_SLP_WAKEUP_INT_CLR_S",""],["RTC_CNTL_SLP_WAKEUP_INT_CLR_V",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_S",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_V",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_S",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TC_V",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_S",""],["RTC_CNTL_SLP_WAKEUP_INT_ENA_W1TS_V",""],["RTC_CNTL_SLP_WAKEUP_INT_RAW_S",""],["RTC_CNTL_SLP_WAKEUP_INT_RAW_V",""],["RTC_CNTL_SLP_WAKEUP_INT_ST_S",""],["RTC_CNTL_SLP_WAKEUP_INT_ST_V",""],["RTC_CNTL_SLP_WAKEUP_S",""],["RTC_CNTL_SLP_WAKEUP_V",""],["RTC_CNTL_STATE0_REG",""],["RTC_CNTL_STAT_VECTOR_SEL_APPCPU_S",""],["RTC_CNTL_STAT_VECTOR_SEL_APPCPU_V",""],["RTC_CNTL_STAT_VECTOR_SEL_PROCPU_S",""],["RTC_CNTL_STAT_VECTOR_SEL_PROCPU_V",""],["RTC_CNTL_STORE0_REG",""],["RTC_CNTL_STORE1_REG",""],["RTC_CNTL_STORE2_REG",""],["RTC_CNTL_STORE3_REG",""],["RTC_CNTL_STORE4_REG",""],["RTC_CNTL_STORE5_REG",""],["RTC_CNTL_STORE6_REG",""],["RTC_CNTL_STORE7_REG",""],["RTC_CNTL_SWD_AUTO_FEED_EN_S",""],["RTC_CNTL_SWD_AUTO_FEED_EN_V",""],["RTC_CNTL_SWD_BYPASS_RST_S",""],["RTC_CNTL_SWD_BYPASS_RST_V",""],["RTC_CNTL_SWD_CONF_REG",""],["RTC_CNTL_SWD_DISABLE_S",""],["RTC_CNTL_SWD_DISABLE_V",""],["RTC_CNTL_SWD_FEED_INT_S",""],["RTC_CNTL_SWD_FEED_INT_V",""],["RTC_CNTL_SWD_FEED_S",""],["RTC_CNTL_SWD_FEED_V",""],["RTC_CNTL_SWD_INT_CLR_S",""],["RTC_CNTL_SWD_INT_CLR_V",""],["RTC_CNTL_SWD_INT_ENA_S",""],["RTC_CNTL_SWD_INT_ENA_V",""],["RTC_CNTL_SWD_INT_ENA_W1TC_S",""],["RTC_CNTL_SWD_INT_ENA_W1TC_V",""],["RTC_CNTL_SWD_INT_ENA_W1TS_S",""],["RTC_CNTL_SWD_INT_ENA_W1TS_V",""],["RTC_CNTL_SWD_INT_RAW_S",""],["RTC_CNTL_SWD_INT_RAW_V",""],["RTC_CNTL_SWD_INT_ST_S",""],["RTC_CNTL_SWD_INT_ST_V",""],["RTC_CNTL_SWD_RESET_FLAG_S",""],["RTC_CNTL_SWD_RESET_FLAG_V",""],["RTC_CNTL_SWD_RST_FLAG_CLR_S",""],["RTC_CNTL_SWD_RST_FLAG_CLR_V",""],["RTC_CNTL_SWD_SIGNAL_WIDTH",""],["RTC_CNTL_SWD_SIGNAL_WIDTH_S",""],["RTC_CNTL_SWD_SIGNAL_WIDTH_V",""],["RTC_CNTL_SWD_WKEY",""],["RTC_CNTL_SWD_WKEY_S",""],["RTC_CNTL_SWD_WKEY_V",""],["RTC_CNTL_SWD_WKEY_VALUE",""],["RTC_CNTL_SWD_WPROTECT_REG",""],["RTC_CNTL_SW_APPCPU_RST_S",""],["RTC_CNTL_SW_APPCPU_RST_V",""],["RTC_CNTL_SW_CPU_INT_S",""],["RTC_CNTL_SW_CPU_INT_V",""],["RTC_CNTL_SW_CPU_STALL_REG",""],["RTC_CNTL_SW_PROCPU_RST_S",""],["RTC_CNTL_SW_PROCPU_RST_V",""],["RTC_CNTL_SW_STALL_APPCPU_C0",""],["RTC_CNTL_SW_STALL_APPCPU_C0_S",""],["RTC_CNTL_SW_STALL_APPCPU_C0_V",""],["RTC_CNTL_SW_STALL_APPCPU_C1",""],["RTC_CNTL_SW_STALL_APPCPU_C1_S",""],["RTC_CNTL_SW_STALL_APPCPU_C1_V",""],["RTC_CNTL_SW_STALL_PROCPU_C0",""],["RTC_CNTL_SW_STALL_PROCPU_C0_S",""],["RTC_CNTL_SW_STALL_PROCPU_C0_V",""],["RTC_CNTL_SW_STALL_PROCPU_C1",""],["RTC_CNTL_SW_STALL_PROCPU_C1_S",""],["RTC_CNTL_SW_STALL_PROCPU_C1_V",""],["RTC_CNTL_SW_SYS_RST_S",""],["RTC_CNTL_SW_SYS_RST_V",""],["RTC_CNTL_TIMER1_REG",""],["RTC_CNTL_TIMER2_REG",""],["RTC_CNTL_TIMER3_REG",""],["RTC_CNTL_TIMER4_REG",""],["RTC_CNTL_TIMER5_REG",""],["RTC_CNTL_TIMER6_REG",""],["RTC_CNTL_TIMER_SYS_RST_S",""],["RTC_CNTL_TIMER_SYS_RST_V",""],["RTC_CNTL_TIMER_SYS_STALL_S",""],["RTC_CNTL_TIMER_SYS_STALL_V",""],["RTC_CNTL_TIMER_VALUE0_HIGH",""],["RTC_CNTL_TIMER_VALUE0_HIGH_S",""],["RTC_CNTL_TIMER_VALUE0_HIGH_V",""],["RTC_CNTL_TIMER_VALUE0_LOW",""],["RTC_CNTL_TIMER_VALUE0_LOW_S",""],["RTC_CNTL_TIMER_VALUE0_LOW_V",""],["RTC_CNTL_TIMER_VALUE1_HIGH",""],["RTC_CNTL_TIMER_VALUE1_HIGH_S",""],["RTC_CNTL_TIMER_VALUE1_HIGH_V",""],["RTC_CNTL_TIMER_VALUE1_LOW",""],["RTC_CNTL_TIMER_VALUE1_LOW_S",""],["RTC_CNTL_TIMER_VALUE1_LOW_V",""],["RTC_CNTL_TIMER_XTL_OFF_S",""],["RTC_CNTL_TIMER_XTL_OFF_V",""],["RTC_CNTL_TIME_HIGH0_REG",""],["RTC_CNTL_TIME_HIGH1_REG",""],["RTC_CNTL_TIME_LOW0_REG",""],["RTC_CNTL_TIME_LOW1_REG",""],["RTC_CNTL_TIME_UPDATE_REG",""],["RTC_CNTL_TIME_UPDATE_S",""],["RTC_CNTL_TIME_UPDATE_V",""],["RTC_CNTL_TOUCH_STATE_DONE_S",""],["RTC_CNTL_TOUCH_STATE_DONE_V",""],["RTC_CNTL_TOUCH_STATE_SLP_S",""],["RTC_CNTL_TOUCH_STATE_SLP_V",""],["RTC_CNTL_TOUCH_STATE_START_S",""],["RTC_CNTL_TOUCH_STATE_START_V",""],["RTC_CNTL_TOUCH_STATE_SWITCH_S",""],["RTC_CNTL_TOUCH_STATE_SWITCH_V",""],["RTC_CNTL_TXRF_I2C_PU_S",""],["RTC_CNTL_TXRF_I2C_PU_V",""],["RTC_CNTL_ULP_CP_TIMER_1_REG",""],["RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE",""],["RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_S",""],["RTC_CNTL_ULP_CP_TIMER_SLP_CYCLE_V",""],["RTC_CNTL_USB_CONF_REG",""],["RTC_CNTL_VDD_SPI_PWR_DRV",""],["RTC_CNTL_VDD_SPI_PWR_DRV_S",""],["RTC_CNTL_VDD_SPI_PWR_DRV_V",""],["RTC_CNTL_VDD_SPI_PWR_FORCE_S",""],["RTC_CNTL_VDD_SPI_PWR_FORCE_V",""],["RTC_CNTL_WAKEUP_CAUSE",""],["RTC_CNTL_WAKEUP_CAUSE_S",""],["RTC_CNTL_WAKEUP_CAUSE_V",""],["RTC_CNTL_WAKEUP_DELAY_CYCLES",""],["RTC_CNTL_WAKEUP_ENA",""],["RTC_CNTL_WAKEUP_ENA_S",""],["RTC_CNTL_WAKEUP_ENA_V",""],["RTC_CNTL_WAKEUP_STATE_REG",""],["RTC_CNTL_WDTCONFIG0_REG",""],["RTC_CNTL_WDTCONFIG1_REG",""],["RTC_CNTL_WDTCONFIG2_REG",""],["RTC_CNTL_WDTCONFIG3_REG",""],["RTC_CNTL_WDTCONFIG4_REG",""],["RTC_CNTL_WDTFEED_REG",""],["RTC_CNTL_WDTWPROTECT_REG",""],["RTC_CNTL_WDT_APPCPU_RESET_EN_S",""],["RTC_CNTL_WDT_APPCPU_RESET_EN_V",""],["RTC_CNTL_WDT_CHIP_RESET_EN_S",""],["RTC_CNTL_WDT_CHIP_RESET_EN_V",""],["RTC_CNTL_WDT_CHIP_RESET_WIDTH",""],["RTC_CNTL_WDT_CHIP_RESET_WIDTH_S",""],["RTC_CNTL_WDT_CHIP_RESET_WIDTH_V",""],["RTC_CNTL_WDT_CPU_RESET_LENGTH",""],["RTC_CNTL_WDT_CPU_RESET_LENGTH_S",""],["RTC_CNTL_WDT_CPU_RESET_LENGTH_V",""],["RTC_CNTL_WDT_EN_S",""],["RTC_CNTL_WDT_EN_V",""],["RTC_CNTL_WDT_FEED_S",""],["RTC_CNTL_WDT_FEED_V",""],["RTC_CNTL_WDT_FLASHBOOT_MOD_EN_S",""],["RTC_CNTL_WDT_FLASHBOOT_MOD_EN_V",""],["RTC_CNTL_WDT_INT_CLR_S",""],["RTC_CNTL_WDT_INT_CLR_V",""],["RTC_CNTL_WDT_INT_ENA_S",""],["RTC_CNTL_WDT_INT_ENA_V",""],["RTC_CNTL_WDT_INT_ENA_W1TC_S",""],["RTC_CNTL_WDT_INT_ENA_W1TC_V",""],["RTC_CNTL_WDT_INT_ENA_W1TS_S",""],["RTC_CNTL_WDT_INT_ENA_W1TS_V",""],["RTC_CNTL_WDT_INT_RAW_S",""],["RTC_CNTL_WDT_INT_RAW_V",""],["RTC_CNTL_WDT_INT_ST_S",""],["RTC_CNTL_WDT_INT_ST_V",""],["RTC_CNTL_WDT_PAUSE_IN_SLP_S",""],["RTC_CNTL_WDT_PAUSE_IN_SLP_V",""],["RTC_CNTL_WDT_PROCPU_RESET_EN_S",""],["RTC_CNTL_WDT_PROCPU_RESET_EN_V",""],["RTC_CNTL_WDT_STATE",""],["RTC_CNTL_WDT_STATE_S",""],["RTC_CNTL_WDT_STATE_V",""],["RTC_CNTL_WDT_STG0",""],["RTC_CNTL_WDT_STG0_HOLD",""],["RTC_CNTL_WDT_STG0_HOLD_S",""],["RTC_CNTL_WDT_STG0_HOLD_V",""],["RTC_CNTL_WDT_STG0_S",""],["RTC_CNTL_WDT_STG0_V",""],["RTC_CNTL_WDT_STG1",""],["RTC_CNTL_WDT_STG1_HOLD",""],["RTC_CNTL_WDT_STG1_HOLD_S",""],["RTC_CNTL_WDT_STG1_HOLD_V",""],["RTC_CNTL_WDT_STG1_S",""],["RTC_CNTL_WDT_STG1_V",""],["RTC_CNTL_WDT_STG2",""],["RTC_CNTL_WDT_STG2_HOLD",""],["RTC_CNTL_WDT_STG2_HOLD_S",""],["RTC_CNTL_WDT_STG2_HOLD_V",""],["RTC_CNTL_WDT_STG2_S",""],["RTC_CNTL_WDT_STG2_V",""],["RTC_CNTL_WDT_STG3",""],["RTC_CNTL_WDT_STG3_HOLD",""],["RTC_CNTL_WDT_STG3_HOLD_S",""],["RTC_CNTL_WDT_STG3_HOLD_V",""],["RTC_CNTL_WDT_STG3_S",""],["RTC_CNTL_WDT_STG3_V",""],["RTC_CNTL_WDT_SYS_RESET_LENGTH",""],["RTC_CNTL_WDT_SYS_RESET_LENGTH_S",""],["RTC_CNTL_WDT_SYS_RESET_LENGTH_V",""],["RTC_CNTL_WDT_WKEY",""],["RTC_CNTL_WDT_WKEY_S",""],["RTC_CNTL_WDT_WKEY_V",""],["RTC_CNTL_WDT_WKEY_VALUE",""],["RTC_CNTL_WIFI_FORCE_ISO_S",""],["RTC_CNTL_WIFI_FORCE_ISO_V",""],["RTC_CNTL_WIFI_FORCE_NOISO_S",""],["RTC_CNTL_WIFI_FORCE_NOISO_V",""],["RTC_CNTL_WIFI_FORCE_PD_S",""],["RTC_CNTL_WIFI_FORCE_PD_V",""],["RTC_CNTL_WIFI_FORCE_PU_S",""],["RTC_CNTL_WIFI_FORCE_PU_V",""],["RTC_CNTL_WIFI_ISO_S",""],["RTC_CNTL_WIFI_ISO_V",""],["RTC_CNTL_WIFI_PD_EN_S",""],["RTC_CNTL_WIFI_PD_EN_V",""],["RTC_CNTL_WIFI_POWERUP_TIMER",""],["RTC_CNTL_WIFI_POWERUP_TIMER_S",""],["RTC_CNTL_WIFI_POWERUP_TIMER_V",""],["RTC_CNTL_WIFI_WAIT_TIMER",""],["RTC_CNTL_WIFI_WAIT_TIMER_S",""],["RTC_CNTL_WIFI_WAIT_TIMER_V",""],["RTC_CNTL_XPD_DIG_DCDC_S",""],["RTC_CNTL_XPD_DIG_DCDC_V",""],["RTC_CNTL_XPD_DIG_S",""],["RTC_CNTL_XPD_DIG_V",""],["RTC_CNTL_XPD_ROM0_S",""],["RTC_CNTL_XPD_ROM0_V",""],["RTC_CNTL_XPD_RTC_PERI_S",""],["RTC_CNTL_XPD_RTC_PERI_V",""],["RTC_CNTL_XPD_SDIO_REG_S",""],["RTC_CNTL_XPD_SDIO_REG_V",""],["RTC_CNTL_XPD_WIFI_S",""],["RTC_CNTL_XPD_WIFI_V",""],["RTC_CNTL_XPD_XTAL_32K_S",""],["RTC_CNTL_XPD_XTAL_32K_V",""],["RTC_CNTL_XTAL32K_AUTO_BACKUP_S",""],["RTC_CNTL_XTAL32K_AUTO_BACKUP_V",""],["RTC_CNTL_XTAL32K_AUTO_RESTART_S",""],["RTC_CNTL_XTAL32K_AUTO_RESTART_V",""],["RTC_CNTL_XTAL32K_AUTO_RETURN_S",""],["RTC_CNTL_XTAL32K_AUTO_RETURN_V",""],["RTC_CNTL_XTAL32K_CLK_FACTOR",""],["RTC_CNTL_XTAL32K_CLK_FACTOR_REG",""],["RTC_CNTL_XTAL32K_CLK_FACTOR_S",""],["RTC_CNTL_XTAL32K_CLK_FACTOR_V",""],["RTC_CNTL_XTAL32K_CONF_REG",""],["RTC_CNTL_XTAL32K_DEAD_INT_CLR_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_CLR_V",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_V",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TC_V",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_ENA_W1TS_V",""],["RTC_CNTL_XTAL32K_DEAD_INT_RAW_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_RAW_V",""],["RTC_CNTL_XTAL32K_DEAD_INT_ST_S",""],["RTC_CNTL_XTAL32K_DEAD_INT_ST_V",""],["RTC_CNTL_XTAL32K_EXT_CLK_FO_S",""],["RTC_CNTL_XTAL32K_EXT_CLK_FO_V",""],["RTC_CNTL_XTAL32K_GPIO_SEL_S",""],["RTC_CNTL_XTAL32K_GPIO_SEL_V",""],["RTC_CNTL_XTAL32K_RESTART_WAIT",""],["RTC_CNTL_XTAL32K_RESTART_WAIT_S",""],["RTC_CNTL_XTAL32K_RESTART_WAIT_V",""],["RTC_CNTL_XTAL32K_RETURN_WAIT",""],["RTC_CNTL_XTAL32K_RETURN_WAIT_S",""],["RTC_CNTL_XTAL32K_RETURN_WAIT_V",""],["RTC_CNTL_XTAL32K_STABLE_THRES",""],["RTC_CNTL_XTAL32K_STABLE_THRES_S",""],["RTC_CNTL_XTAL32K_STABLE_THRES_V",""],["RTC_CNTL_XTAL32K_WDT_CLK_FO_S",""],["RTC_CNTL_XTAL32K_WDT_CLK_FO_V",""],["RTC_CNTL_XTAL32K_WDT_EN_S",""],["RTC_CNTL_XTAL32K_WDT_EN_V",""],["RTC_CNTL_XTAL32K_WDT_RESET_S",""],["RTC_CNTL_XTAL32K_WDT_RESET_V",""],["RTC_CNTL_XTAL32K_WDT_TIMEOUT",""],["RTC_CNTL_XTAL32K_WDT_TIMEOUT_S",""],["RTC_CNTL_XTAL32K_WDT_TIMEOUT_V",""],["RTC_CNTL_XTAL32K_XPD_FORCE_S",""],["RTC_CNTL_XTAL32K_XPD_FORCE_V",""],["RTC_CNTL_XTAL_FORCE_NOGATING_S",""],["RTC_CNTL_XTAL_FORCE_NOGATING_V",""],["RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_S",""],["RTC_CNTL_XTAL_GLOBAL_FORCE_GATING_V",""],["RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_S",""],["RTC_CNTL_XTAL_GLOBAL_FORCE_NOGATING_V",""],["RTC_CNTL_XTL_BUF_WAIT",""],["RTC_CNTL_XTL_BUF_WAIT_DEFAULT",""],["RTC_CNTL_XTL_BUF_WAIT_S",""],["RTC_CNTL_XTL_BUF_WAIT_SLP_US",""],["RTC_CNTL_XTL_BUF_WAIT_V",""],["RTC_CNTL_XTL_EN_WAIT",""],["RTC_CNTL_XTL_EN_WAIT_S",""],["RTC_CNTL_XTL_EN_WAIT_V",""],["RTC_CNTL_XTL_EXT_CTR_EN_S",""],["RTC_CNTL_XTL_EXT_CTR_EN_V",""],["RTC_CNTL_XTL_EXT_CTR_LV_S",""],["RTC_CNTL_XTL_EXT_CTR_LV_V",""],["RTC_CNTL_XTL_EXT_CTR_SEL",""],["RTC_CNTL_XTL_EXT_CTR_SEL_S",""],["RTC_CNTL_XTL_EXT_CTR_SEL_V",""],["RTC_CNTL_XTL_FORCE_ISO_S",""],["RTC_CNTL_XTL_FORCE_ISO_V",""],["RTC_CNTL_XTL_FORCE_NOISO_S",""],["RTC_CNTL_XTL_FORCE_NOISO_V",""],["RTC_CNTL_XTL_FORCE_PD_S",""],["RTC_CNTL_XTL_FORCE_PD_V",""],["RTC_CNTL_XTL_FORCE_PU_S",""],["RTC_CNTL_XTL_FORCE_PU_V",""],["RTC_FAST_CLK_FREQ_APPROX",""],["RTC_SLOW_CLK_FREQ_32K",""],["RTC_SLOW_CLK_FREQ_90K",""],["RTC_VDDSDIO_TIEH_1_8V",""],["RTC_VDDSDIO_TIEH_3_3V",""],["RTC_WDT_RESET_LENGTH_100_NS",""],["RTC_WDT_RESET_LENGTH_1600_NS",""],["RTC_WDT_RESET_LENGTH_200_NS",""],["RTC_WDT_RESET_LENGTH_300_NS",""],["RTC_WDT_RESET_LENGTH_3200_NS",""],["RTC_WDT_RESET_LENGTH_400_NS",""],["RTC_WDT_RESET_LENGTH_500_NS",""],["RTC_WDT_RESET_LENGTH_800_NS",""],["RTC_WDT_STG_SEL_INT",""],["RTC_WDT_STG_SEL_OFF",""],["RTC_WDT_STG_SEL_RESET_CPU",""],["RTC_WDT_STG_SEL_RESET_RTC",""],["RTC_WDT_STG_SEL_RESET_SYSTEM",""],["RVHAL_EXCM_LEVEL",""],["RW_RX_ON_IDX",""],["RW_TX_ON_IDX",""],["RW_WAKEUP_REQ_IDX",""],["RX_STATUS_IDX",""],["RX_WINDOW_IDX",""],["R_OK",""],["RingbufferType_t_RINGBUF_TYPE_ALLOWSPLIT","Allow-split buffers will split an item into two parts if necessary in order to store it. Each item requires an 8 byte overhead for a header, splitting incurs an extra header. Each item will always internally occupy a 32-bit aligned size of space."],["RingbufferType_t_RINGBUF_TYPE_BYTEBUF","Byte buffers store data as a sequence of bytes and do not maintain separate items, therefore byte buffers have no overhead. All data is stored as a sequence of byte and any number of bytes can be sent or retrieved each time."],["RingbufferType_t_RINGBUF_TYPE_MAX","Byte buffers store data as a sequence of bytes and do not maintain separate items, therefore byte buffers have no overhead. All data is stored as a sequence of byte and any number of bytes can be sent or retrieved each time."],["RingbufferType_t_RINGBUF_TYPE_NOSPLIT","No-split buffers will only store an item in contiguous memory and will never split an item. Each item requires an 8 byte overhead for a header and will always internally occupy a 32-bit aligned size of space."],["S16_F",""],["S32_F",""],["SATP32_ASID",""],["SATP32_MODE",""],["SATP32_PPN",""],["SATP64_ASID",""],["SATP64_MODE",""],["SATP64_PPN",""],["SATP_MODE",""],["SATP_MODE_OFF",""],["SATP_MODE_SV32",""],["SATP_MODE_SV39",""],["SATP_MODE_SV48",""],["SATP_MODE_SV57",""],["SATP_MODE_SV64",""],["SA_NOCLDSTOP",""],["SBT_MAX",""],["SCF_CMD_AC",""],["SCF_CMD_ADTC",""],["SCF_CMD_BC",""],["SCF_CMD_BCR",""],["SCF_CMD_READ",""],["SCF_ITSDONE",""],["SCF_RSP_136",""],["SCF_RSP_BSY",""],["SCF_RSP_CRC",""],["SCF_RSP_IDX",""],["SCF_RSP_PRESENT",""],["SCF_RSP_R0",""],["SCF_RSP_R1",""],["SCF_RSP_R1B",""],["SCF_RSP_R2",""],["SCF_RSP_R3",""],["SCF_RSP_R4",""],["SCF_RSP_R5",""],["SCF_RSP_R5B",""],["SCF_RSP_R6",""],["SCF_RSP_R7",""],["SCF_WAIT_BUSY",""],["SCHED_FIFO",""],["SCHED_OTHER",""],["SCHED_RR",""],["SCR_SD_BUS_WIDTHS_1BIT",""],["SCR_SD_BUS_WIDTHS_4BIT",""],["SCR_SD_SECURITY_1_0",""],["SCR_SD_SECURITY_1_0_2",""],["SCR_SD_SECURITY_NONE",""],["SCR_SD_SPEC_VER_1_0",""],["SCR_SD_SPEC_VER_1_10",""],["SCR_SD_SPEC_VER_2",""],["SCR_STRUCTURE_VER_1_0",""],["SDIO_R1_FUNC_NUM_ERR",""],["SDMMC_FREQ_26M",""],["SDMMC_FREQ_52M",""],["SDMMC_FREQ_DEFAULT",""],["SDMMC_FREQ_HIGHSPEED",""],["SDMMC_FREQ_PROBING",""],["SDMMC_TIMING_HIGHSPEED",""],["SDMMC_TIMING_LEGACY",""],["SDMMC_TIMING_MMC_DDR52",""],["SD_ACCESS_MODE",""],["SD_ACCESS_MODE_DDR50",""],["SD_ACCESS_MODE_SDR104",""],["SD_ACCESS_MODE_SDR12",""],["SD_ACCESS_MODE_SDR25",""],["SD_ACCESS_MODE_SDR50",""],["SD_APP_OP_COND",""],["SD_APP_SD_STATUS",""],["SD_APP_SEND_SCR",""],["SD_APP_SET_BUS_WIDTH",""],["SD_ARG_BUS_WIDTH_1",""],["SD_ARG_BUS_WIDTH_4",""],["SD_ARG_CMD52_DATA_MASK",""],["SD_ARG_CMD52_DATA_SHIFT",""],["SD_ARG_CMD52_EXCHANGE",""],["SD_ARG_CMD52_FUNC_MASK",""],["SD_ARG_CMD52_FUNC_SHIFT",""],["SD_ARG_CMD52_READ",""],["SD_ARG_CMD52_REG_MASK",""],["SD_ARG_CMD52_REG_SHIFT",""],["SD_ARG_CMD52_WRITE",""],["SD_ARG_CMD53_BLOCK_MODE",""],["SD_ARG_CMD53_FUNC_MASK",""],["SD_ARG_CMD53_FUNC_SHIFT",""],["SD_ARG_CMD53_INCREMENT",""],["SD_ARG_CMD53_LENGTH_MASK",""],["SD_ARG_CMD53_LENGTH_MAX",""],["SD_ARG_CMD53_LENGTH_SHIFT",""],["SD_ARG_CMD53_READ",""],["SD_ARG_CMD53_REG_MASK",""],["SD_ARG_CMD53_REG_SHIFT",""],["SD_ARG_CMD53_WRITE",""],["SD_CLK_GPIO_NUM",""],["SD_CMD_GPIO_NUM",""],["SD_CRC_ON_OFF",""],["SD_CSD_CCC_AS",""],["SD_CSD_CCC_BASIC",""],["SD_CSD_CCC_BR",""],["SD_CSD_CCC_BW",""],["SD_CSD_CCC_ERASE",""],["SD_CSD_CCC_IOM",""],["SD_CSD_CCC_LC",""],["SD_CSD_CCC_SWITCH",""],["SD_CSD_CCC_WP",""],["SD_CSD_CSDVER_1_0",""],["SD_CSD_CSDVER_2_0",""],["SD_CSD_RW_BL_LEN_1G",""],["SD_CSD_RW_BL_LEN_2G",""],["SD_CSD_SPEED_25_MHZ",""],["SD_CSD_SPEED_50_MHZ",""],["SD_CSD_TAAC_1_5_MSEC",""],["SD_CSD_V2_BL_LEN",""],["SD_CSD_VDD_RW_CURR_100mA",""],["SD_CSD_VDD_RW_CURR_80mA",""],["SD_DATA0_GPIO_NUM",""],["SD_DATA1_GPIO_NUM",""],["SD_DATA2_GPIO_NUM",""],["SD_DATA3_GPIO_NUM",""],["SD_IO_CCCR_BLKSIZEH",""],["SD_IO_CCCR_BLKSIZEL",""],["SD_IO_CCCR_BUS_WIDTH",""],["SD_IO_CCCR_CARD_CAP",""],["SD_IO_CCCR_CISPTR",""],["SD_IO_CCCR_CTL",""],["SD_IO_CCCR_FN_ENABLE",""],["SD_IO_CCCR_FN_READY",""],["SD_IO_CCCR_HIGHSPEED",""],["SD_IO_CCCR_INT_ENABLE",""],["SD_IO_CCCR_INT_PENDING",""],["SD_IO_CCCR_SIZE",""],["SD_IO_CCCR_START",""],["SD_IO_CIS_SIZE",""],["SD_IO_CIS_START",""],["SD_IO_FBR_SIZE",""],["SD_IO_FBR_START",""],["SD_IO_OCR_MASK",""],["SD_IO_OCR_MEM_PRESENT",""],["SD_IO_OCR_MEM_READY",""],["SD_IO_RW_DIRECT",""],["SD_IO_RW_EXTENDED",""],["SD_IO_SEND_OP_COND",""],["SD_OCR_SDHC_CAP",""],["SD_OCR_VOL_MASK",""],["SD_READ_OCR",""],["SD_SEND_IF_COND",""],["SD_SEND_RELATIVE_ADDR",""],["SD_SEND_SWITCH_FUNC",""],["SD_SFUNC_FUNC_MAX",""],["SD_SFUNC_GROUP_MAX",""],["SD_SPI_DATA_ACCEPTED",""],["SD_SPI_DATA_CRC_ERROR",""],["SD_SPI_DATA_WR_ERROR",""],["SD_SPI_R1_ADDR_ERR",""],["SD_SPI_R1_CMD_CRC_ERR",""],["SD_SPI_R1_ERASE_RST",""],["SD_SPI_R1_ERASE_SEQ_ERR",""],["SD_SPI_R1_IDLE_STATE",""],["SD_SPI_R1_ILLEGAL_CMD",""],["SD_SPI_R1_NO_RESPONSE",""],["SD_SPI_R1_PARAM_ERR",""],["SEEK_CUR",""],["SEEK_END",""],["SEEK_SET",""],["SHUT_RD",""],["SHUT_RDWR",""],["SHUT_WR",""],["SIGABRT",""],["SIGALRM",""],["SIGBUS",""],["SIGCHLD",""],["SIGCLD",""],["SIGCONT",""],["SIGEMT",""],["SIGEV_NONE",""],["SIGEV_SIGNAL",""],["SIGEV_THREAD",""],["SIGFPE",""],["SIGHUP",""],["SIGILL",""],["SIGINT",""],["SIGIO",""],["SIGIOT",""],["SIGKILL",""],["SIGLOST",""],["SIGPIPE",""],["SIGPOLL",""],["SIGPROF",""],["SIGQUIT",""],["SIGSEGV",""],["SIGSTKSZ",""],["SIGSTOP",""],["SIGSYS",""],["SIGTERM",""],["SIGTRAP",""],["SIGTSTP",""],["SIGTTIN",""],["SIGTTOU",""],["SIGURG",""],["SIGUSR1",""],["SIGUSR2",""],["SIGVTALRM",""],["SIGWINCH",""],["SIGXCPU",""],["SIGXFSZ",""],["SIG_BLOCK",""],["SIG_GPIO_OUT_IDX",""],["SIG_IN_FUNC100_IDX",""],["SIG_IN_FUNC97_IDX",""],["SIG_IN_FUNC98_IDX",""],["SIG_IN_FUNC99_IDX",""],["SIG_IN_FUNC_100_IDX",""],["SIG_IN_FUNC_97_IDX",""],["SIG_IN_FUNC_98_IDX",""],["SIG_IN_FUNC_99_IDX",""],["SIG_SETMASK",""],["SIG_UNBLOCK",""],["SIN_ZERO_LEN",""],["SI_ASYNCIO",""],["SI_MESGQ",""],["SI_QUEUE",""],["SI_TIMER",""],["SI_USER",""],["SLIPIF_THREAD_NAME",""],["SLIPIF_THREAD_PRIO",""],["SLIPIF_THREAD_STACKSIZE",""],["SLIP_DEBUG",""],["SLP_DRV",""],["SLP_DRV_S",""],["SLP_DRV_V",""],["SLP_IE_S",""],["SLP_IE_V",""],["SLP_OE_S",""],["SLP_OE_V",""],["SLP_PD_S",""],["SLP_PD_V",""],["SLP_PU_S",""],["SLP_PU_V",""],["SLP_SEL_S",""],["SLP_SEL_V",""],["SNTP_CHECK_RESPONSE",""],["SNTP_COMP_ROUNDTRIP",""],["SNTP_DEBUG",""],["SNTP_GET_SERVERS_FROM_DHCP",""],["SNTP_GET_SERVERS_FROM_DHCPV6",""],["SNTP_MAX_SERVERS",""],["SNTP_MONITOR_SERVER_REACHABILITY",""],["SNTP_OPMODE_LISTENONLY",""],["SNTP_OPMODE_POLL",""],["SNTP_RECV_TIMEOUT",""],["SNTP_RETRY_TIMEOUT",""],["SNTP_RETRY_TIMEOUT_EXP",""],["SNTP_RETRY_TIMEOUT_MAX",""],["SNTP_SERVER_DNS",""],["SNTP_STARTUP_DELAY",""],["SOCK_DGRAM",""],["SOCK_RAW",""],["SOCK_SEQPACKET",""],["SOCK_STREAM",""],["SOC_ADC_DIGI_FILTER_NUM",""],["SOC_ADC_DIGI_MONITOR_NUM",""],["SOC_ADC_HW_CALIBRATION_V1",""],["SOC_ADC_MAX_BITWIDTH",""],["SOC_ADC_MAX_CHANNEL_NUM",""],["SOC_ADC_PATT_LEN_MAX",""],["SOC_ADC_PERIPH_NUM",""],["SOC_ADC_SAMPLE_FREQ_THRES_HIGH",""],["SOC_ADC_SAMPLE_FREQ_THRES_LOW",""],["SOC_AES_GDMA",""],["SOC_AES_SUPPORT_AES_128",""],["SOC_AES_SUPPORT_AES_256",""],["SOC_AES_SUPPORT_DMA",""],["SOC_APB_BACKUP_DMA",""],["SOC_ASYNC_MEMCPY_SUPPORTED",""],["SOC_BROWNOUT_RESET_SUPPORTED",""],["SOC_BT_SUPPORTED",""],["SOC_BYTE_ACCESSIBLE_HIGH",""],["SOC_BYTE_ACCESSIBLE_LOW",""],["SOC_COEX_HW_PTI",""],["SOC_CPU_BREAKPOINTS_NUM",""],["SOC_CPU_CORES_NUM",""],["SOC_CPU_HAS_FLEXIBLE_INTC",""],["SOC_CPU_WATCHPOINTS_NUM",""],["SOC_CPU_WATCHPOINT_SIZE",""],["SOC_DEBUG_HIGH",""],["SOC_DEBUG_LOW",""],["SOC_DIG_SIGN_SUPPORTED",""],["SOC_DIRAM_DRAM_HIGH",""],["SOC_DIRAM_DRAM_LOW",""],["SOC_DIRAM_IRAM_HIGH",""],["SOC_DIRAM_IRAM_LOW",""],["SOC_DMA_HIGH",""],["SOC_DMA_LOW",""],["SOC_DRAM_HIGH",""],["SOC_DRAM_LOW",""],["SOC_DROM_HIGH",""],["SOC_DROM_LOW",""],["SOC_DROM_MASK_HIGH",""],["SOC_DROM_MASK_LOW",""],["SOC_DS_KEY_CHECK_MAX_WAIT_US",""],["SOC_DS_KEY_PARAM_MD_IV_LENGTH",""],["SOC_DS_SIGNATURE_MAX_BIT_LEN",""],["SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS",""],["SOC_GDMA_GROUPS",""],["SOC_GDMA_PAIRS_PER_GROUP",""],["SOC_GDMA_SUPPORTED",""],["SOC_GPIO_DEEP_SLEEP_WAKEUP_VALID_GPIO_MASK",""],["SOC_GPIO_PIN_COUNT",""],["SOC_GPIO_PORT",""],["SOC_GPIO_SUPPORT_DEEPSLEEP_WAKEUP",""],["SOC_GPIO_SUPPORT_FORCE_HOLD",""],["SOC_GPIO_SUPPORT_SLP_SWITCH",""],["SOC_GPIO_VALID_GPIO_MASK",""],["SOC_GPIO_VALID_OUTPUT_GPIO_MASK",""],["SOC_HMAC_SUPPORTED",""],["SOC_I2C_FIFO_LEN",""],["SOC_I2C_NUM",""],["SOC_I2C_SUPPORT_HW_CLR_BUS",""],["SOC_I2C_SUPPORT_HW_FSM_RST",""],["SOC_I2C_SUPPORT_RTC",""],["SOC_I2C_SUPPORT_XTAL",""],["SOC_I2S_APLL_MAX_FREQ",""],["SOC_I2S_APLL_MIN_FREQ",""],["SOC_I2S_APLL_MIN_RATE",""],["SOC_I2S_MAX_BUFFER_SIZE",""],["SOC_I2S_NUM",""],["SOC_INTERRUPT_LEVEL_MEDIUM",""],["SOC_IRAM_HIGH",""],["SOC_IRAM_LOW",""],["SOC_IROM_HIGH",""],["SOC_IROM_LOW",""],["SOC_IROM_MASK_HIGH",""],["SOC_IROM_MASK_LOW",""],["SOC_LEDC_CHANNEL_NUM",""],["SOC_LEDC_SUPPORT_XTAL_CLOCK",""],["SOC_LEDC_TIMER_BIT_WIDE_NUM",""],["SOC_MAC_BB_PD_MEM_SIZE",""],["SOC_MAX_CONTIGUOUS_RAM_SIZE",""],["SOC_MEMORY_TYPE_NO_PRIOS",""],["SOC_MEMSPI_IS_INDEPENDENT",""],["SOC_MEM_INTERNAL_HIGH",""],["SOC_MEM_INTERNAL_HIGH1",""],["SOC_MEM_INTERNAL_HIGH2",""],["SOC_MEM_INTERNAL_LOW",""],["SOC_MEM_INTERNAL_LOW1",""],["SOC_MEM_INTERNAL_LOW2",""],["SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED",""],["SOC_MPU_MIN_REGION_SIZE",""],["SOC_MPU_REGIONS_MAX_NUM",""],["SOC_MPU_REGION_RO_SUPPORTED",""],["SOC_MPU_REGION_WO_SUPPORTED",""],["SOC_PERIPHERAL_HIGH",""],["SOC_PERIPHERAL_LOW",""],["SOC_PHY_DIG_REGS_MEM_SIZE",""],["SOC_PM_SUPPORT_BT_PD",""],["SOC_PM_SUPPORT_BT_WAKEUP",""],["SOC_PM_SUPPORT_CPU_PD",""],["SOC_PM_SUPPORT_WIFI_PD",""],["SOC_PM_SUPPORT_WIFI_WAKEUP",""],["SOC_RMT_CHANNELS_NUM",""],["SOC_RMT_CHANNEL_MEM_WORDS",""],["SOC_RMT_RX_CHANNELS_NUM",""],["SOC_RMT_SUPPORT_RX_DEMODULATION",""],["SOC_RMT_SUPPORT_RX_PINGPONG",""],["SOC_RMT_SUPPORT_TX_GROUP",""],["SOC_RMT_SUPPORT_TX_LOOP_COUNT",""],["SOC_RMT_SUPPORT_XTAL",""],["SOC_RMT_TX_CHANNELS_NUM",""],["SOC_ROM_STACK_START",""],["SOC_RSA_MAX_BIT_LEN",""],["SOC_RTCIO_PIN_COUNT",""],["SOC_RTC_CNTL_CPU_PD_DMA_ADDR_ALIGN",""],["SOC_RTC_CNTL_CPU_PD_DMA_BLOCK_SIZE",""],["SOC_RTC_CNTL_CPU_PD_DMA_BUS_WIDTH",""],["SOC_RTC_CNTL_CPU_PD_REG_FILE_NUM",""],["SOC_RTC_CNTL_CPU_PD_RETENTION_MEM_SIZE",""],["SOC_RTC_DATA_HIGH",""],["SOC_RTC_DATA_LOW",""],["SOC_RTC_DRAM_HIGH",""],["SOC_RTC_DRAM_LOW",""],["SOC_RTC_IRAM_HIGH",""],["SOC_RTC_IRAM_LOW",""],["SOC_SHA_DMA_MAX_BUFFER_SIZE",""],["SOC_SHA_GDMA",""],["SOC_SHA_SUPPORT_DMA",""],["SOC_SHA_SUPPORT_RESUME",""],["SOC_SHA_SUPPORT_SHA1",""],["SOC_SHA_SUPPORT_SHA224",""],["SOC_SHA_SUPPORT_SHA256",""],["SOC_SIGMADELTA_CHANNEL_NUM",""],["SOC_SIGMADELTA_NUM",""],["SOC_SPI_MAXIMUM_BUFFER_SIZE",""],["SOC_SPI_MAX_PRE_DIVIDER",""],["SOC_SPI_MEM_SUPPORT_AUTO_RESUME",""],["SOC_SPI_MEM_SUPPORT_AUTO_SUSPEND",""],["SOC_SPI_MEM_SUPPORT_AUTO_WAIT_IDLE",""],["SOC_SPI_MEM_SUPPORT_CHECK_SUS",""],["SOC_SPI_MEM_SUPPORT_IDLE_INTR",""],["SOC_SPI_MEM_SUPPORT_SW_SUSPEND",""],["SOC_SPI_PERIPH_NUM",""],["SOC_SPI_PERIPH_SUPPORT_CONTROL_DUMMY_OUTPUT",""],["SOC_SPI_SLAVE_SUPPORT_SEG_TRANS",""],["SOC_SPI_SUPPORT_CD_SIG",""],["SOC_SPI_SUPPORT_CONTINUOUS_TRANS",""],["SOC_SPI_SUPPORT_DDRCLK",""],["SOC_SPI_SUPPORT_SLAVE_HD_VER2",""],["SOC_SUPPORTS_SECURE_DL_MODE",""],["SOC_SYSTIMER_ALARM_MISS_COMPENSATE",""],["SOC_SYSTIMER_ALARM_NUM",""],["SOC_SYSTIMER_BIT_WIDTH_HI",""],["SOC_SYSTIMER_BIT_WIDTH_LO",""],["SOC_SYSTIMER_COUNTER_NUM",""],["SOC_SYSTIMER_FIXED_TICKS_US",""],["SOC_SYSTIMER_INT_LEVEL",""],["SOC_TIMER_GROUPS",""],["SOC_TIMER_GROUP_COUNTER_BIT_WIDTH",""],["SOC_TIMER_GROUP_SUPPORT_XTAL",""],["SOC_TIMER_GROUP_TIMERS_PER_GROUP",""],["SOC_TIMER_GROUP_TOTAL_TIMERS",""],["SOC_TIMER_GROUP_XTAL_MHZ",""],["SOC_TOUCH_SENSOR_NUM",""],["SOC_TWAI_BRP_MAX",""],["SOC_TWAI_BRP_MIN",""],["SOC_TWAI_SUPPORTED",""],["SOC_TWAI_SUPPORTS_RX_STATUS",""],["SOC_UART_BITRATE_MAX",""],["SOC_UART_FIFO_LEN",""],["SOC_UART_NUM",""],["SOC_UART_REQUIRE_CORE_RESET",""],["SOC_UART_SUPPORT_FSM_TX_WAIT_SEND",""],["SOC_UART_SUPPORT_RTC_CLK",""],["SOC_UART_SUPPORT_XTAL_CLK",""],["SOC_USB_SERIAL_JTAG_SUPPORTED",""],["SOC_WIFI_HW_TSF",""],["SOC_WIFI_LIGHT_SLEEP_CLK_WIDTH",""],["SOL_SOCKET",""],["SOMAXCONN",""],["SO_ACCEPTCONN",""],["SO_BINDTODEVICE",""],["SO_BROADCAST",""],["SO_CONTIMEO",""],["SO_DEBUG",""],["SO_DONTROUTE",""],["SO_ERROR",""],["SO_KEEPALIVE",""],["SO_LINGER",""],["SO_NO_CHECK",""],["SO_OOBINLINE",""],["SO_RCVBUF",""],["SO_RCVLOWAT",""],["SO_RCVTIMEO",""],["SO_REUSE",""],["SO_REUSEADDR",""],["SO_REUSEPORT",""],["SO_REUSE_RXTOALL",""],["SO_SNDBUF",""],["SO_SNDLOWAT",""],["SO_SNDTIMEO",""],["SO_TYPE",""],["SO_USELOOPBACK",""],["SPI2_FUNC_NUM",""],["SPI2_IOMUX_PIN_NUM_CLK",""],["SPI2_IOMUX_PIN_NUM_CS",""],["SPI2_IOMUX_PIN_NUM_HD",""],["SPI2_IOMUX_PIN_NUM_MISO",""],["SPI2_IOMUX_PIN_NUM_MOSI",""],["SPI2_IOMUX_PIN_NUM_WP",""],["SPICLK_OUT_IDX",""],["SPICOMMON_BUSFLAG_DUAL",""],["SPICOMMON_BUSFLAG_GPIO_PINS",""],["SPICOMMON_BUSFLAG_IOMUX_PINS",""],["SPICOMMON_BUSFLAG_MASTER",""],["SPICOMMON_BUSFLAG_MISO",""],["SPICOMMON_BUSFLAG_MOSI",""],["SPICOMMON_BUSFLAG_NATIVE_PINS",""],["SPICOMMON_BUSFLAG_QUAD",""],["SPICOMMON_BUSFLAG_SCLK",""],["SPICOMMON_BUSFLAG_SLAVE",""],["SPICOMMON_BUSFLAG_WPHD",""],["SPICS0_OUT_IDX",""],["SPICS1_OUT_IDX",""],["SPID_IN_IDX",""],["SPID_OUT_IDX",""],["SPIHD_IN_IDX",""],["SPIHD_OUT_IDX",""],["SPINLOCK_FREE",""],["SPINLOCK_NO_WAIT",""],["SPINLOCK_WAIT_FOREVER",""],["SPIQ_IN_IDX",""],["SPIQ_OUT_IDX",""],["SPIWP_IN_IDX",""],["SPIWP_OUT_IDX",""],["SPI_APP1_INT_CLR_S",""],["SPI_APP1_INT_CLR_V",""],["SPI_APP1_INT_ENA_S",""],["SPI_APP1_INT_ENA_V",""],["SPI_APP1_INT_RAW_S",""],["SPI_APP1_INT_RAW_V",""],["SPI_APP1_INT_ST_S",""],["SPI_APP1_INT_ST_V",""],["SPI_APP2_INT_CLR_S",""],["SPI_APP2_INT_CLR_V",""],["SPI_APP2_INT_ENA_S",""],["SPI_APP2_INT_ENA_V",""],["SPI_APP2_INT_RAW_S",""],["SPI_APP2_INT_RAW_V",""],["SPI_APP2_INT_ST_S",""],["SPI_APP2_INT_ST_V",""],["SPI_BUF0",""],["SPI_BUF0_S",""],["SPI_BUF0_V",""],["SPI_BUF1",""],["SPI_BUF10",""],["SPI_BUF10_S",""],["SPI_BUF10_V",""],["SPI_BUF11",""],["SPI_BUF11_S",""],["SPI_BUF11_V",""],["SPI_BUF12",""],["SPI_BUF12_S",""],["SPI_BUF12_V",""],["SPI_BUF13",""],["SPI_BUF13_S",""],["SPI_BUF13_V",""],["SPI_BUF14",""],["SPI_BUF14_S",""],["SPI_BUF14_V",""],["SPI_BUF15",""],["SPI_BUF15_S",""],["SPI_BUF15_V",""],["SPI_BUF1_S",""],["SPI_BUF1_V",""],["SPI_BUF2",""],["SPI_BUF2_S",""],["SPI_BUF2_V",""],["SPI_BUF3",""],["SPI_BUF3_S",""],["SPI_BUF3_V",""],["SPI_BUF4",""],["SPI_BUF4_S",""],["SPI_BUF4_V",""],["SPI_BUF5",""],["SPI_BUF5_S",""],["SPI_BUF5_V",""],["SPI_BUF6",""],["SPI_BUF6_S",""],["SPI_BUF6_V",""],["SPI_BUF7",""],["SPI_BUF7_S",""],["SPI_BUF7_V",""],["SPI_BUF8",""],["SPI_BUF8_S",""],["SPI_BUF8_V",""],["SPI_BUF9",""],["SPI_BUF9_S",""],["SPI_BUF9_V",""],["SPI_BUF_AFIFO_RST_S",""],["SPI_BUF_AFIFO_RST_V",""],["SPI_CK_DIS_S",""],["SPI_CK_DIS_V",""],["SPI_CK_IDLE_EDGE_S",""],["SPI_CK_IDLE_EDGE_V",""],["SPI_CK_OUT_EDGE_S",""],["SPI_CK_OUT_EDGE_V",""],["SPI_CLKCNT_H",""],["SPI_CLKCNT_H_S",""],["SPI_CLKCNT_H_V",""],["SPI_CLKCNT_L",""],["SPI_CLKCNT_L_S",""],["SPI_CLKCNT_L_V",""],["SPI_CLKCNT_N",""],["SPI_CLKCNT_N_S",""],["SPI_CLKCNT_N_V",""],["SPI_CLKDIV_PRE",""],["SPI_CLKDIV_PRE_S",""],["SPI_CLKDIV_PRE_V",""],["SPI_CLK_DIV",""],["SPI_CLK_EN_S",""],["SPI_CLK_EN_V",""],["SPI_CLK_EQU_SYSCLK_S",""],["SPI_CLK_EQU_SYSCLK_V",""],["SPI_CLK_GPIO_NUM",""],["SPI_CLK_MODE",""],["SPI_CLK_MODE_13_S",""],["SPI_CLK_MODE_13_V",""],["SPI_CLK_MODE_S",""],["SPI_CLK_MODE_V",""],["SPI_CONF_BITLEN",""],["SPI_CONF_BITLEN_S",""],["SPI_CONF_BITLEN_V",""],["SPI_CS0_DIS_S",""],["SPI_CS0_DIS_V",""],["SPI_CS0_GPIO_NUM",""],["SPI_CS1_DIS_S",""],["SPI_CS1_DIS_V",""],["SPI_CS2_DIS_S",""],["SPI_CS2_DIS_V",""],["SPI_CS3_DIS_S",""],["SPI_CS3_DIS_V",""],["SPI_CS4_DIS_S",""],["SPI_CS4_DIS_V",""],["SPI_CS5_DIS_S",""],["SPI_CS5_DIS_V",""],["SPI_CS_HOLD_S",""],["SPI_CS_HOLD_TIME",""],["SPI_CS_HOLD_TIME_S",""],["SPI_CS_HOLD_TIME_V",""],["SPI_CS_HOLD_V",""],["SPI_CS_KEEP_ACTIVE_S",""],["SPI_CS_KEEP_ACTIVE_V",""],["SPI_CS_SETUP_S",""],["SPI_CS_SETUP_TIME",""],["SPI_CS_SETUP_TIME_S",""],["SPI_CS_SETUP_TIME_V",""],["SPI_CS_SETUP_V",""],["SPI_DATE",""],["SPI_DATE_S",""],["SPI_DATE_V",""],["SPI_DEVICE_3WIRE",""],["SPI_DEVICE_BIT_LSBFIRST",""],["SPI_DEVICE_CLK_AS_CS",""],["SPI_DEVICE_DDRCLK",""],["SPI_DEVICE_HALFDUPLEX",""],["SPI_DEVICE_NO_DUMMY",""],["SPI_DEVICE_POSITIVE_CS",""],["SPI_DEVICE_RXBIT_LSBFIRST",""],["SPI_DEVICE_TXBIT_LSBFIRST",""],["SPI_DIN0_MODE",""],["SPI_DIN0_MODE_S",""],["SPI_DIN0_MODE_V",""],["SPI_DIN0_NUM",""],["SPI_DIN0_NUM_S",""],["SPI_DIN0_NUM_V",""],["SPI_DIN1_MODE",""],["SPI_DIN1_MODE_S",""],["SPI_DIN1_MODE_V",""],["SPI_DIN1_NUM",""],["SPI_DIN1_NUM_S",""],["SPI_DIN1_NUM_V",""],["SPI_DIN2_MODE",""],["SPI_DIN2_MODE_S",""],["SPI_DIN2_MODE_V",""],["SPI_DIN2_NUM",""],["SPI_DIN2_NUM_S",""],["SPI_DIN2_NUM_V",""],["SPI_DIN3_MODE",""],["SPI_DIN3_MODE_S",""],["SPI_DIN3_MODE_V",""],["SPI_DIN3_NUM",""],["SPI_DIN3_NUM_S",""],["SPI_DIN3_NUM_V",""],["SPI_DMA_AFIFO_RST_S",""],["SPI_DMA_AFIFO_RST_V",""],["SPI_DMA_INFIFO_FULL_ERR_INT_CLR_S",""],["SPI_DMA_INFIFO_FULL_ERR_INT_CLR_V",""],["SPI_DMA_INFIFO_FULL_ERR_INT_ENA_S",""],["SPI_DMA_INFIFO_FULL_ERR_INT_ENA_V",""],["SPI_DMA_INFIFO_FULL_ERR_INT_RAW_S",""],["SPI_DMA_INFIFO_FULL_ERR_INT_RAW_V",""],["SPI_DMA_INFIFO_FULL_ERR_INT_ST_S",""],["SPI_DMA_INFIFO_FULL_ERR_INT_ST_V",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_S",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_V",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_S",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_V",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_S",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_V",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_S",""],["SPI_DMA_OUTFIFO_EMPTY_ERR_INT_ST_V",""],["SPI_DMA_RX_ENA_S",""],["SPI_DMA_RX_ENA_V",""],["SPI_DMA_SEG_MAGIC_VALUE",""],["SPI_DMA_SEG_MAGIC_VALUE_S",""],["SPI_DMA_SEG_MAGIC_VALUE_V",""],["SPI_DMA_SEG_TRANS_DONE_INT_CLR_S",""],["SPI_DMA_SEG_TRANS_DONE_INT_CLR_V",""],["SPI_DMA_SEG_TRANS_DONE_INT_ENA_S",""],["SPI_DMA_SEG_TRANS_DONE_INT_ENA_V",""],["SPI_DMA_SEG_TRANS_DONE_INT_RAW_S",""],["SPI_DMA_SEG_TRANS_DONE_INT_RAW_V",""],["SPI_DMA_SEG_TRANS_DONE_INT_ST_S",""],["SPI_DMA_SEG_TRANS_DONE_INT_ST_V",""],["SPI_DMA_SLV_SEG_TRANS_EN_S",""],["SPI_DMA_SLV_SEG_TRANS_EN_V",""],["SPI_DMA_TX_ENA_S",""],["SPI_DMA_TX_ENA_V",""],["SPI_DOUT0_MODE_S",""],["SPI_DOUT0_MODE_V",""],["SPI_DOUT1_MODE_S",""],["SPI_DOUT1_MODE_V",""],["SPI_DOUT2_MODE_S",""],["SPI_DOUT2_MODE_V",""],["SPI_DOUT3_MODE_S",""],["SPI_DOUT3_MODE_V",""],["SPI_DOUTDIN_S",""],["SPI_DOUTDIN_V",""],["SPI_DUMMY_OUT_S",""],["SPI_DUMMY_OUT_V",""],["SPI_D_GPIO_NUM",""],["SPI_D_POL_S",""],["SPI_D_POL_V",""],["SPI_FADDR_DUAL_S",""],["SPI_FADDR_DUAL_V",""],["SPI_FADDR_QUAD_S",""],["SPI_FADDR_QUAD_V",""],["SPI_FCMD_DUAL_S",""],["SPI_FCMD_DUAL_V",""],["SPI_FCMD_QUAD_S",""],["SPI_FCMD_QUAD_V",""],["SPI_FLASH_MMU_PAGE_SIZE",""],["SPI_FLASH_SEC_SIZE",""],["SPI_FREAD_DUAL_S",""],["SPI_FREAD_DUAL_V",""],["SPI_FREAD_QUAD_S",""],["SPI_FREAD_QUAD_V",""],["SPI_FUNC_NUM",""],["SPI_FWRITE_DUAL_S",""],["SPI_FWRITE_DUAL_V",""],["SPI_FWRITE_QUAD_S",""],["SPI_FWRITE_QUAD_V",""],["SPI_HD_GPIO_NUM",""],["SPI_HOLD_POL_S",""],["SPI_HOLD_POL_V",""],["SPI_IOMUX_PIN_NUM_CLK",""],["SPI_IOMUX_PIN_NUM_CS",""],["SPI_IOMUX_PIN_NUM_HD",""],["SPI_IOMUX_PIN_NUM_MISO",""],["SPI_IOMUX_PIN_NUM_MOSI",""],["SPI_IOMUX_PIN_NUM_WP",""],["SPI_MASTER_CS_POL",""],["SPI_MASTER_CS_POL_S",""],["SPI_MASTER_CS_POL_V",""],["SPI_MASTER_FREQ_10M",""],["SPI_MASTER_FREQ_11M",""],["SPI_MASTER_FREQ_13M",""],["SPI_MASTER_FREQ_16M",""],["SPI_MASTER_FREQ_20M",""],["SPI_MASTER_FREQ_26M",""],["SPI_MASTER_FREQ_40M",""],["SPI_MASTER_FREQ_80M",""],["SPI_MASTER_FREQ_8M",""],["SPI_MASTER_FREQ_9M",""],["SPI_MAX_DMA_LEN",""],["SPI_MEM_BUF0",""],["SPI_MEM_BUF0_S",""],["SPI_MEM_BUF0_V",""],["SPI_MEM_BUF1",""],["SPI_MEM_BUF10",""],["SPI_MEM_BUF10_S",""],["SPI_MEM_BUF10_V",""],["SPI_MEM_BUF11",""],["SPI_MEM_BUF11_S",""],["SPI_MEM_BUF11_V",""],["SPI_MEM_BUF12",""],["SPI_MEM_BUF12_S",""],["SPI_MEM_BUF12_V",""],["SPI_MEM_BUF13",""],["SPI_MEM_BUF13_S",""],["SPI_MEM_BUF13_V",""],["SPI_MEM_BUF14",""],["SPI_MEM_BUF14_S",""],["SPI_MEM_BUF14_V",""],["SPI_MEM_BUF15",""],["SPI_MEM_BUF15_S",""],["SPI_MEM_BUF15_V",""],["SPI_MEM_BUF1_S",""],["SPI_MEM_BUF1_V",""],["SPI_MEM_BUF2",""],["SPI_MEM_BUF2_S",""],["SPI_MEM_BUF2_V",""],["SPI_MEM_BUF3",""],["SPI_MEM_BUF3_S",""],["SPI_MEM_BUF3_V",""],["SPI_MEM_BUF4",""],["SPI_MEM_BUF4_S",""],["SPI_MEM_BUF4_V",""],["SPI_MEM_BUF5",""],["SPI_MEM_BUF5_S",""],["SPI_MEM_BUF5_V",""],["SPI_MEM_BUF6",""],["SPI_MEM_BUF6_S",""],["SPI_MEM_BUF6_V",""],["SPI_MEM_BUF7",""],["SPI_MEM_BUF7_S",""],["SPI_MEM_BUF7_V",""],["SPI_MEM_BUF8",""],["SPI_MEM_BUF8_S",""],["SPI_MEM_BUF8_V",""],["SPI_MEM_BUF9",""],["SPI_MEM_BUF9_S",""],["SPI_MEM_BUF9_V",""],["SPI_MEM_CACHE_FLASH_USR_CMD_S",""],["SPI_MEM_CACHE_FLASH_USR_CMD_V",""],["SPI_MEM_CACHE_REQ_EN_S",""],["SPI_MEM_CACHE_REQ_EN_V",""],["SPI_MEM_CACHE_USR_ADDR_4BYTE_S",""],["SPI_MEM_CACHE_USR_ADDR_4BYTE_V",""],["SPI_MEM_CK_IDLE_EDGE_S",""],["SPI_MEM_CK_IDLE_EDGE_V",""],["SPI_MEM_CK_OUT_EDGE_S",""],["SPI_MEM_CK_OUT_EDGE_V",""],["SPI_MEM_CLKCNT_H",""],["SPI_MEM_CLKCNT_H_S",""],["SPI_MEM_CLKCNT_H_V",""],["SPI_MEM_CLKCNT_L",""],["SPI_MEM_CLKCNT_L_S",""],["SPI_MEM_CLKCNT_L_V",""],["SPI_MEM_CLKCNT_N",""],["SPI_MEM_CLKCNT_N_S",""],["SPI_MEM_CLKCNT_N_V",""],["SPI_MEM_CLK_EN_S",""],["SPI_MEM_CLK_EN_V",""],["SPI_MEM_CLK_EQU_SYSCLK_S",""],["SPI_MEM_CLK_EQU_SYSCLK_V",""],["SPI_MEM_CLK_MODE",""],["SPI_MEM_CLK_MODE_S",""],["SPI_MEM_CLK_MODE_V",""],["SPI_MEM_CS0_DIS_S",""],["SPI_MEM_CS0_DIS_V",""],["SPI_MEM_CS1_DIS_S",""],["SPI_MEM_CS1_DIS_V",""],["SPI_MEM_CSPI_LOCK_DELAY_TIME",""],["SPI_MEM_CSPI_LOCK_DELAY_TIME_S",""],["SPI_MEM_CSPI_LOCK_DELAY_TIME_V",""],["SPI_MEM_CSPI_ST",""],["SPI_MEM_CSPI_ST_S",""],["SPI_MEM_CSPI_ST_TRANS_END_INT_ENA_S",""],["SPI_MEM_CSPI_ST_TRANS_END_INT_ENA_V",""],["SPI_MEM_CSPI_ST_TRANS_END_S",""],["SPI_MEM_CSPI_ST_TRANS_END_V",""],["SPI_MEM_CSPI_ST_V",""],["SPI_MEM_CS_HOLD_DELAY",""],["SPI_MEM_CS_HOLD_DELAY_S",""],["SPI_MEM_CS_HOLD_DELAY_V",""],["SPI_MEM_CS_HOLD_DLY_RES",""],["SPI_MEM_CS_HOLD_DLY_RES_S",""],["SPI_MEM_CS_HOLD_DLY_RES_V",""],["SPI_MEM_CS_HOLD_S",""],["SPI_MEM_CS_HOLD_TIME",""],["SPI_MEM_CS_HOLD_TIME_S",""],["SPI_MEM_CS_HOLD_TIME_V",""],["SPI_MEM_CS_HOLD_V",""],["SPI_MEM_CS_KEEP_ACTIVE_S",""],["SPI_MEM_CS_KEEP_ACTIVE_V",""],["SPI_MEM_CS_SETUP_S",""],["SPI_MEM_CS_SETUP_TIME",""],["SPI_MEM_CS_SETUP_TIME_S",""],["SPI_MEM_CS_SETUP_TIME_V",""],["SPI_MEM_CS_SETUP_V",""],["SPI_MEM_DATE",""],["SPI_MEM_DATE_S",""],["SPI_MEM_DATE_V",""],["SPI_MEM_DIN0_MODE",""],["SPI_MEM_DIN0_MODE_S",""],["SPI_MEM_DIN0_MODE_V",""],["SPI_MEM_DIN0_NUM",""],["SPI_MEM_DIN0_NUM_S",""],["SPI_MEM_DIN0_NUM_V",""],["SPI_MEM_DIN1_MODE",""],["SPI_MEM_DIN1_MODE_S",""],["SPI_MEM_DIN1_MODE_V",""],["SPI_MEM_DIN1_NUM",""],["SPI_MEM_DIN1_NUM_S",""],["SPI_MEM_DIN1_NUM_V",""],["SPI_MEM_DIN2_MODE",""],["SPI_MEM_DIN2_MODE_S",""],["SPI_MEM_DIN2_MODE_V",""],["SPI_MEM_DIN2_NUM",""],["SPI_MEM_DIN2_NUM_S",""],["SPI_MEM_DIN2_NUM_V",""],["SPI_MEM_DIN3_MODE",""],["SPI_MEM_DIN3_MODE_S",""],["SPI_MEM_DIN3_MODE_V",""],["SPI_MEM_DIN3_NUM",""],["SPI_MEM_DIN3_NUM_S",""],["SPI_MEM_DIN3_NUM_V",""],["SPI_MEM_DOUT0_MODE_S",""],["SPI_MEM_DOUT0_MODE_V",""],["SPI_MEM_DOUT1_MODE_S",""],["SPI_MEM_DOUT1_MODE_V",""],["SPI_MEM_DOUT2_MODE_S",""],["SPI_MEM_DOUT2_MODE_V",""],["SPI_MEM_DOUT3_MODE_S",""],["SPI_MEM_DOUT3_MODE_V",""],["SPI_MEM_D_POL_S",""],["SPI_MEM_D_POL_V",""],["SPI_MEM_EM_ST",""],["SPI_MEM_EM_ST_S",""],["SPI_MEM_EM_ST_V",""],["SPI_MEM_EXTRA_DUMMY_CYCLELEN",""],["SPI_MEM_EXTRA_DUMMY_CYCLELEN_S",""],["SPI_MEM_EXTRA_DUMMY_CYCLELEN_V",""],["SPI_MEM_FADDR_DUAL_S",""],["SPI_MEM_FADDR_DUAL_V",""],["SPI_MEM_FADDR_QUAD_S",""],["SPI_MEM_FADDR_QUAD_V",""],["SPI_MEM_FASTRD_MODE_S",""],["SPI_MEM_FASTRD_MODE_V",""],["SPI_MEM_FCMD_DUAL_S",""],["SPI_MEM_FCMD_DUAL_V",""],["SPI_MEM_FCMD_QUAD_S",""],["SPI_MEM_FCMD_QUAD_V",""],["SPI_MEM_FCS_CRC_EN_S",""],["SPI_MEM_FCS_CRC_EN_V",""],["SPI_MEM_FDIN_DUAL_S",""],["SPI_MEM_FDIN_DUAL_V",""],["SPI_MEM_FDIN_QUAD_S",""],["SPI_MEM_FDIN_QUAD_V",""],["SPI_MEM_FDOUT_DUAL_S",""],["SPI_MEM_FDOUT_DUAL_V",""],["SPI_MEM_FDOUT_QUAD_S",""],["SPI_MEM_FDOUT_QUAD_V",""],["SPI_MEM_FDUMMY_OUT_S",""],["SPI_MEM_FDUMMY_OUT_V",""],["SPI_MEM_FLASH_BE_S",""],["SPI_MEM_FLASH_BE_V",""],["SPI_MEM_FLASH_CE_S",""],["SPI_MEM_FLASH_CE_V",""],["SPI_MEM_FLASH_DP_DLY_128_S",""],["SPI_MEM_FLASH_DP_DLY_128_V",""],["SPI_MEM_FLASH_DP_S",""],["SPI_MEM_FLASH_DP_V",""],["SPI_MEM_FLASH_HPM_DLY_128_S",""],["SPI_MEM_FLASH_HPM_DLY_128_V",""],["SPI_MEM_FLASH_HPM_S",""],["SPI_MEM_FLASH_HPM_V",""],["SPI_MEM_FLASH_PER_COMMAND",""],["SPI_MEM_FLASH_PER_COMMAND_S",""],["SPI_MEM_FLASH_PER_COMMAND_V",""],["SPI_MEM_FLASH_PER_DLY_128_S",""],["SPI_MEM_FLASH_PER_DLY_128_V",""],["SPI_MEM_FLASH_PER_S",""],["SPI_MEM_FLASH_PER_V",""],["SPI_MEM_FLASH_PER_WAIT_EN_S",""],["SPI_MEM_FLASH_PER_WAIT_EN_V",""],["SPI_MEM_FLASH_PES_COMMAND",""],["SPI_MEM_FLASH_PES_COMMAND_S",""],["SPI_MEM_FLASH_PES_COMMAND_V",""],["SPI_MEM_FLASH_PES_DLY_128_S",""],["SPI_MEM_FLASH_PES_DLY_128_V",""],["SPI_MEM_FLASH_PES_EN_S",""],["SPI_MEM_FLASH_PES_EN_V",""],["SPI_MEM_FLASH_PES_S",""],["SPI_MEM_FLASH_PES_V",""],["SPI_MEM_FLASH_PES_WAIT_EN_S",""],["SPI_MEM_FLASH_PES_WAIT_EN_V",""],["SPI_MEM_FLASH_PE_S",""],["SPI_MEM_FLASH_PE_V",""],["SPI_MEM_FLASH_PP_S",""],["SPI_MEM_FLASH_PP_V",""],["SPI_MEM_FLASH_RDID_S",""],["SPI_MEM_FLASH_RDID_V",""],["SPI_MEM_FLASH_RDSR_S",""],["SPI_MEM_FLASH_RDSR_V",""],["SPI_MEM_FLASH_READ_S",""],["SPI_MEM_FLASH_READ_V",""],["SPI_MEM_FLASH_RES_DLY_128_S",""],["SPI_MEM_FLASH_RES_DLY_128_V",""],["SPI_MEM_FLASH_RES_S",""],["SPI_MEM_FLASH_RES_V",""],["SPI_MEM_FLASH_SE_S",""],["SPI_MEM_FLASH_SE_V",""],["SPI_MEM_FLASH_SUS_S",""],["SPI_MEM_FLASH_SUS_V",""],["SPI_MEM_FLASH_WRDI_S",""],["SPI_MEM_FLASH_WRDI_V",""],["SPI_MEM_FLASH_WREN_S",""],["SPI_MEM_FLASH_WREN_V",""],["SPI_MEM_FLASH_WRSR_S",""],["SPI_MEM_FLASH_WRSR_V",""],["SPI_MEM_FMEM_RD_SUS_2B_S",""],["SPI_MEM_FMEM_RD_SUS_2B_V",""],["SPI_MEM_FREAD_DIO_S",""],["SPI_MEM_FREAD_DIO_V",""],["SPI_MEM_FREAD_DUAL_S",""],["SPI_MEM_FREAD_DUAL_V",""],["SPI_MEM_FREAD_QIO_S",""],["SPI_MEM_FREAD_QIO_V",""],["SPI_MEM_FREAD_QUAD_S",""],["SPI_MEM_FREAD_QUAD_V",""],["SPI_MEM_FWRITE_DIO_S",""],["SPI_MEM_FWRITE_DIO_V",""],["SPI_MEM_FWRITE_DUAL_S",""],["SPI_MEM_FWRITE_DUAL_V",""],["SPI_MEM_FWRITE_QIO_S",""],["SPI_MEM_FWRITE_QIO_V",""],["SPI_MEM_FWRITE_QUAD_S",""],["SPI_MEM_FWRITE_QUAD_V",""],["SPI_MEM_MST_ST",""],["SPI_MEM_MST_ST_END_INT_CLR_S",""],["SPI_MEM_MST_ST_END_INT_CLR_V",""],["SPI_MEM_MST_ST_END_INT_ENA_S",""],["SPI_MEM_MST_ST_END_INT_ENA_V",""],["SPI_MEM_MST_ST_END_INT_RAW_S",""],["SPI_MEM_MST_ST_END_INT_RAW_V",""],["SPI_MEM_MST_ST_END_INT_ST_S",""],["SPI_MEM_MST_ST_END_INT_ST_V",""],["SPI_MEM_MST_ST_S",""],["SPI_MEM_MST_ST_V",""],["SPI_MEM_PER_END_EN_S",""],["SPI_MEM_PER_END_EN_V",""],["SPI_MEM_PER_END_INT_CLR_S",""],["SPI_MEM_PER_END_INT_CLR_V",""],["SPI_MEM_PER_END_INT_ENA_S",""],["SPI_MEM_PER_END_INT_ENA_V",""],["SPI_MEM_PER_END_INT_RAW_S",""],["SPI_MEM_PER_END_INT_RAW_V",""],["SPI_MEM_PER_END_INT_ST_S",""],["SPI_MEM_PER_END_INT_ST_V",""],["SPI_MEM_PESR_END_MSK",""],["SPI_MEM_PESR_END_MSK_S",""],["SPI_MEM_PESR_END_MSK_V",""],["SPI_MEM_PES_END_EN_S",""],["SPI_MEM_PES_END_EN_V",""],["SPI_MEM_PES_END_INT_CLR_S",""],["SPI_MEM_PES_END_INT_CLR_V",""],["SPI_MEM_PES_END_INT_ENA_S",""],["SPI_MEM_PES_END_INT_ENA_V",""],["SPI_MEM_PES_END_INT_RAW_S",""],["SPI_MEM_PES_END_INT_RAW_V",""],["SPI_MEM_PES_END_INT_ST_S",""],["SPI_MEM_PES_END_INT_ST_V",""],["SPI_MEM_PES_PER_EN_S",""],["SPI_MEM_PES_PER_EN_V",""],["SPI_MEM_Q_POL_S",""],["SPI_MEM_Q_POL_V",""],["SPI_MEM_RESANDRES_S",""],["SPI_MEM_RESANDRES_V",""],["SPI_MEM_RXFIFO_RST_S",""],["SPI_MEM_RXFIFO_RST_V",""],["SPI_MEM_RXFIFO_WFULL_ERR_S",""],["SPI_MEM_RXFIFO_WFULL_ERR_V",""],["SPI_MEM_SLV_ST",""],["SPI_MEM_SLV_ST_END_INT_CLR_S",""],["SPI_MEM_SLV_ST_END_INT_CLR_V",""],["SPI_MEM_SLV_ST_END_INT_ENA_S",""],["SPI_MEM_SLV_ST_END_INT_ENA_V",""],["SPI_MEM_SLV_ST_END_INT_RAW_S",""],["SPI_MEM_SLV_ST_END_INT_RAW_V",""],["SPI_MEM_SLV_ST_END_INT_ST_S",""],["SPI_MEM_SLV_ST_END_INT_ST_V",""],["SPI_MEM_SLV_ST_S",""],["SPI_MEM_SLV_ST_TRANS_END_INT_ENA_S",""],["SPI_MEM_SLV_ST_TRANS_END_INT_ENA_V",""],["SPI_MEM_SLV_ST_TRANS_END_S",""],["SPI_MEM_SLV_ST_TRANS_END_V",""],["SPI_MEM_SLV_ST_V",""],["SPI_MEM_SPI01_CLK_SEL",""],["SPI_MEM_SPI01_CLK_SEL_S",""],["SPI_MEM_SPI01_CLK_SEL_V",""],["SPI_MEM_SPI0_LOCK_EN_S",""],["SPI_MEM_SPI0_LOCK_EN_V",""],["SPI_MEM_STATUS",""],["SPI_MEM_STATUS_S",""],["SPI_MEM_STATUS_V",""],["SPI_MEM_SUS_TIMEOUT_CNT",""],["SPI_MEM_SUS_TIMEOUT_CNT_S",""],["SPI_MEM_SUS_TIMEOUT_CNT_V",""],["SPI_MEM_SYNC_RESET_S",""],["SPI_MEM_SYNC_RESET_V",""],["SPI_MEM_TIMING_CALI_S",""],["SPI_MEM_TIMING_CALI_V",""],["SPI_MEM_TIMING_CLK_ENA_S",""],["SPI_MEM_TIMING_CLK_ENA_V",""],["SPI_MEM_TRANS_END_INT_ENA_S",""],["SPI_MEM_TRANS_END_INT_ENA_V",""],["SPI_MEM_TX_CRC_DATA",""],["SPI_MEM_TX_CRC_DATA_S",""],["SPI_MEM_TX_CRC_DATA_V",""],["SPI_MEM_TX_CRC_EN_S",""],["SPI_MEM_TX_CRC_EN_V",""],["SPI_MEM_USR_ADDR_BITLEN",""],["SPI_MEM_USR_ADDR_BITLEN_S",""],["SPI_MEM_USR_ADDR_BITLEN_V",""],["SPI_MEM_USR_ADDR_S",""],["SPI_MEM_USR_ADDR_V",""],["SPI_MEM_USR_ADDR_VALUE",""],["SPI_MEM_USR_ADDR_VALUE_S",""],["SPI_MEM_USR_ADDR_VALUE_V",""],["SPI_MEM_USR_COMMAND_BITLEN",""],["SPI_MEM_USR_COMMAND_BITLEN_S",""],["SPI_MEM_USR_COMMAND_BITLEN_V",""],["SPI_MEM_USR_COMMAND_S",""],["SPI_MEM_USR_COMMAND_V",""],["SPI_MEM_USR_COMMAND_VALUE",""],["SPI_MEM_USR_COMMAND_VALUE_S",""],["SPI_MEM_USR_COMMAND_VALUE_V",""],["SPI_MEM_USR_DUMMY_CYCLELEN",""],["SPI_MEM_USR_DUMMY_CYCLELEN_S",""],["SPI_MEM_USR_DUMMY_CYCLELEN_V",""],["SPI_MEM_USR_DUMMY_IDLE_S",""],["SPI_MEM_USR_DUMMY_IDLE_V",""],["SPI_MEM_USR_DUMMY_S",""],["SPI_MEM_USR_DUMMY_V",""],["SPI_MEM_USR_MISO_DBITLEN",""],["SPI_MEM_USR_MISO_DBITLEN_S",""],["SPI_MEM_USR_MISO_DBITLEN_V",""],["SPI_MEM_USR_MISO_HIGHPART_S",""],["SPI_MEM_USR_MISO_HIGHPART_V",""],["SPI_MEM_USR_MISO_S",""],["SPI_MEM_USR_MISO_V",""],["SPI_MEM_USR_MOSI_DBITLEN",""],["SPI_MEM_USR_MOSI_DBITLEN_S",""],["SPI_MEM_USR_MOSI_DBITLEN_V",""],["SPI_MEM_USR_MOSI_HIGHPART_S",""],["SPI_MEM_USR_MOSI_HIGHPART_V",""],["SPI_MEM_USR_MOSI_S",""],["SPI_MEM_USR_MOSI_V",""],["SPI_MEM_USR_S",""],["SPI_MEM_USR_V",""],["SPI_MEM_WAITI_CMD",""],["SPI_MEM_WAITI_CMD_S",""],["SPI_MEM_WAITI_CMD_V",""],["SPI_MEM_WAITI_DUMMY_CYCLELEN",""],["SPI_MEM_WAITI_DUMMY_CYCLELEN_S",""],["SPI_MEM_WAITI_DUMMY_CYCLELEN_V",""],["SPI_MEM_WAITI_DUMMY_S",""],["SPI_MEM_WAITI_DUMMY_V",""],["SPI_MEM_WAIT_PESR_CMD_2B_S",""],["SPI_MEM_WAIT_PESR_CMD_2B_V",""],["SPI_MEM_WAIT_PESR_COMMAND",""],["SPI_MEM_WAIT_PESR_COMMAND_S",""],["SPI_MEM_WAIT_PESR_COMMAND_V",""],["SPI_MEM_WB_MODE",""],["SPI_MEM_WB_MODE_S",""],["SPI_MEM_WB_MODE_V",""],["SPI_MEM_WPE_END_INT_CLR_S",""],["SPI_MEM_WPE_END_INT_CLR_V",""],["SPI_MEM_WPE_END_INT_ENA_S",""],["SPI_MEM_WPE_END_INT_ENA_V",""],["SPI_MEM_WPE_END_INT_RAW_S",""],["SPI_MEM_WPE_END_INT_RAW_V",""],["SPI_MEM_WPE_END_INT_ST_S",""],["SPI_MEM_WPE_END_INT_ST_V",""],["SPI_MEM_WP_REG_S",""],["SPI_MEM_WP_REG_V",""],["SPI_MEM_WRSR_2B_S",""],["SPI_MEM_WRSR_2B_V",""],["SPI_MST_CLK_ACTIVE_S",""],["SPI_MST_CLK_ACTIVE_V",""],["SPI_MST_CLK_SEL_S",""],["SPI_MST_CLK_SEL_V",""],["SPI_MST_REMPTY_ERR_END_EN_S",""],["SPI_MST_REMPTY_ERR_END_EN_V",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_S",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_CLR_V",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_S",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_ENA_V",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_S",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_RAW_V",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_S",""],["SPI_MST_RX_AFIFO_WFULL_ERR_INT_ST_V",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_S",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_V",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_S",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_V",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_S",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_V",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_S",""],["SPI_MST_TX_AFIFO_REMPTY_ERR_INT_ST_V",""],["SPI_MST_WFULL_ERR_END_EN_S",""],["SPI_MST_WFULL_ERR_END_EN_V",""],["SPI_MS_DATA_BITLEN",""],["SPI_MS_DATA_BITLEN_S",""],["SPI_MS_DATA_BITLEN_V",""],["SPI_QPI_MODE_S",""],["SPI_QPI_MODE_V",""],["SPI_QUAD_DIN_PIN_SWAP_S",""],["SPI_QUAD_DIN_PIN_SWAP_V",""],["SPI_Q_GPIO_NUM",""],["SPI_Q_POL_S",""],["SPI_Q_POL_V",""],["SPI_RD_BIT_ORDER_S",""],["SPI_RD_BIT_ORDER_V",""],["SPI_RSCK_DATA_OUT_S",""],["SPI_RSCK_DATA_OUT_V",""],["SPI_RSCK_I_EDGE_S",""],["SPI_RSCK_I_EDGE_V",""],["SPI_RX_AFIFO_RST_S",""],["SPI_RX_AFIFO_RST_V",""],["SPI_RX_EOF_EN_S",""],["SPI_RX_EOF_EN_V",""],["SPI_SEG_MAGIC_ERR_INT_CLR_S",""],["SPI_SEG_MAGIC_ERR_INT_CLR_V",""],["SPI_SEG_MAGIC_ERR_INT_ENA_S",""],["SPI_SEG_MAGIC_ERR_INT_ENA_V",""],["SPI_SEG_MAGIC_ERR_INT_RAW_S",""],["SPI_SEG_MAGIC_ERR_INT_RAW_V",""],["SPI_SEG_MAGIC_ERR_INT_ST_S",""],["SPI_SEG_MAGIC_ERR_INT_ST_V",""],["SPI_SIO_S",""],["SPI_SIO_V",""],["SPI_SLAVE_BIT_LSBFIRST",""],["SPI_SLAVE_CS_POL_S",""],["SPI_SLAVE_CS_POL_V",""],["SPI_SLAVE_MODE_S",""],["SPI_SLAVE_MODE_V",""],["SPI_SLAVE_RXBIT_LSBFIRST",""],["SPI_SLAVE_TXBIT_LSBFIRST",""],["SPI_SLV_BUF_ADDR_ERR_INT_CLR_S",""],["SPI_SLV_BUF_ADDR_ERR_INT_CLR_V",""],["SPI_SLV_BUF_ADDR_ERR_INT_ENA_S",""],["SPI_SLV_BUF_ADDR_ERR_INT_ENA_V",""],["SPI_SLV_BUF_ADDR_ERR_INT_RAW_S",""],["SPI_SLV_BUF_ADDR_ERR_INT_RAW_V",""],["SPI_SLV_BUF_ADDR_ERR_INT_ST_S",""],["SPI_SLV_BUF_ADDR_ERR_INT_ST_V",""],["SPI_SLV_CMD7_INT_CLR_S",""],["SPI_SLV_CMD7_INT_CLR_V",""],["SPI_SLV_CMD7_INT_ENA_S",""],["SPI_SLV_CMD7_INT_ENA_V",""],["SPI_SLV_CMD7_INT_RAW_S",""],["SPI_SLV_CMD7_INT_RAW_V",""],["SPI_SLV_CMD7_INT_ST_S",""],["SPI_SLV_CMD7_INT_ST_V",""],["SPI_SLV_CMD8_INT_CLR_S",""],["SPI_SLV_CMD8_INT_CLR_V",""],["SPI_SLV_CMD8_INT_ENA_S",""],["SPI_SLV_CMD8_INT_ENA_V",""],["SPI_SLV_CMD8_INT_RAW_S",""],["SPI_SLV_CMD8_INT_RAW_V",""],["SPI_SLV_CMD8_INT_ST_S",""],["SPI_SLV_CMD8_INT_ST_V",""],["SPI_SLV_CMD9_INT_CLR_S",""],["SPI_SLV_CMD9_INT_CLR_V",""],["SPI_SLV_CMD9_INT_ENA_S",""],["SPI_SLV_CMD9_INT_ENA_V",""],["SPI_SLV_CMD9_INT_RAW_S",""],["SPI_SLV_CMD9_INT_RAW_V",""],["SPI_SLV_CMD9_INT_ST_S",""],["SPI_SLV_CMD9_INT_ST_V",""],["SPI_SLV_CMDA_INT_CLR_S",""],["SPI_SLV_CMDA_INT_CLR_V",""],["SPI_SLV_CMDA_INT_ENA_S",""],["SPI_SLV_CMDA_INT_ENA_V",""],["SPI_SLV_CMDA_INT_RAW_S",""],["SPI_SLV_CMDA_INT_RAW_V",""],["SPI_SLV_CMDA_INT_ST_S",""],["SPI_SLV_CMDA_INT_ST_V",""],["SPI_SLV_CMD_ERR_INT_CLR_S",""],["SPI_SLV_CMD_ERR_INT_CLR_V",""],["SPI_SLV_CMD_ERR_INT_ENA_S",""],["SPI_SLV_CMD_ERR_INT_ENA_V",""],["SPI_SLV_CMD_ERR_INT_RAW_S",""],["SPI_SLV_CMD_ERR_INT_RAW_V",""],["SPI_SLV_CMD_ERR_INT_ST_S",""],["SPI_SLV_CMD_ERR_INT_ST_V",""],["SPI_SLV_DATA_BITLEN",""],["SPI_SLV_DATA_BITLEN_S",""],["SPI_SLV_DATA_BITLEN_V",""],["SPI_SLV_EN_QPI_INT_CLR_S",""],["SPI_SLV_EN_QPI_INT_CLR_V",""],["SPI_SLV_EN_QPI_INT_ENA_S",""],["SPI_SLV_EN_QPI_INT_ENA_V",""],["SPI_SLV_EN_QPI_INT_RAW_S",""],["SPI_SLV_EN_QPI_INT_RAW_V",""],["SPI_SLV_EN_QPI_INT_ST_S",""],["SPI_SLV_EN_QPI_INT_ST_V",""],["SPI_SLV_EX_QPI_INT_CLR_S",""],["SPI_SLV_EX_QPI_INT_CLR_V",""],["SPI_SLV_EX_QPI_INT_ENA_S",""],["SPI_SLV_EX_QPI_INT_ENA_V",""],["SPI_SLV_EX_QPI_INT_RAW_S",""],["SPI_SLV_EX_QPI_INT_RAW_V",""],["SPI_SLV_EX_QPI_INT_ST_S",""],["SPI_SLV_EX_QPI_INT_ST_V",""],["SPI_SLV_LAST_ADDR",""],["SPI_SLV_LAST_ADDR_S",""],["SPI_SLV_LAST_ADDR_V",""],["SPI_SLV_LAST_COMMAND",""],["SPI_SLV_LAST_COMMAND_S",""],["SPI_SLV_LAST_COMMAND_V",""],["SPI_SLV_RDBUF_BITLEN_EN_S",""],["SPI_SLV_RDBUF_BITLEN_EN_V",""],["SPI_SLV_RDDMA_BITLEN_EN_S",""],["SPI_SLV_RDDMA_BITLEN_EN_V",""],["SPI_SLV_RD_BUF_DONE_INT_CLR_S",""],["SPI_SLV_RD_BUF_DONE_INT_CLR_V",""],["SPI_SLV_RD_BUF_DONE_INT_ENA_S",""],["SPI_SLV_RD_BUF_DONE_INT_ENA_V",""],["SPI_SLV_RD_BUF_DONE_INT_RAW_S",""],["SPI_SLV_RD_BUF_DONE_INT_RAW_V",""],["SPI_SLV_RD_BUF_DONE_INT_ST_S",""],["SPI_SLV_RD_BUF_DONE_INT_ST_V",""],["SPI_SLV_RD_DMA_DONE_INT_CLR_S",""],["SPI_SLV_RD_DMA_DONE_INT_CLR_V",""],["SPI_SLV_RD_DMA_DONE_INT_ENA_S",""],["SPI_SLV_RD_DMA_DONE_INT_ENA_V",""],["SPI_SLV_RD_DMA_DONE_INT_RAW_S",""],["SPI_SLV_RD_DMA_DONE_INT_RAW_V",""],["SPI_SLV_RD_DMA_DONE_INT_ST_S",""],["SPI_SLV_RD_DMA_DONE_INT_ST_V",""],["SPI_SLV_RX_SEG_TRANS_CLR_EN_S",""],["SPI_SLV_RX_SEG_TRANS_CLR_EN_V",""],["SPI_SLV_TX_SEG_TRANS_CLR_EN_S",""],["SPI_SLV_TX_SEG_TRANS_CLR_EN_V",""],["SPI_SLV_WRBUF_BITLEN_EN_S",""],["SPI_SLV_WRBUF_BITLEN_EN_V",""],["SPI_SLV_WRDMA_BITLEN_EN_S",""],["SPI_SLV_WRDMA_BITLEN_EN_V",""],["SPI_SLV_WR_BUF_DONE_INT_CLR_S",""],["SPI_SLV_WR_BUF_DONE_INT_CLR_V",""],["SPI_SLV_WR_BUF_DONE_INT_ENA_S",""],["SPI_SLV_WR_BUF_DONE_INT_ENA_V",""],["SPI_SLV_WR_BUF_DONE_INT_RAW_S",""],["SPI_SLV_WR_BUF_DONE_INT_RAW_V",""],["SPI_SLV_WR_BUF_DONE_INT_ST_S",""],["SPI_SLV_WR_BUF_DONE_INT_ST_V",""],["SPI_SLV_WR_DMA_DONE_INT_CLR_S",""],["SPI_SLV_WR_DMA_DONE_INT_CLR_V",""],["SPI_SLV_WR_DMA_DONE_INT_ENA_S",""],["SPI_SLV_WR_DMA_DONE_INT_ENA_V",""],["SPI_SLV_WR_DMA_DONE_INT_RAW_S",""],["SPI_SLV_WR_DMA_DONE_INT_RAW_V",""],["SPI_SLV_WR_DMA_DONE_INT_ST_S",""],["SPI_SLV_WR_DMA_DONE_INT_ST_V",""],["SPI_SOFT_RESET_S",""],["SPI_SOFT_RESET_V",""],["SPI_TIMING_HCLK_ACTIVE_S",""],["SPI_TIMING_HCLK_ACTIVE_V",""],["SPI_TRANS_DONE_INT_CLR_S",""],["SPI_TRANS_DONE_INT_CLR_V",""],["SPI_TRANS_DONE_INT_ENA_S",""],["SPI_TRANS_DONE_INT_ENA_V",""],["SPI_TRANS_DONE_INT_RAW_S",""],["SPI_TRANS_DONE_INT_RAW_V",""],["SPI_TRANS_DONE_INT_ST_S",""],["SPI_TRANS_DONE_INT_ST_V",""],["SPI_TRANS_MODE_DIO",""],["SPI_TRANS_MODE_DIOQIO_ADDR",""],["SPI_TRANS_MODE_QIO",""],["SPI_TRANS_SET_CD",""],["SPI_TRANS_USE_RXDATA",""],["SPI_TRANS_USE_TXDATA",""],["SPI_TRANS_VARIABLE_ADDR",""],["SPI_TRANS_VARIABLE_CMD",""],["SPI_TRANS_VARIABLE_DUMMY",""],["SPI_TSCK_I_EDGE_S",""],["SPI_TSCK_I_EDGE_V",""],["SPI_UPDATE_S",""],["SPI_UPDATE_V",""],["SPI_USR_ADDR_BITLEN",""],["SPI_USR_ADDR_BITLEN_S",""],["SPI_USR_ADDR_BITLEN_V",""],["SPI_USR_ADDR_S",""],["SPI_USR_ADDR_V",""],["SPI_USR_ADDR_VALUE",""],["SPI_USR_ADDR_VALUE_S",""],["SPI_USR_ADDR_VALUE_V",""],["SPI_USR_COMMAND_BITLEN",""],["SPI_USR_COMMAND_BITLEN_S",""],["SPI_USR_COMMAND_BITLEN_V",""],["SPI_USR_COMMAND_S",""],["SPI_USR_COMMAND_V",""],["SPI_USR_COMMAND_VALUE",""],["SPI_USR_COMMAND_VALUE_S",""],["SPI_USR_COMMAND_VALUE_V",""],["SPI_USR_CONF_NXT_S",""],["SPI_USR_CONF_NXT_V",""],["SPI_USR_CONF_S",""],["SPI_USR_CONF_V",""],["SPI_USR_DUMMY_CYCLELEN",""],["SPI_USR_DUMMY_CYCLELEN_S",""],["SPI_USR_DUMMY_CYCLELEN_V",""],["SPI_USR_DUMMY_IDLE_S",""],["SPI_USR_DUMMY_IDLE_V",""],["SPI_USR_DUMMY_S",""],["SPI_USR_DUMMY_V",""],["SPI_USR_MISO_HIGHPART_S",""],["SPI_USR_MISO_HIGHPART_V",""],["SPI_USR_MISO_S",""],["SPI_USR_MISO_V",""],["SPI_USR_MOSI_HIGHPART_S",""],["SPI_USR_MOSI_HIGHPART_V",""],["SPI_USR_MOSI_S",""],["SPI_USR_MOSI_V",""],["SPI_USR_S",""],["SPI_USR_V",""],["SPI_WP_GPIO_NUM",""],["SPI_WP_POL_S",""],["SPI_WP_POL_V",""],["SPI_WR_BIT_ORDER_S",""],["SPI_WR_BIT_ORDER_V",""],["SSTATUS32_SD",""],["SSTATUS64_SD",""],["SSTATUS_FS",""],["SSTATUS_MXR",""],["SSTATUS_SD",""],["SSTATUS_SIE",""],["SSTATUS_SPIE",""],["SSTATUS_SPP",""],["SSTATUS_SUM",""],["SSTATUS_UIE",""],["SSTATUS_UPIE",""],["SSTATUS_UXL",""],["SSTATUS_VS",""],["SSTATUS_XS",""],["SS_DISABLE",""],["SS_ONSTACK",""],["STATUS_BUSY",""],["STATUS_CANCEL",""],["STATUS_FAIL",""],["STATUS_OK",""],["STATUS_PENDING",""],["STA_NODISK",""],["STA_NOINIT",""],["STA_PROTECT",""],["STDERR_FILENO",""],["STDIN_FILENO",""],["STDOUT_FILENO",""],["SYNCERR_IDX",""],["SYNCFOUND_FLAG_IDX",""],["SYS_DEBUG",""],["SYS_LIGHTWEIGHT_PROT",""],["SYS_STATS",""],["S_BLKSIZE",""],["S_ENFMT",""],["S_IEXEC",""],["S_IFBLK",""],["S_IFCHR",""],["S_IFDIR",""],["S_IFIFO",""],["S_IFLNK",""],["S_IFMT",""],["S_IFREG",""],["S_IFSOCK",""],["S_IREAD",""],["S_IRGRP",""],["S_IROTH",""],["S_IRUSR",""],["S_ISGID",""],["S_ISUID",""],["S_ISVTX",""],["S_IWGRP",""],["S_IWOTH",""],["S_IWRITE",""],["S_IWUSR",""],["S_IXGRP",""],["S_IXOTH",""],["S_IXUSR",""],["TAB0",""],["TAB1",""],["TAB2",""],["TAB3",""],["TABDLY",""],["TAG_BYTES",""],["TAG_WORDS",""],["TASK_EXTRA_STACK_SIZE",""],["TCIFLUSH",""],["TCIOFF",""],["TCIOFLUSH",""],["TCION",""],["TCOFLUSH",""],["TCONTROL_MPTE",""],["TCONTROL_MTE",""],["TCOOFF",""],["TCOON",""],["TCPIP_MBOX_SIZE",""],["TCPIP_THREAD_NAME",""],["TCPIP_THREAD_PRIO",""],["TCPIP_THREAD_STACKSIZE",""],["TCP_CALCULATE_EFF_SEND_MSS",""],["TCP_CWND_DEBUG",""],["TCP_DEFAULT_LISTEN_BACKLOG",""],["TCP_FR_DEBUG",""],["TCP_KEEPALIVE",""],["TCP_KEEPCNT",""],["TCP_KEEPIDLE",""],["TCP_KEEPINTVL",""],["TCP_LISTEN_BACKLOG",""],["TCP_MAXRTX",""],["TCP_MSL",""],["TCP_MSS",""],["TCP_NODELAY",""],["TCP_OOSEQ_MAX_BYTES",""],["TCP_OOSEQ_MAX_PBUFS",""],["TCP_OVERSIZE",""],["TCP_QLEN_DEBUG",""],["TCP_QUEUE_OOSEQ",""],["TCP_RCV_SCALE",""],["TCP_RST_DEBUG",""],["TCP_RTO_DEBUG",""],["TCP_SND_BUF",""],["TCP_SND_QUEUELEN",""],["TCP_STATS",""],["TCP_SYNMAXRTX",""],["TCP_TMR_INTERVAL",""],["TCP_TTL",""],["TCP_WND",""],["TCP_WND_DEBUG",""],["TCSADRAIN",""],["TCSAFLUSH",""],["TCSANOW",""],["TDATA1_EXECUTE",""],["TDATA1_LOAD",""],["TDATA1_MACHINE",""],["TDATA1_MATCH",""],["TDATA1_MATCH_S",""],["TDATA1_MATCH_V",""],["TDATA1_STORE",""],["TDATA1_USER",""],["TICKS_PER_US_ROM",""],["TIMERS_DEBUG",""],["TIMER_ABSTIME",""],["TIMER_BASE_CLK",""],["TIMER_CLK_FREQ",""],["TIMG_CLK_EN_S",""],["TIMG_CLK_EN_V",""],["TIMG_NTIMERS_DATE",""],["TIMG_NTIMERS_DATE_S",""],["TIMG_NTIMERS_DATE_V",""],["TIMG_RTC_CALI_CLK_SEL",""],["TIMG_RTC_CALI_CLK_SEL_S",""],["TIMG_RTC_CALI_CLK_SEL_V",""],["TIMG_RTC_CALI_CYCLING_DATA_VLD_S",""],["TIMG_RTC_CALI_CYCLING_DATA_VLD_V",""],["TIMG_RTC_CALI_MAX",""],["TIMG_RTC_CALI_MAX_S",""],["TIMG_RTC_CALI_MAX_V",""],["TIMG_RTC_CALI_RDY_S",""],["TIMG_RTC_CALI_RDY_V",""],["TIMG_RTC_CALI_START_CYCLING_S",""],["TIMG_RTC_CALI_START_CYCLING_V",""],["TIMG_RTC_CALI_START_S",""],["TIMG_RTC_CALI_START_V",""],["TIMG_RTC_CALI_TIMEOUT_RST_CNT",""],["TIMG_RTC_CALI_TIMEOUT_RST_CNT_S",""],["TIMG_RTC_CALI_TIMEOUT_RST_CNT_V",""],["TIMG_RTC_CALI_TIMEOUT_S",""],["TIMG_RTC_CALI_TIMEOUT_THRES",""],["TIMG_RTC_CALI_TIMEOUT_THRES_S",""],["TIMG_RTC_CALI_TIMEOUT_THRES_V",""],["TIMG_RTC_CALI_TIMEOUT_V",""],["TIMG_RTC_CALI_VALUE",""],["TIMG_RTC_CALI_VALUE_S",""],["TIMG_RTC_CALI_VALUE_V",""],["TIMG_T0_ALARM_EN_S",""],["TIMG_T0_ALARM_EN_V",""],["TIMG_T0_ALARM_HI",""],["TIMG_T0_ALARM_HI_S",""],["TIMG_T0_ALARM_HI_V",""],["TIMG_T0_ALARM_LO",""],["TIMG_T0_ALARM_LO_S",""],["TIMG_T0_ALARM_LO_V",""],["TIMG_T0_AUTORELOAD_S",""],["TIMG_T0_AUTORELOAD_V",""],["TIMG_T0_DIVCNT_RST_S",""],["TIMG_T0_DIVCNT_RST_V",""],["TIMG_T0_DIVIDER",""],["TIMG_T0_DIVIDER_S",""],["TIMG_T0_DIVIDER_V",""],["TIMG_T0_EN_S",""],["TIMG_T0_EN_V",""],["TIMG_T0_HI",""],["TIMG_T0_HI_S",""],["TIMG_T0_HI_V",""],["TIMG_T0_INCREASE_S",""],["TIMG_T0_INCREASE_V",""],["TIMG_T0_INT_CLR_S",""],["TIMG_T0_INT_CLR_V",""],["TIMG_T0_INT_ENA_S",""],["TIMG_T0_INT_ENA_V",""],["TIMG_T0_INT_RAW_S",""],["TIMG_T0_INT_RAW_V",""],["TIMG_T0_INT_ST_S",""],["TIMG_T0_INT_ST_V",""],["TIMG_T0_LO",""],["TIMG_T0_LOAD",""],["TIMG_T0_LOAD_HI",""],["TIMG_T0_LOAD_HI_S",""],["TIMG_T0_LOAD_HI_V",""],["TIMG_T0_LOAD_LO",""],["TIMG_T0_LOAD_LO_S",""],["TIMG_T0_LOAD_LO_V",""],["TIMG_T0_LOAD_S",""],["TIMG_T0_LOAD_V",""],["TIMG_T0_LO_S",""],["TIMG_T0_LO_V",""],["TIMG_T0_UPDATE_S",""],["TIMG_T0_UPDATE_V",""],["TIMG_T0_USE_XTAL_S",""],["TIMG_T0_USE_XTAL_V",""],["TIMG_TIMER_CLK_IS_ACTIVE_S",""],["TIMG_TIMER_CLK_IS_ACTIVE_V",""],["TIMG_WDT_APPCPU_RESET_EN_S",""],["TIMG_WDT_APPCPU_RESET_EN_V",""],["TIMG_WDT_CLK_IS_ACTIVE_S",""],["TIMG_WDT_CLK_IS_ACTIVE_V",""],["TIMG_WDT_CLK_PRESCALE",""],["TIMG_WDT_CLK_PRESCALE_S",""],["TIMG_WDT_CLK_PRESCALE_V",""],["TIMG_WDT_CONF_UPDATE_EN_S",""],["TIMG_WDT_CONF_UPDATE_EN_V",""],["TIMG_WDT_CPU_RESET_LENGTH",""],["TIMG_WDT_CPU_RESET_LENGTH_S",""],["TIMG_WDT_CPU_RESET_LENGTH_V",""],["TIMG_WDT_DIVCNT_RST_S",""],["TIMG_WDT_DIVCNT_RST_V",""],["TIMG_WDT_EN_S",""],["TIMG_WDT_EN_V",""],["TIMG_WDT_FEED",""],["TIMG_WDT_FEED_S",""],["TIMG_WDT_FEED_V",""],["TIMG_WDT_FLASHBOOT_MOD_EN_S",""],["TIMG_WDT_FLASHBOOT_MOD_EN_V",""],["TIMG_WDT_INT_CLR_S",""],["TIMG_WDT_INT_CLR_V",""],["TIMG_WDT_INT_ENA_S",""],["TIMG_WDT_INT_ENA_V",""],["TIMG_WDT_INT_RAW_S",""],["TIMG_WDT_INT_RAW_V",""],["TIMG_WDT_INT_ST_S",""],["TIMG_WDT_INT_ST_V",""],["TIMG_WDT_PROCPU_RESET_EN_S",""],["TIMG_WDT_PROCPU_RESET_EN_V",""],["TIMG_WDT_RESET_LENGTH_100_NS",""],["TIMG_WDT_RESET_LENGTH_1600_NS",""],["TIMG_WDT_RESET_LENGTH_200_NS",""],["TIMG_WDT_RESET_LENGTH_300_NS",""],["TIMG_WDT_RESET_LENGTH_3200_NS",""],["TIMG_WDT_RESET_LENGTH_400_NS",""],["TIMG_WDT_RESET_LENGTH_500_NS",""],["TIMG_WDT_RESET_LENGTH_800_NS",""],["TIMG_WDT_STG0",""],["TIMG_WDT_STG0_HOLD",""],["TIMG_WDT_STG0_HOLD_S",""],["TIMG_WDT_STG0_HOLD_V",""],["TIMG_WDT_STG0_S",""],["TIMG_WDT_STG0_V",""],["TIMG_WDT_STG1",""],["TIMG_WDT_STG1_HOLD",""],["TIMG_WDT_STG1_HOLD_S",""],["TIMG_WDT_STG1_HOLD_V",""],["TIMG_WDT_STG1_S",""],["TIMG_WDT_STG1_V",""],["TIMG_WDT_STG2",""],["TIMG_WDT_STG2_HOLD",""],["TIMG_WDT_STG2_HOLD_S",""],["TIMG_WDT_STG2_HOLD_V",""],["TIMG_WDT_STG2_S",""],["TIMG_WDT_STG2_V",""],["TIMG_WDT_STG3",""],["TIMG_WDT_STG3_HOLD",""],["TIMG_WDT_STG3_HOLD_S",""],["TIMG_WDT_STG3_HOLD_V",""],["TIMG_WDT_STG3_S",""],["TIMG_WDT_STG3_V",""],["TIMG_WDT_STG_SEL_INT",""],["TIMG_WDT_STG_SEL_OFF",""],["TIMG_WDT_STG_SEL_RESET_CPU",""],["TIMG_WDT_STG_SEL_RESET_SYSTEM",""],["TIMG_WDT_SYS_RESET_LENGTH",""],["TIMG_WDT_SYS_RESET_LENGTH_S",""],["TIMG_WDT_SYS_RESET_LENGTH_V",""],["TIMG_WDT_USE_XTAL_S",""],["TIMG_WDT_USE_XTAL_V",""],["TIMG_WDT_WKEY",""],["TIMG_WDT_WKEY_S",""],["TIMG_WDT_WKEY_V",""],["TIMG_WDT_WKEY_VALUE",""],["TMP_MAX",""],["TOSTOP",""],["TOUCH_DEBOUNCE_CNT_MAX",""],["TOUCH_JITTER_STEP_MAX",""],["TOUCH_NOISE_THR_MAX",""],["TOUCH_PAD_BIT_MASK_ALL",""],["TOUCH_PAD_BIT_MASK_MAX",""],["TOUCH_PAD_MEASURE_CYCLE_DEFAULT",""],["TOUCH_PAD_SLEEP_CYCLE_DEFAULT",""],["TOUCH_PROXIMITY_MEAS_NUM_MAX",""],["TPLFID_FUNCTION_SDIO",""],["TWAI_ALERT_ABOVE_ERR_WARN",""],["TWAI_ALERT_ALL",""],["TWAI_ALERT_AND_LOG",""],["TWAI_ALERT_ARB_LOST",""],["TWAI_ALERT_BELOW_ERR_WARN",""],["TWAI_ALERT_BUS_ERROR",""],["TWAI_ALERT_BUS_OFF",""],["TWAI_ALERT_BUS_RECOVERED",""],["TWAI_ALERT_ERR_ACTIVE",""],["TWAI_ALERT_ERR_PASS",""],["TWAI_ALERT_NONE",""],["TWAI_ALERT_PERIPH_RESET",""],["TWAI_ALERT_RECOVERY_IN_PROGRESS",""],["TWAI_ALERT_RX_FIFO_OVERRUN",""],["TWAI_ALERT_RX_QUEUE_FULL",""],["TWAI_ALERT_TX_FAILED",""],["TWAI_ALERT_TX_IDLE",""],["TWAI_ALERT_TX_RETRIED",""],["TWAI_ALERT_TX_SUCCESS",""],["TWAI_BRP_MAX",""],["TWAI_BRP_MIN",""],["TWAI_BUS_OFF_ON_IDX",""],["TWAI_CLKOUT_IDX",""],["TWAI_ERR_PASS_THRESH",""],["TWAI_EXTD_ID_MASK",""],["TWAI_FRAME_EXTD_ID_LEN_BYTES",""],["TWAI_FRAME_MAX_DLC",""],["TWAI_FRAME_STD_ID_LEN_BYTES",""],["TWAI_MSG_FLAG_DLC_NON_COMP",""],["TWAI_MSG_FLAG_EXTD",""],["TWAI_MSG_FLAG_NONE",""],["TWAI_MSG_FLAG_RTR",""],["TWAI_MSG_FLAG_SELF",""],["TWAI_MSG_FLAG_SS",""],["TWAI_RX_IDX",""],["TWAI_STD_ID_MASK",""],["TWAI_TX_IDX",""],["TWO_UNIVERSAL_MAC_ADDR",""],["U0CTS_IN_IDX",""],["U0DSR_IN_IDX",""],["U0DTR_OUT_IDX",""],["U0RTS_OUT_IDX",""],["U0RXD_GPIO_NUM",""],["U0RXD_IN_IDX",""],["U0TXD_GPIO_NUM",""],["U0TXD_OUT_IDX",""],["U16_F",""],["U1CTS_IN_IDX",""],["U1DSR_IN_IDX",""],["U1DTR_OUT_IDX",""],["U1RTS_OUT_IDX",""],["U1RXD_IN_IDX",""],["U1TXD_OUT_IDX",""],["U32_F",""],["UART_BITRATE_MAX",""],["UART_CLK_FREQ",""],["UART_CLK_FREQ_ROM",""],["UART_FIFO_LEN",""],["UART_NUM_0",""],["UART_NUM_1",""],["UART_NUM_MAX",""],["UART_PIN_NO_CHANGE",""],["UDP_DEBUG",""],["UDP_STATS",""],["UDP_TTL",""],["UNIVERSAL_MAC_ADDR_NUM",""],["UPDATE_RX_IDX",""],["USB_EXTPHY_OEN_IDX",""],["USB_EXTPHY_RCV_IDX",""],["USB_EXTPHY_SPEED_IDX",""],["USB_EXTPHY_SUSPND_IDX",""],["USB_EXTPHY_VMO_IDX",""],["USB_EXTPHY_VM_IDX",""],["USB_EXTPHY_VPO_IDX",""],["USB_EXTPHY_VP_IDX",""],["USTATUS_UIE",""],["USTATUS_UPIE",""],["VEOF",""],["VEOL",""],["VERASE",""],["VINTR",""],["VKILL",""],["VMIN",""],["VQUIT",""],["VSTART",""],["VSTOP",""],["VSUSP",""],["VT0",""],["VT1",""],["VTDLY",""],["VTIME",""],["V_DIG_MID_MUL10000",""],["V_RTC_MID_MUL10000",""],["WDT_CLK_FREQ",""],["WIFI_AMPDU_RX_ENABLED",""],["WIFI_AMPDU_TX_ENABLED",""],["WIFI_AMSDU_TX_ENABLED",""],["WIFI_CACHE_TX_BUFFER_NUM",""],["WIFI_CSI_ENABLED",""],["WIFI_DEFAULT_RX_BA_WIN",""],["WIFI_DYNAMIC_TX_BUFFER_NUM",""],["WIFI_EVENT_MASK_ALL",""],["WIFI_EVENT_MASK_NONE",""],["WIFI_INIT_CONFIG_MAGIC",""],["WIFI_MGMT_SBUF_NUM",""],["WIFI_NANO_FORMAT_ENABLED",""],["WIFI_NVS_ENABLED",""],["WIFI_OFFCHAN_TX_CANCEL",""],["WIFI_OFFCHAN_TX_REQ",""],["WIFI_PROMIS_CTRL_FILTER_MASK_ACK",""],["WIFI_PROMIS_CTRL_FILTER_MASK_ALL",""],["WIFI_PROMIS_CTRL_FILTER_MASK_BA",""],["WIFI_PROMIS_CTRL_FILTER_MASK_BAR",""],["WIFI_PROMIS_CTRL_FILTER_MASK_CFEND",""],["WIFI_PROMIS_CTRL_FILTER_MASK_CFENDACK",""],["WIFI_PROMIS_CTRL_FILTER_MASK_CTS",""],["WIFI_PROMIS_CTRL_FILTER_MASK_PSPOLL",""],["WIFI_PROMIS_CTRL_FILTER_MASK_RTS",""],["WIFI_PROMIS_CTRL_FILTER_MASK_WRAPPER",""],["WIFI_PROMIS_FILTER_MASK_ALL",""],["WIFI_PROMIS_FILTER_MASK_CTRL",""],["WIFI_PROMIS_FILTER_MASK_DATA",""],["WIFI_PROMIS_FILTER_MASK_DATA_AMPDU",""],["WIFI_PROMIS_FILTER_MASK_DATA_MPDU",""],["WIFI_PROMIS_FILTER_MASK_FCSFAIL",""],["WIFI_PROMIS_FILTER_MASK_MGMT",""],["WIFI_PROMIS_FILTER_MASK_MISC",""],["WIFI_PROTOCOL_11B",""],["WIFI_PROTOCOL_11G",""],["WIFI_PROTOCOL_11N",""],["WIFI_PROTOCOL_LR",""],["WIFI_ROC_CANCEL",""],["WIFI_ROC_REQ",""],["WIFI_SOFTAP_BEACON_MAX_LEN",""],["WIFI_STATIC_TX_BUFFER_NUM",""],["WIFI_STATIS_ALL",""],["WIFI_STATIS_BUFFER",""],["WIFI_STATIS_DIAG",""],["WIFI_STATIS_HW",""],["WIFI_STATIS_PS",""],["WIFI_STATIS_RXTX",""],["WIFI_STA_DISCONNECTED_PM_ENABLED",""],["WIFI_TASK_CORE_ID",""],["WIFI_VENDOR_IE_ELEMENT_ID",""],["WINT_MIN",""],["WL_INVALID_HANDLE",""],["W_OK",""],["X16_F",""],["X32_F",""],["X8_F",""],["XCASE",""],["XTAL_CLK_FREQ",""],["XTAL_FREQ_EST_CYCLES",""],["X_OK",""],["_ATEXIT_DYNAMIC_ALLOC",""],["_ATEXIT_SIZE",""],["_ATFILE_SOURCE",""],["_B",""],["_BIG_ENDIAN",""],["_BYTE_ORDER",""],["_C",""],["_CLOCKS_PER_SEC_",""],["_DEFAULT_SOURCE",""],["_FAPPEND",""],["_FASYNC",""],["_FCREAT",""],["_FDEFER",""],["_FDIRECT",""],["_FDIRECTORY",""],["_FEXCL",""],["_FEXECSRCH",""],["_FEXLOCK",""],["_FMARK",""],["_FNBIO",""],["_FNDELAY",""],["_FNOCTTY",""],["_FNOFOLLOW",""],["_FNOINHERIT",""],["_FNONBLOCK",""],["_FOPEN",""],["_FREAD",""],["_FSEEK_OPTIMIZATION",""],["_FSHLOCK",""],["_FSYNC",""],["_FTRUNC",""],["_FVWRITE_IN_STREAMIO",""],["_FWRITE",""],["_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL",""],["_HAVE_LONG_DOUBLE",""],["_ICONV_ENABLED",""],["_IFBLK",""],["_IFCHR",""],["_IFDIR",""],["_IFIFO",""],["_IFLNK",""],["_IFMT",""],["_IFREG",""],["_IFSOCK",""],["_IOFBF",""],["_IOLBF",""],["_IONBF",""],["_L",""],["_LIBC_LIMITS_H_",""],["_LITTLE_ENDIAN",""],["_MB_LEN_MAX",""],["_N",""],["_NEWLIB_VERSION",""],["_NEWLIB_VERSION_H__",""],["_NULL",""],["_P",""],["_PC_2_SYMLINKS",""],["_PC_ALLOC_SIZE_MIN",""],["_PC_ASYNC_IO",""],["_PC_CHOWN_RESTRICTED",""],["_PC_FILESIZEBITS",""],["_PC_LINK_MAX",""],["_PC_MAX_CANON",""],["_PC_MAX_INPUT",""],["_PC_NAME_MAX",""],["_PC_NO_TRUNC",""],["_PC_PATH_MAX",""],["_PC_PIPE_BUF",""],["_PC_PRIO_IO",""],["_PC_REC_INCR_XFER_SIZE",""],["_PC_REC_MAX_XFER_SIZE",""],["_PC_REC_MIN_XFER_SIZE",""],["_PC_REC_XFER_ALIGN",""],["_PC_SYMLINK_MAX",""],["_PC_SYNC_IO",""],["_PC_TIMESTAMP_RESOLUTION",""],["_PC_VDISABLE",""],["_PDP_ENDIAN",""],["_POSIX2_RE_DUP_MAX",""],["_POSIX_CLOCK_SELECTION",""],["_POSIX_C_SOURCE",""],["_POSIX_MONOTONIC_CLOCK",""],["_POSIX_SOURCE",""],["_POSIX_THREADS",""],["_POSIX_TIMEOUTS",""],["_POSIX_TIMERS",""],["_QUAD_HIGHWORD",""],["_QUAD_LOWWORD",""],["_RAND48_ADD",""],["_RAND48_MULT_0",""],["_RAND48_MULT_1",""],["_RAND48_MULT_2",""],["_RAND48_SEED_0",""],["_RAND48_SEED_1",""],["_RAND48_SEED_2",""],["_REENT_ASCTIME_SIZE",""],["_REENT_CHECK_VERIFY",""],["_REENT_EMERGENCY_SIZE",""],["_REENT_SIGNAL_SIZE",""],["_RETARGETABLE_LOCKING",""],["_S",""],["_SC_2_CHAR_TERM",""],["_SC_2_C_BIND",""],["_SC_2_C_DEV",""],["_SC_2_FORT_DEV",""],["_SC_2_FORT_RUN",""],["_SC_2_LOCALEDEF",""],["_SC_2_PBS",""],["_SC_2_PBS_ACCOUNTING",""],["_SC_2_PBS_CHECKPOINT",""],["_SC_2_PBS_LOCATE",""],["_SC_2_PBS_MESSAGE",""],["_SC_2_PBS_TRACK",""],["_SC_2_SW_DEV",""],["_SC_2_UPE",""],["_SC_2_VERSION",""],["_SC_ADVISORY_INFO",""],["_SC_AIO_LISTIO_MAX",""],["_SC_AIO_MAX",""],["_SC_AIO_PRIO_DELTA_MAX",""],["_SC_ARG_MAX",""],["_SC_ASYNCHRONOUS_IO",""],["_SC_ATEXIT_MAX",""],["_SC_AVPHYS_PAGES",""],["_SC_BARRIERS",""],["_SC_BC_BASE_MAX",""],["_SC_BC_DIM_MAX",""],["_SC_BC_SCALE_MAX",""],["_SC_BC_STRING_MAX",""],["_SC_CHILD_MAX",""],["_SC_CLK_TCK",""],["_SC_CLOCK_SELECTION",""],["_SC_COLL_WEIGHTS_MAX",""],["_SC_CPUTIME",""],["_SC_DELAYTIMER_MAX",""],["_SC_EXPR_NEST_MAX",""],["_SC_FSYNC",""],["_SC_GETGR_R_SIZE_MAX",""],["_SC_GETPW_R_SIZE_MAX",""],["_SC_HOST_NAME_MAX",""],["_SC_IOV_MAX",""],["_SC_IPV6",""],["_SC_JOB_CONTROL",""],["_SC_LEVEL1_DCACHE_ASSOC",""],["_SC_LEVEL1_DCACHE_LINESIZE",""],["_SC_LEVEL1_DCACHE_SIZE",""],["_SC_LEVEL1_ICACHE_ASSOC",""],["_SC_LEVEL1_ICACHE_LINESIZE",""],["_SC_LEVEL1_ICACHE_SIZE",""],["_SC_LEVEL2_CACHE_ASSOC",""],["_SC_LEVEL2_CACHE_LINESIZE",""],["_SC_LEVEL2_CACHE_SIZE",""],["_SC_LEVEL3_CACHE_ASSOC",""],["_SC_LEVEL3_CACHE_LINESIZE",""],["_SC_LEVEL3_CACHE_SIZE",""],["_SC_LEVEL4_CACHE_ASSOC",""],["_SC_LEVEL4_CACHE_LINESIZE",""],["_SC_LEVEL4_CACHE_SIZE",""],["_SC_LINE_MAX",""],["_SC_LOGIN_NAME_MAX",""],["_SC_MAPPED_FILES",""],["_SC_MEMLOCK",""],["_SC_MEMLOCK_RANGE",""],["_SC_MEMORY_PROTECTION",""],["_SC_MESSAGE_PASSING",""],["_SC_MONOTONIC_CLOCK",""],["_SC_MQ_OPEN_MAX",""],["_SC_MQ_PRIO_MAX",""],["_SC_NGROUPS_MAX",""],["_SC_NPROCESSORS_CONF",""],["_SC_NPROCESSORS_ONLN",""],["_SC_OPEN_MAX",""],["_SC_PAGESIZE",""],["_SC_PAGE_SIZE",""],["_SC_PHYS_PAGES",""],["_SC_POSIX_26_VERSION",""],["_SC_PRIORITIZED_IO",""],["_SC_PRIORITY_SCHEDULING",""],["_SC_RAW_SOCKETS",""],["_SC_READER_WRITER_LOCKS",""],["_SC_REALTIME_SIGNALS",""],["_SC_REGEXP",""],["_SC_RE_DUP_MAX",""],["_SC_RTSIG_MAX",""],["_SC_SAVED_IDS",""],["_SC_SEMAPHORES",""],["_SC_SEM_NSEMS_MAX",""],["_SC_SEM_VALUE_MAX",""],["_SC_SHARED_MEMORY_OBJECTS",""],["_SC_SHELL",""],["_SC_SIGQUEUE_MAX",""],["_SC_SPAWN",""],["_SC_SPIN_LOCKS",""],["_SC_SPORADIC_SERVER",""],["_SC_SS_REPL_MAX",""],["_SC_STREAM_MAX",""],["_SC_SYMLOOP_MAX",""],["_SC_SYNCHRONIZED_IO",""],["_SC_THREADS",""],["_SC_THREAD_ATTR_STACKADDR",""],["_SC_THREAD_ATTR_STACKSIZE",""],["_SC_THREAD_CPUTIME",""],["_SC_THREAD_DESTRUCTOR_ITERATIONS",""],["_SC_THREAD_KEYS_MAX",""],["_SC_THREAD_PRIORITY_SCHEDULING",""],["_SC_THREAD_PRIO_CEILING",""],["_SC_THREAD_PRIO_INHERIT",""],["_SC_THREAD_PRIO_PROTECT",""],["_SC_THREAD_PROCESS_SHARED",""],["_SC_THREAD_ROBUST_PRIO_INHERIT",""],["_SC_THREAD_ROBUST_PRIO_PROTECT",""],["_SC_THREAD_SAFE_FUNCTIONS",""],["_SC_THREAD_SPORADIC_SERVER",""],["_SC_THREAD_STACK_MIN",""],["_SC_THREAD_THREADS_MAX",""],["_SC_TIMEOUTS",""],["_SC_TIMERS",""],["_SC_TIMER_MAX",""],["_SC_TRACE",""],["_SC_TRACE_EVENT_FILTER",""],["_SC_TRACE_EVENT_NAME_MAX",""],["_SC_TRACE_INHERIT",""],["_SC_TRACE_LOG",""],["_SC_TRACE_NAME_MAX",""],["_SC_TRACE_SYS_MAX",""],["_SC_TRACE_USER_EVENT_MAX",""],["_SC_TTY_NAME_MAX",""],["_SC_TYPED_MEMORY_OBJECTS",""],["_SC_TZNAME_MAX",""],["_SC_V6_ILP32_OFF32",""],["_SC_V6_ILP32_OFFBIG",""],["_SC_V6_LP64_OFF64",""],["_SC_V6_LPBIG_OFFBIG",""],["_SC_V7_ILP32_OFF32",""],["_SC_V7_ILP32_OFFBIG",""],["_SC_V7_LP64_OFF64",""],["_SC_V7_LPBIG_OFFBIG",""],["_SC_VERSION",""],["_SC_XBS5_ILP32_OFF32",""],["_SC_XBS5_ILP32_OFFBIG",""],["_SC_XBS5_LP64_OFF64",""],["_SC_XBS5_LPBIG_OFFBIG",""],["_SC_XOPEN_CRYPT",""],["_SC_XOPEN_ENH_I18N",""],["_SC_XOPEN_LEGACY",""],["_SC_XOPEN_REALTIME",""],["_SC_XOPEN_REALTIME_THREADS",""],["_SC_XOPEN_SHM",""],["_SC_XOPEN_STREAMS",""],["_SC_XOPEN_UNIX",""],["_SC_XOPEN_UUCP",""],["_SC_XOPEN_VERSION",""],["_U",""],["_UNBUF_STREAM_OPT",""],["_UNIX98_THREAD_MUTEX_ATTRIBUTES",""],["_WANT_IO_C99_FORMATS",""],["_WANT_IO_LONG_LONG",""],["_WANT_IO_POS_ARGS",""],["_WANT_REENT_SMALL",""],["_WANT_USE_LONG_TIME_T",""],["_X",""],["__ATFILE_VISIBLE",""],["__BIT_TYPES_DEFINED__",""],["__BSD_VISIBLE",""],["__BUFSIZ__",""],["__CC_SUPPORTS_DYNAMIC_ARRAY_INIT",""],["__CC_SUPPORTS_INLINE",""],["__CC_SUPPORTS_VARADIC_XXX",""],["__CC_SUPPORTS_WARNING",""],["__CC_SUPPORTS___FUNC__",""],["__CC_SUPPORTS___INLINE",""],["__CC_SUPPORTS___INLINE__",""],["__ELASTERROR",""],["__FAST16",""],["__FAST64",""],["__FAST8",""],["__GNUCLIKE_ASM",""],["__GNUCLIKE_BUILTIN_CONSTANT_P",""],["__GNUCLIKE_BUILTIN_MEMCPY",""],["__GNUCLIKE_BUILTIN_NEXT_ARG",""],["__GNUCLIKE_BUILTIN_STDARG",""],["__GNUCLIKE_BUILTIN_VAALIST",""],["__GNUCLIKE_BUILTIN_VARARGS",""],["__GNUCLIKE_CTOR_SECTION_HANDLING",""],["__GNUCLIKE___OFFSETOF",""],["__GNUCLIKE___SECTION",""],["__GNUCLIKE___TYPEOF",""],["__GNUC_VA_LIST",""],["__GNUC_VA_LIST_COMPATIBILITY",""],["__GNU_VISIBLE",""],["__INT16",""],["__INT64",""],["__INT8",""],["__ISO_C_VISIBLE",""],["__LARGEFILE_VISIBLE",""],["__LEAST16",""],["__LEAST64",""],["__LEAST8",""],["__MISC_VISIBLE",""],["__NEWLIB_H__",""],["__NEWLIB_MINOR__",""],["__NEWLIB_PATCHLEVEL__",""],["__NEWLIB__",""],["__OBSOLETE_MATH",""],["__OBSOLETE_MATH_DEFAULT",""],["__POSIX_VISIBLE",""],["__RAND_MAX",""],["__SAPP",""],["__SEOF",""],["__SERR",""],["__SL64",""],["__SLBF",""],["__SMBF",""],["__SNBF",""],["__SNLK",""],["__SNPT",""],["__SOFF",""],["__SOPT",""],["__SORD",""],["__SRD",""],["__SRW",""],["__SSP_FORTIFY_LEVEL",""],["__SSTR",""],["__SVID_VISIBLE",""],["__SWID",""],["__SWR",""],["__XSI_VISIBLE",""],["___int16_t_defined",""],["___int32_t_defined",""],["___int64_t_defined",""],["___int8_t_defined",""],["___int_least16_t_defined",""],["___int_least32_t_defined",""],["___int_least64_t_defined",""],["___int_least8_t_defined",""],["__bool_true_false_are_defined",""],["__error_t_defined",""],["__have_long32",""],["__have_longlong64",""],["__int16_t_defined",""],["__int20",""],["__int20__",""],["__int32_t_defined",""],["__int64_t_defined",""],["__int8_t_defined",""],["__int_fast16_t_defined",""],["__int_fast32_t_defined",""],["__int_fast64_t_defined",""],["__int_fast8_t_defined",""],["__int_least16_t_defined",""],["__int_least32_t_defined",""],["__int_least64_t_defined",""],["__int_least8_t_defined",""],["adc1_channel_t_ADC1_CHANNEL_0","< ADC1 channel 0 is GPIO0"],["adc1_channel_t_ADC1_CHANNEL_1","< ADC1 channel 1 is GPIO1"],["adc1_channel_t_ADC1_CHANNEL_2","< ADC1 channel 2 is GPIO2"],["adc1_channel_t_ADC1_CHANNEL_3","< ADC1 channel 3 is GPIO3"],["adc1_channel_t_ADC1_CHANNEL_4","< ADC1 channel 4 is GPIO4"],["adc1_channel_t_ADC1_CHANNEL_MAX",""],["adc2_channel_t_ADC2_CHANNEL_0","< ADC2 channel 0 is GPIO5"],["adc2_channel_t_ADC2_CHANNEL_MAX",""],["adc_arbiter_mode_t_ADC_ARB_MODE_FIX","<Fixed priority switch controller mode."],["adc_arbiter_mode_t_ADC_ARB_MODE_LOOP","<Loop priority switch controller mode. Each controller has the same priority, and the arbiter will switch to the next controller after the measurement is completed."],["adc_arbiter_mode_t_ADC_ARB_MODE_SHIELD","<Force shield arbiter, Select the highest priority controller to work."],["adc_atten_t_ADC_ATTEN_DB_0","<No input attenumation, ADC can measure up to approx. 800 mV."],["adc_atten_t_ADC_ATTEN_DB_11","<The input voltage of ADC will be attenuated, extending the range of measurement to up to  approx. 2600 mV."],["adc_atten_t_ADC_ATTEN_DB_2_5","<The input voltage of ADC will be attenuated, extending the range of measurement to up to approx. 1100 mV."],["adc_atten_t_ADC_ATTEN_DB_6","<The input voltage of ADC will be attenuated, extending the range of measurement to up to  approx. 1350 mV."],["adc_atten_t_ADC_ATTEN_MAX",""],["adc_bits_width_t_ADC_WIDTH_BIT_12","< ADC capture width is 12Bit."],["adc_bits_width_t_ADC_WIDTH_MAX",""],["adc_channel_t_ADC_CHANNEL_0","< ADC channel"],["adc_channel_t_ADC_CHANNEL_1","< ADC channel"],["adc_channel_t_ADC_CHANNEL_2","< ADC channel"],["adc_channel_t_ADC_CHANNEL_3","< ADC channel"],["adc_channel_t_ADC_CHANNEL_4","< ADC channel"],["adc_channel_t_ADC_CHANNEL_5","< ADC channel"],["adc_channel_t_ADC_CHANNEL_6","< ADC channel"],["adc_channel_t_ADC_CHANNEL_7","< ADC channel"],["adc_channel_t_ADC_CHANNEL_8","< ADC channel"],["adc_channel_t_ADC_CHANNEL_9","< ADC channel"],["adc_channel_t_ADC_CHANNEL_MAX",""],["adc_digi_convert_mode_t_ADC_CONV_ALTER_UNIT","< SAR ADC 1 and 2 alternative mode."],["adc_digi_convert_mode_t_ADC_CONV_BOTH_UNIT","< SAR ADC 1 and 2."],["adc_digi_convert_mode_t_ADC_CONV_SINGLE_UNIT_1","< SAR ADC 1."],["adc_digi_convert_mode_t_ADC_CONV_SINGLE_UNIT_2","< SAR ADC 2."],["adc_digi_convert_mode_t_ADC_CONV_UNIT_MAX",""],["adc_digi_filter_idx_t_ADC_DIGI_FILTER_IDX0","<The filter index 0. For ESP32-S2, It can only be used to filter all enabled channels of ADC1 unit at the same time."],["adc_digi_filter_idx_t_ADC_DIGI_FILTER_IDX1","<The filter index 1. For ESP32-S2, It can only be used to filter all enabled channels of ADC2 unit at the same time."],["adc_digi_filter_idx_t_ADC_DIGI_FILTER_IDX_MAX",""],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_DIS","< Disable filter"],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_16","<The filter mode is first-order IIR filter. The coefficient is 16."],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_2","<The filter mode is first-order IIR filter. The coefficient is 2."],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_4","<The filter mode is first-order IIR filter. The coefficient is 4."],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_64","<The filter mode is first-order IIR filter. The coefficient is 64."],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_8","<The filter mode is first-order IIR filter. The coefficient is 8."],["adc_digi_filter_mode_t_ADC_DIGI_FILTER_IIR_MAX",""],["adc_digi_monitor_idx_t_ADC_DIGI_MONITOR_IDX0","<The monitor index 0. For ESP32-S2, It can only be used to monitor all enabled channels of ADC1 unit at the same time."],["adc_digi_monitor_idx_t_ADC_DIGI_MONITOR_IDX1","<The monitor index 1. For ESP32-S2, It can only be used to monitor all enabled channels of ADC2 unit at the same time."],["adc_digi_monitor_idx_t_ADC_DIGI_MONITOR_IDX_MAX",""],["adc_digi_monitor_mode_t_ADC_DIGI_MONITOR_DIS","<Disable monitor."],["adc_digi_monitor_mode_t_ADC_DIGI_MONITOR_EN","<If ADC_OUT <  threshold, Generates monitor interrupt. */"],["adc_digi_monitor_mode_t_ADC_DIGI_MONITOR_MAX",""],["adc_digi_output_format_t_ADC_DIGI_FORMAT_11BIT","<ADC to DMA data format, [15]-adc unit, [14:11]-channel, [10: 0]-11 bits ADC data (`adc_digi_output_data_t`). Note: For multi or alter convert mode."],["adc_digi_output_format_t_ADC_DIGI_FORMAT_12BIT","<ADC to DMA data format,                [15:12]-channel, [11: 0]-12 bits ADC data (`adc_digi_output_data_t`). Note: For single convert mode."],["adc_digi_output_format_t_ADC_DIGI_FORMAT_MAX",""],["adc_i2s_encode_t_ADC_ENCODE_11BIT","< ADC to DMA data format, [15]-unit, [14:11]-channel [10:0]-11 bits ADC data"],["adc_i2s_encode_t_ADC_ENCODE_12BIT","< ADC to DMA data format,          , [15:12]-channel [11:0]-12 bits ADC data"],["adc_i2s_encode_t_ADC_ENCODE_MAX",""],["adc_i2s_source_t_ADC_I2S_DATA_SRC_ADC","< I2S data from ADC"],["adc_i2s_source_t_ADC_I2S_DATA_SRC_IO_SIG","< I2S data from GPIO matrix signal"],["adc_i2s_source_t_ADC_I2S_DATA_SRC_MAX",""],["adc_unit_t_ADC_UNIT_1","< SAR ADC 1."],["adc_unit_t_ADC_UNIT_2","< SAR ADC 2."],["adc_unit_t_ADC_UNIT_ALTER","< SAR ADC 1 and 2 alternative mode."],["adc_unit_t_ADC_UNIT_BOTH","< SAR ADC 1 and 2."],["adc_unit_t_ADC_UNIT_MAX",""],["configAPPLICATION_ALLOCATED_HEAP",""],["configASSERT_2",""],["configASSERT_DEFINED",""],["configBENCHMARK",""],["configCHECK_FOR_STACK_OVERFLOW",""],["configCHECK_MUTEX_GIVEN_BY_OWNER",""],["configENABLE_BACKWARD_COMPATIBILITY",""],["configENABLE_FPU",""],["configENABLE_MPU",""],["configENABLE_TASK_SNAPSHOT",""],["configENABLE_TRUSTZONE",""],["configESP32_PER_TASK_DATA",""],["configEXPECTED_IDLE_TIME_BEFORE_SLEEP",""],["configGENERATE_RUN_TIME_STATS",""],["configIDLE_SHOULD_YIELD",""],["configIDLE_TASK_STACK_SIZE",""],["configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS",""],["configINCLUDE_FREERTOS_TASK_C_ADDITIONS_H",""],["configINITIAL_TICK_COUNT",""],["configISR_STACK_SIZE",""],["configKERNEL_INTERRUPT_PRIORITY",""],["configMAX_CO_ROUTINE_PRIORITIES",""],["configMAX_PRIORITIES",""],["configMAX_SYSCALL_INTERRUPT_PRIORITY",""],["configMAX_TASK_NAME_LEN",""],["configMINIMAL_STACK_SIZE",""],["configNUM_THREAD_LOCAL_STORAGE_POINTERS",""],["configPRECONDITION_DEFINED",""],["configQUEUE_REGISTRY_SIZE",""],["configRECORD_STACK_HIGH_ADDRESS",""],["configRUN_FREERTOS_SECURE_ONLY",""],["configSTACK_OVERHEAD_APPTRACE",""],["configSTACK_OVERHEAD_CHECKER",""],["configSTACK_OVERHEAD_OPTIMIZATION",""],["configSTACK_OVERHEAD_TOTAL",""],["configSUPPORT_DYNAMIC_ALLOCATION",""],["configSUPPORT_STATIC_ALLOCATION",""],["configTHREAD_LOCAL_STORAGE_DELETE_CALLBACKS",""],["configTICK_RATE_HZ",""],["configTIMER_QUEUE_LENGTH",""],["configTIMER_TASK_PRIORITY",""],["configTIMER_TASK_STACK_DEPTH",""],["configUSE_16_BIT_TICKS",""],["configUSE_ALTERNATIVE_API",""],["configUSE_APPLICATION_TASK_TAG",""],["configUSE_COUNTING_SEMAPHORES",""],["configUSE_CO_ROUTINES",""],["configUSE_DAEMON_TASK_STARTUP_HOOK",""],["configUSE_IDLE_HOOK",""],["configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES",""],["configUSE_MALLOC_FAILED_HOOK",""],["configUSE_MUTEX",""],["configUSE_MUTEXES",""],["configUSE_NEWLIB_REENTRANT",""],["configUSE_PORT_OPTIMISED_TASK_SELECTION",""],["configUSE_POSIX_ERRNO",""],["configUSE_PREEMPTION",""],["configUSE_QUEUE_SETS",""],["configUSE_RECURSIVE_MUTEXES",""],["configUSE_STATS_FORMATTING_FUNCTIONS",""],["configUSE_TASK_FPU_SUPPORT",""],["configUSE_TASK_NOTIFICATIONS",""],["configUSE_TICK_HOOK",""],["configUSE_TIMERS",""],["configUSE_TIME_SLICING",""],["configUSE_TRACE_FACILITY",""],["configUSE_TRACE_FACILITY_2",""],["dhcps_offer_option_OFFER_DNS",""],["dhcps_offer_option_OFFER_END",""],["dhcps_offer_option_OFFER_ROUTER",""],["dhcps_offer_option_OFFER_START",""],["eNotifyAction_eIncrement",""],["eNotifyAction_eNoAction",""],["eNotifyAction_eSetBits",""],["eNotifyAction_eSetValueWithOverwrite",""],["eNotifyAction_eSetValueWithoutOverwrite",""],["eSleepModeStatus_eAbortSleep",""],["eSleepModeStatus_eNoTasksWaitingTimeout",""],["eSleepModeStatus_eStandardSleep",""],["eTaskState_eBlocked",""],["eTaskState_eDeleted",""],["eTaskState_eInvalid",""],["eTaskState_eReady",""],["eTaskState_eRunning",""],["eTaskState_eSuspended",""],["errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY",""],["errQUEUE_BLOCKED",""],["errQUEUE_YIELD",""],["err_enum_t_ERR_ABRT","Connection aborted."],["err_enum_t_ERR_ALREADY","Already connecting."],["err_enum_t_ERR_ARG","Illegal argument."],["err_enum_t_ERR_BUF","Buffer error."],["err_enum_t_ERR_CLSD","Connection closed."],["err_enum_t_ERR_CONN","Not connected."],["err_enum_t_ERR_IF","Low-level netif error"],["err_enum_t_ERR_INPROGRESS","Operation in progress"],["err_enum_t_ERR_ISCONN","Conn already established."],["err_enum_t_ERR_MEM","Out of memory error."],["err_enum_t_ERR_OK","No error, everything OK."],["err_enum_t_ERR_RST","Connection reset."],["err_enum_t_ERR_RTE","Routing problem."],["err_enum_t_ERR_TIMEOUT","Timeout."],["err_enum_t_ERR_USE","Address in use."],["err_enum_t_ERR_VAL","Illegal value."],["err_enum_t_ERR_WOULDBLOCK","Operation would block."],["esp_adc_cal_value_t_ESP_ADC_CAL_VAL_DEFAULT_VREF","< Characterization based on default reference voltage"],["esp_adc_cal_value_t_ESP_ADC_CAL_VAL_EFUSE_TP","< Characterization based on Two Point values stored in eFuse"],["esp_adc_cal_value_t_ESP_ADC_CAL_VAL_EFUSE_VREF","< Characterization based on reference voltage stored in eFuse"],["esp_adc_cal_value_t_ESP_ADC_CAL_VAL_MAX",""],["esp_adc_cal_value_t_ESP_ADC_CAL_VAL_NOT_SUPPORTED",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_CBC",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_CFB128",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_CFB8",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_CTR",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_ECB",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_GCM",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_MAX",""],["esp_aes_mode_t_ESP_AES_BLOCK_MODE_OFB",""],["esp_chip_id_t_ESP_CHIP_ID_ESP32","< chip ID: ESP32"],["esp_chip_id_t_ESP_CHIP_ID_ESP32C3","< chip ID: ESP32-C3"],["esp_chip_id_t_ESP_CHIP_ID_ESP32S2","< chip ID: ESP32-S2"],["esp_chip_id_t_ESP_CHIP_ID_ESP32S3","< chip ID: ESP32-S3"],["esp_chip_id_t_ESP_CHIP_ID_INVALID","< Invalid chip ID (we defined it to make sure the esp_chip_id_t is 2 bytes size)"],["esp_chip_model_t_CHIP_ESP32","!< ESP32"],["esp_chip_model_t_CHIP_ESP32C3","!< ESP32-C3"],["esp_chip_model_t_CHIP_ESP32S2","!< ESP32-S2"],["esp_chip_model_t_CHIP_ESP32S3","!< ESP32-S3"],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_ALG_3DES",""],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_ALG_AES",""],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_ALG_DES",""],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_ALG_RC2",""],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_ALG_RC4",""],["esp_crypto_cipher_alg_t_ESP_CRYPTO_CIPHER_NULL",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_HMAC_MD5",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_HMAC_SHA1",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_HMAC_SHA256",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_MD5",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_SHA1",""],["esp_crypto_hash_alg_t_ESP_CRYPTO_HASH_ALG_SHA256",""],["esp_deepsleep_gpio_wake_up_mode_t_ESP_GPIO_WAKEUP_GPIO_HIGH",""],["esp_deepsleep_gpio_wake_up_mode_t_ESP_GPIO_WAKEUP_GPIO_LOW",""],["esp_efuse_block_t_EFUSE_BLK0","< Number of eFuse BLOCK0. REPEAT_DATA"],["esp_efuse_block_t_EFUSE_BLK1","< Number of eFuse BLOCK1. MAC_SPI_8M_SYS"],["esp_efuse_block_t_EFUSE_BLK10","< Number of eFuse BLOCK10. SYS_DATA_PART2"],["esp_efuse_block_t_EFUSE_BLK2","< Number of eFuse BLOCK2. SYS_DATA_PART1"],["esp_efuse_block_t_EFUSE_BLK3","< Number of eFuse BLOCK3. USER_DATA"],["esp_efuse_block_t_EFUSE_BLK4","< Number of eFuse BLOCK4. KEY0"],["esp_efuse_block_t_EFUSE_BLK5","< Number of eFuse BLOCK5. KEY1"],["esp_efuse_block_t_EFUSE_BLK6","< Number of eFuse BLOCK6. KEY2"],["esp_efuse_block_t_EFUSE_BLK7","< Number of eFuse BLOCK7. KEY3"],["esp_efuse_block_t_EFUSE_BLK8","< Number of eFuse BLOCK8. KEY4"],["esp_efuse_block_t_EFUSE_BLK9","< Number of eFuse BLOCK9. KEY5"],["esp_efuse_block_t_EFUSE_BLK_KEY0","< Number of eFuse BLOCK4. KEY0"],["esp_efuse_block_t_EFUSE_BLK_KEY1","< Number of eFuse BLOCK5. KEY1"],["esp_efuse_block_t_EFUSE_BLK_KEY2","< Number of eFuse BLOCK6. KEY2"],["esp_efuse_block_t_EFUSE_BLK_KEY3","< Number of eFuse BLOCK7. KEY3"],["esp_efuse_block_t_EFUSE_BLK_KEY4","< Number of eFuse BLOCK8. KEY4"],["esp_efuse_block_t_EFUSE_BLK_KEY5","< Number of eFuse BLOCK9. KEY5"],["esp_efuse_block_t_EFUSE_BLK_KEY_MAX",""],["esp_efuse_block_t_EFUSE_BLK_MAX",""],["esp_efuse_block_t_EFUSE_BLK_SYS_DATA_PART1","< Number of eFuse BLOCK2. SYS_DATA_PART1"],["esp_efuse_block_t_EFUSE_BLK_SYS_DATA_PART2","< Number of eFuse BLOCK10. SYS_DATA_PART2"],["esp_efuse_block_t_EFUSE_BLK_USER_DATA","< Number of eFuse BLOCK3. USER_DATA"],["esp_efuse_coding_scheme_t_EFUSE_CODING_SCHEME_NONE","< None"],["esp_efuse_coding_scheme_t_EFUSE_CODING_SCHEME_RS","< Reed-Solomon coding"],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_HMAC_DOWN_ALL",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_HMAC_DOWN_DIGITAL_SIGNATURE",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_HMAC_DOWN_JTAG",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_HMAC_UP",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_MAX",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_RESERVED",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST0",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST1",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_SECURE_BOOT_DIGEST2",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_USER",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_XTS_AES_128_KEY",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_1",""],["esp_efuse_purpose_t_ESP_EFUSE_KEY_PURPOSE_XTS_AES_256_KEY_2",""],["esp_eth_io_cmd_t_ETH_CMD_G_DUPLEX_MODE","< Get Duplex mode"],["esp_eth_io_cmd_t_ETH_CMD_G_MAC_ADDR","< Get MAC address"],["esp_eth_io_cmd_t_ETH_CMD_G_PHY_ADDR","< Get PHY address"],["esp_eth_io_cmd_t_ETH_CMD_G_SPEED","< Get Speed"],["esp_eth_io_cmd_t_ETH_CMD_S_FLOW_CTRL","< Set flow control"],["esp_eth_io_cmd_t_ETH_CMD_S_MAC_ADDR","< Set MAC address"],["esp_eth_io_cmd_t_ETH_CMD_S_PHY_ADDR","< Set PHY address"],["esp_eth_io_cmd_t_ETH_CMD_S_PROMISCUOUS","< Set promiscuous mode"],["esp_eth_state_t_ETH_STATE_DEINIT","< Deinit done"],["esp_eth_state_t_ETH_STATE_DUPLEX","< Duplex updated"],["esp_eth_state_t_ETH_STATE_LINK","< Link status changed"],["esp_eth_state_t_ETH_STATE_LLINIT","< Lowlevel init done"],["esp_eth_state_t_ETH_STATE_PAUSE","< Pause ability updated"],["esp_eth_state_t_ETH_STATE_SPEED","< Speed updated"],["esp_flash_io_mode_t_SPI_FLASH_DIO","< Both address & data transferred using dual I/O"],["esp_flash_io_mode_t_SPI_FLASH_DOUT","< Data read using dual I/O"],["esp_flash_io_mode_t_SPI_FLASH_FASTRD","< Data read using single I/O, no limit on speed"],["esp_flash_io_mode_t_SPI_FLASH_QIO","< Both address & data transferred using quad I/O"],["esp_flash_io_mode_t_SPI_FLASH_QOUT","< Data read using quad I/O"],["esp_flash_io_mode_t_SPI_FLASH_READ_MODE_MAX","< The fastest io mode supported by the host is `ESP_FLASH_READ_MODE_MAX-1`."],["esp_flash_io_mode_t_SPI_FLASH_SLOWRD","< Data read using single I/O, some limits on speed"],["esp_flash_speed_t_ESP_FLASH_10MHZ","< The flash runs under 10MHz"],["esp_flash_speed_t_ESP_FLASH_20MHZ","< The flash runs under 20MHz"],["esp_flash_speed_t_ESP_FLASH_26MHZ","< The flash runs under 26MHz"],["esp_flash_speed_t_ESP_FLASH_40MHZ","< The flash runs under 40MHz"],["esp_flash_speed_t_ESP_FLASH_5MHZ","< The flash runs under 5MHz"],["esp_flash_speed_t_ESP_FLASH_80MHZ","< The flash runs under 80MHz"],["esp_flash_speed_t_ESP_FLASH_SPEED_MAX","< The maximum frequency supported by the host is `ESP_FLASH_SPEED_MAX-1`."],["esp_http_client_auth_type_t_HTTP_AUTH_TYPE_BASIC","< HTTP Basic authentication"],["esp_http_client_auth_type_t_HTTP_AUTH_TYPE_DIGEST","< HTTP Disgest authentication"],["esp_http_client_auth_type_t_HTTP_AUTH_TYPE_NONE","< No authention"],["esp_http_client_event_id_t_HTTP_EVENT_DISCONNECTED","< The connection has been disconnected"],["esp_http_client_event_id_t_HTTP_EVENT_ERROR","< This event occurs when there are any errors during execution"],["esp_http_client_event_id_t_HTTP_EVENT_HEADERS_SENT","< After sending all the headers to the server"],["esp_http_client_event_id_t_HTTP_EVENT_HEADER_SENT","< This header has been kept for backward compatability and will be deprecated in future versions esp-idf"],["esp_http_client_event_id_t_HTTP_EVENT_ON_CONNECTED","< Once the HTTP has been connected to the server, no data exchange has been performed"],["esp_http_client_event_id_t_HTTP_EVENT_ON_DATA","< Occurs when receiving data from the server, possibly multiple portions of the packet"],["esp_http_client_event_id_t_HTTP_EVENT_ON_FINISH","< Occurs when finish a HTTP session"],["esp_http_client_event_id_t_HTTP_EVENT_ON_HEADER","< Occurs when receiving each header sent from the server"],["esp_http_client_method_t_HTTP_METHOD_COPY","< HTTP COPY Method"],["esp_http_client_method_t_HTTP_METHOD_DELETE","< HTTP DELETE Method"],["esp_http_client_method_t_HTTP_METHOD_GET","< HTTP GET Method"],["esp_http_client_method_t_HTTP_METHOD_HEAD","< HTTP HEAD Method"],["esp_http_client_method_t_HTTP_METHOD_LOCK","< HTTP LOCK Method"],["esp_http_client_method_t_HTTP_METHOD_MAX",""],["esp_http_client_method_t_HTTP_METHOD_MKCOL","< HTTP MKCOL Method"],["esp_http_client_method_t_HTTP_METHOD_MOVE","< HTTP MOVE Method"],["esp_http_client_method_t_HTTP_METHOD_NOTIFY","< HTTP NOTIFY Method"],["esp_http_client_method_t_HTTP_METHOD_OPTIONS","< HTTP OPTIONS Method"],["esp_http_client_method_t_HTTP_METHOD_PATCH","< HTTP PATCH Method"],["esp_http_client_method_t_HTTP_METHOD_POST","< HTTP POST Method"],["esp_http_client_method_t_HTTP_METHOD_PROPFIND","< HTTP PROPFIND Method"],["esp_http_client_method_t_HTTP_METHOD_PROPPATCH","< HTTP PROPPATCH Method"],["esp_http_client_method_t_HTTP_METHOD_PUT","< HTTP PUT Method"],["esp_http_client_method_t_HTTP_METHOD_SUBSCRIBE","< HTTP SUBSCRIBE Method"],["esp_http_client_method_t_HTTP_METHOD_UNLOCK","< HTTP UNLOCK Method"],["esp_http_client_method_t_HTTP_METHOD_UNSUBSCRIBE","< HTTP UNSUBSCRIBE Method"],["esp_http_client_transport_t_HTTP_TRANSPORT_OVER_SSL","< Transport over ssl"],["esp_http_client_transport_t_HTTP_TRANSPORT_OVER_TCP","< Transport over tcp"],["esp_http_client_transport_t_HTTP_TRANSPORT_UNKNOWN","< Unknown"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_16MB","< SPI flash size 16 MB"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_1MB","< SPI flash size 1 MB"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_2MB","< SPI flash size 2 MB"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_4MB","< SPI flash size 4 MB"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_8MB","< SPI flash size 8 MB"],["esp_image_flash_size_t_ESP_IMAGE_FLASH_SIZE_MAX","< SPI flash size MAX"],["esp_image_load_mode_t_ESP_IMAGE_VERIFY",""],["esp_image_load_mode_t_ESP_IMAGE_VERIFY_SILENT",""],["esp_image_spi_freq_t_ESP_IMAGE_SPI_SPEED_20M","< SPI clock frequency 20 MHz"],["esp_image_spi_freq_t_ESP_IMAGE_SPI_SPEED_26M","< SPI clock frequency 26 MHz"],["esp_image_spi_freq_t_ESP_IMAGE_SPI_SPEED_40M","< SPI clock frequency 40 MHz"],["esp_image_spi_freq_t_ESP_IMAGE_SPI_SPEED_80M","< SPI clock frequency 80 MHz"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_DIO","< SPI mode DIO"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_DOUT","< SPI mode DOUT"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_FAST_READ","< SPI mode FAST_READ"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_QIO","< SPI mode QIO"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_QOUT","< SPI mode QOUT"],["esp_image_spi_mode_t_ESP_IMAGE_SPI_MODE_SLOW_READ","< SPI mode SLOW_READ"],["esp_interface_t_ESP_IF_ETH","< ESP32 ethernet interface"],["esp_interface_t_ESP_IF_MAX",""],["esp_interface_t_ESP_IF_WIFI_AP","< ESP32 soft-AP interface"],["esp_interface_t_ESP_IF_WIFI_STA","< ESP32 station interface"],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_GLOBAL",""],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_IPV4_MAPPED_IPV6",""],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_LINK_LOCAL",""],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_SITE_LOCAL",""],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_UNIQUE_LOCAL",""],["esp_ip6_addr_type_t_ESP_IP6_ADDR_IS_UNKNOWN",""],["esp_line_endings_t_ESP_LINE_ENDINGS_CR","!< CR"],["esp_line_endings_t_ESP_LINE_ENDINGS_CRLF","!< CR + LF"],["esp_line_endings_t_ESP_LINE_ENDINGS_LF","!< LF"],["esp_log_level_t_ESP_LOG_DEBUG","< Extra information which is not necessary for normal use (values, pointers, sizes, etc)."],["esp_log_level_t_ESP_LOG_ERROR","< Critical errors, software module can not recover on its own"],["esp_log_level_t_ESP_LOG_INFO","< Information messages which describe normal flow of events"],["esp_log_level_t_ESP_LOG_NONE","< No log output"],["esp_log_level_t_ESP_LOG_VERBOSE","< Bigger chunks of debugging information, or frequent messages which can potentially flood the output."],["esp_log_level_t_ESP_LOG_WARN","< Error conditions from which recovery measures have been taken"],["esp_mac_type_t_ESP_MAC_BT",""],["esp_mac_type_t_ESP_MAC_ETH",""],["esp_mac_type_t_ESP_MAC_WIFI_SOFTAP",""],["esp_mac_type_t_ESP_MAC_WIFI_STA",""],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_ACCEPTED","< Connection accepted"],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_REFUSE_BAD_USERNAME","< MQTT connection refused reason: Wrong user"],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_REFUSE_ID_REJECTED","< MQTT connection refused reason: ID rejected"],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_REFUSE_NOT_AUTHORIZED","< MQTT connection refused reason: Wrong username or password"],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_REFUSE_PROTOCOL","< MQTT connection refused reason: Wrong protocol"],["esp_mqtt_connect_return_code_t_MQTT_CONNECTION_REFUSE_SERVER_UNAVAILABLE","< MQTT connection refused reason: Server unavailable"],["esp_mqtt_error_type_t_MQTT_ERROR_TYPE_CONNECTION_REFUSED",""],["esp_mqtt_error_type_t_MQTT_ERROR_TYPE_NONE",""],["esp_mqtt_error_type_t_MQTT_ERROR_TYPE_TCP_TRANSPORT",""],["esp_mqtt_event_id_t_MQTT_EVENT_ANY",""],["esp_mqtt_event_id_t_MQTT_EVENT_BEFORE_CONNECT","< The event occurs before connecting"],["esp_mqtt_event_id_t_MQTT_EVENT_CONNECTED","< connected event, additional context: session_present flag"],["esp_mqtt_event_id_t_MQTT_EVENT_DATA","< data event, additional context:"],["esp_mqtt_event_id_t_MQTT_EVENT_DELETED","< Notification on delete of one message from the internal outbox, if the message couldn’t have been sent and acknowledged before expiring defined in OUTBOX_EXPIRED_TIMEOUT_MS. (events are not posted upon deletion of successfully acknowledged messages)"],["esp_mqtt_event_id_t_MQTT_EVENT_DISCONNECTED","< disconnected event"],["esp_mqtt_event_id_t_MQTT_EVENT_ERROR","< on error event, additional context: connection return code, error handle from esp_tls (if supported)"],["esp_mqtt_event_id_t_MQTT_EVENT_PUBLISHED","< published event, additional context:  msg_id"],["esp_mqtt_event_id_t_MQTT_EVENT_SUBSCRIBED","< subscribed event, additional context: msg_id"],["esp_mqtt_event_id_t_MQTT_EVENT_UNSUBSCRIBED","< unsubscribed event"],["esp_mqtt_protocol_ver_t_MQTT_PROTOCOL_UNDEFINED",""],["esp_mqtt_protocol_ver_t_MQTT_PROTOCOL_V_3_1",""],["esp_mqtt_protocol_ver_t_MQTT_PROTOCOL_V_3_1_1",""],["esp_mqtt_transport_t_MQTT_TRANSPORT_OVER_SSL","< MQTT over SSL, using scheme: `mqtts`"],["esp_mqtt_transport_t_MQTT_TRANSPORT_OVER_TCP","< MQTT over TCP, using scheme: `mqtt`"],["esp_mqtt_transport_t_MQTT_TRANSPORT_OVER_WS","< MQTT over Websocket, using scheme:: `ws`"],["esp_mqtt_transport_t_MQTT_TRANSPORT_OVER_WSS","< MQTT over Websocket Secure, using scheme: `wss`"],["esp_mqtt_transport_t_MQTT_TRANSPORT_UNKNOWN",""],["esp_netif_dhcp_option_id_t_ESP_NETIF_DOMAIN_NAME_SERVER","< Domain name server"],["esp_netif_dhcp_option_id_t_ESP_NETIF_IP_ADDRESS_LEASE_TIME","< Request IP address lease time"],["esp_netif_dhcp_option_id_t_ESP_NETIF_IP_REQUEST_RETRY_TIME","< Request IP address retry counter"],["esp_netif_dhcp_option_id_t_ESP_NETIF_REQUESTED_IP_ADDRESS","< Request specific IP address"],["esp_netif_dhcp_option_id_t_ESP_NETIF_ROUTER_SOLICITATION_ADDRESS","< Solicitation router address"],["esp_netif_dhcp_option_id_t_ESP_NETIF_SUBNET_MASK","< Network mask"],["esp_netif_dhcp_option_mode_t_ESP_NETIF_OP_GET","< Get option"],["esp_netif_dhcp_option_mode_t_ESP_NETIF_OP_MAX",""],["esp_netif_dhcp_option_mode_t_ESP_NETIF_OP_SET","< Set option"],["esp_netif_dhcp_option_mode_t_ESP_NETIF_OP_START",""],["esp_netif_dhcp_status_t_ESP_NETIF_DHCP_INIT","< DHCP client/server is in initial state (not yet started)"],["esp_netif_dhcp_status_t_ESP_NETIF_DHCP_STARTED","< DHCP client/server has been started"],["esp_netif_dhcp_status_t_ESP_NETIF_DHCP_STATUS_MAX",""],["esp_netif_dhcp_status_t_ESP_NETIF_DHCP_STOPPED","< DHCP client/server has been stopped"],["esp_netif_dns_type_t_ESP_NETIF_DNS_BACKUP","< DNS backup server address (Wi-Fi STA and Ethernet only)"],["esp_netif_dns_type_t_ESP_NETIF_DNS_FALLBACK","< DNS fallback server address (Wi-Fi STA and Ethernet only)"],["esp_netif_dns_type_t_ESP_NETIF_DNS_MAIN","< DNS main server address"],["esp_netif_dns_type_t_ESP_NETIF_DNS_MAX",""],["esp_netif_flags_ESP_NETIF_DHCP_CLIENT",""],["esp_netif_flags_ESP_NETIF_DHCP_SERVER",""],["esp_netif_flags_ESP_NETIF_FLAG_AUTOUP",""],["esp_netif_flags_ESP_NETIF_FLAG_EVENT_IP_MODIFIED",""],["esp_netif_flags_ESP_NETIF_FLAG_GARP",""],["esp_netif_flags_ESP_NETIF_FLAG_IS_PPP",""],["esp_netif_flags_ESP_NETIF_FLAG_IS_SLIP",""],["esp_netif_ip_event_type_ESP_NETIF_IP_EVENT_GOT_IP",""],["esp_netif_ip_event_type_ESP_NETIF_IP_EVENT_LOST_IP",""],["esp_now_send_status_t_ESP_NOW_SEND_FAIL","< Send ESPNOW data fail"],["esp_now_send_status_t_ESP_NOW_SEND_SUCCESS","< Send ESPNOW data successfully"],["esp_ota_img_states_t_ESP_OTA_IMG_ABORTED","< App could not confirm the workable or non-workable. In bootloader IMG_PENDING_VERIFY state will be changed to IMG_ABORTED. This app will not selected to boot at all."],["esp_ota_img_states_t_ESP_OTA_IMG_INVALID","< App was confirmed as non-workable. This app will not selected to boot at all."],["esp_ota_img_states_t_ESP_OTA_IMG_NEW","< Monitor the first boot. In bootloader this state is changed to ESP_OTA_IMG_PENDING_VERIFY."],["esp_ota_img_states_t_ESP_OTA_IMG_PENDING_VERIFY","< First boot for this app was. If while the second boot this state is then it will be changed to ABORTED."],["esp_ota_img_states_t_ESP_OTA_IMG_UNDEFINED","< Undefined. App can boot and work without limits."],["esp_ota_img_states_t_ESP_OTA_IMG_VALID","< App was confirmed as workable. App can boot and work without limits."],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_ANY","!< Used to search for partitions with any subtype"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_FACTORY","!< Factory application partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_0","!< OTA partition 0"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_1","!< OTA partition 1"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_10","!< OTA partition 10"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_11","!< OTA partition 11"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_12","!< OTA partition 12"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_13","!< OTA partition 13"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_14","!< OTA partition 14"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_15","!< OTA partition 15"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_2","!< OTA partition 2"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_3","!< OTA partition 3"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_4","!< OTA partition 4"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_5","!< OTA partition 5"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_6","!< OTA partition 6"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_7","!< OTA partition 7"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_8","!< OTA partition 8"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_9","!< OTA partition 9"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_MAX","!< Max subtype of OTA partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_OTA_MIN","!< Base for OTA partition subtypes"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_APP_TEST","!< Test application partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_COREDUMP","!< COREDUMP partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_EFUSE_EM","!< Partition for emulate eFuse bits"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_ESPHTTPD","!< ESPHTTPD partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_FAT","!< FAT partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_NVS","!< NVS partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_NVS_KEYS","!< Partition for NVS keys"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_OTA","!< OTA selection partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_PHY","!< PHY init data partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_SPIFFS","!< SPIFFS partition"],["esp_partition_subtype_t_ESP_PARTITION_SUBTYPE_DATA_UNDEFINED","!< Undefined (or unspecified) data partition"],["esp_partition_type_t_ESP_PARTITION_TYPE_APP","!< Application partition type"],["esp_partition_type_t_ESP_PARTITION_TYPE_DATA","!< Data partition type"],["esp_ping_profile_t_ESP_PING_PROF_DURATION","< Elapsed time of the whole ping session"],["esp_ping_profile_t_ESP_PING_PROF_IPADDR","< IP address of replied target"],["esp_ping_profile_t_ESP_PING_PROF_REPLY","< Number of reply packets received"],["esp_ping_profile_t_ESP_PING_PROF_REQUEST","< Number of request packets sent out"],["esp_ping_profile_t_ESP_PING_PROF_SEQNO","< Sequence number of a ping procedure"],["esp_ping_profile_t_ESP_PING_PROF_SIZE","< Size of received packet"],["esp_ping_profile_t_ESP_PING_PROF_TIMEGAP","< Elapsed time between request and reply packet"],["esp_ping_profile_t_ESP_PING_PROF_TTL","< Time to live of a ping procedure"],["esp_pm_lock_type_t_ESP_PM_APB_FREQ_MAX","Require APB frequency to be at the maximum value supported by the chip. Argument is unused and should be set to 0."],["esp_pm_lock_type_t_ESP_PM_CPU_FREQ_MAX","Require CPU frequency to be at the maximum value set via esp_pm_configure. Argument is unused and should be set to 0."],["esp_pm_lock_type_t_ESP_PM_NO_LIGHT_SLEEP","Prevent the system from going into light sleep. Argument is unused and should be set to 0."],["esp_reset_reason_t_ESP_RST_BROWNOUT","!< Brownout reset (software or hardware)"],["esp_reset_reason_t_ESP_RST_DEEPSLEEP","!< Reset after exiting deep sleep mode"],["esp_reset_reason_t_ESP_RST_EXT","!< Reset by external pin (not applicable for ESP32)"],["esp_reset_reason_t_ESP_RST_INT_WDT","!< Reset (software or hardware) due to interrupt watchdog"],["esp_reset_reason_t_ESP_RST_PANIC","!< Software reset due to exception/panic"],["esp_reset_reason_t_ESP_RST_POWERON","!< Reset due to power-on event"],["esp_reset_reason_t_ESP_RST_SDIO","!< Reset over SDIO"],["esp_reset_reason_t_ESP_RST_SW","!< Software reset via esp_restart"],["esp_reset_reason_t_ESP_RST_TASK_WDT","!< Reset due to task watchdog"],["esp_reset_reason_t_ESP_RST_UNKNOWN","!< Reset reason can not be determined"],["esp_reset_reason_t_ESP_RST_WDT","!< Reset due to other watchdogs"],["esp_sleep_ext1_wakeup_mode_t_ESP_EXT1_WAKEUP_ALL_LOW","!< Wake the chip when all selected GPIOs go low"],["esp_sleep_ext1_wakeup_mode_t_ESP_EXT1_WAKEUP_ANY_HIGH","!< Wake the chip when any of the selected GPIOs go high"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_CPU","!< CPU core"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_MAX","!< Number of domains"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_RTC8M","!< Internal 8M oscillator"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_RTC_FAST_MEM","!< RTC fast memory"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_RTC_PERIPH","!< RTC IO, sensors and ULP co-processor"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_RTC_SLOW_MEM","!< RTC slow memory"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_VDDSDIO","!< VDD_SDIO"],["esp_sleep_pd_domain_t_ESP_PD_DOMAIN_XTAL","!< XTAL oscillator"],["esp_sleep_pd_option_t_ESP_PD_OPTION_AUTO","!< Keep power domain enabled in sleep mode, if it is needed by one of the wakeup options. Otherwise power it down."],["esp_sleep_pd_option_t_ESP_PD_OPTION_OFF","!< Power down the power domain in sleep mode"],["esp_sleep_pd_option_t_ESP_PD_OPTION_ON","!< Keep power domain enabled during sleep mode"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_ALL","!< Not a wakeup cause, used to disable all wakeup sources with esp_sleep_disable_wakeup_source"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_BT","!< Wakeup caused by BT (light sleep only)"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_COCPU","!< Wakeup caused by COCPU int"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_COCPU_TRAP_TRIG","!< Wakeup caused by COCPU crash"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_EXT0","!< Wakeup caused by external signal using RTC_IO"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_EXT1","!< Wakeup caused by external signal using RTC_CNTL"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_GPIO","!< Wakeup caused by GPIO (light sleep only)"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_TIMER","!< Wakeup caused by timer"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_TOUCHPAD","!< Wakeup caused by touchpad"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_UART","!< Wakeup caused by UART (light sleep only)"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_ULP","!< Wakeup caused by ULP program"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_UNDEFINED","!< In case of deep sleep, reset was not caused by exit from deep sleep"],["esp_sleep_source_t_ESP_SLEEP_WAKEUP_WIFI","!< Wakeup caused by WIFI (light sleep only)"],["esp_timer_dispatch_t_ESP_TIMER_TASK","!< Callback is called from timer task"],["esp_tls_conn_state_ESP_TLS_CONNECTING",""],["esp_tls_conn_state_ESP_TLS_DONE",""],["esp_tls_conn_state_ESP_TLS_FAIL",""],["esp_tls_conn_state_ESP_TLS_HANDSHAKE",""],["esp_tls_conn_state_ESP_TLS_INIT",""],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_ESP","< ESP-IDF error type – esp_err_t"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_MAX","< Last err type – invalid entry"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_MBEDTLS","< Error code from mbedTLS library"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_MBEDTLS_CERT_FLAGS","< Certificate flags defined in mbedTLS"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_SYSTEM","< System error – errno"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_UNKNOWN",""],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_WOLFSSL","< Error code from wolfSSL library"],["esp_tls_error_type_t_ESP_TLS_ERR_TYPE_WOLFSSL_CERT_FLAGS","< Certificate flags defined in wolfSSL"],["esp_tls_role_ESP_TLS_CLIENT",""],["esp_tls_role_ESP_TLS_SERVER",""],["eth_duplex_t_ETH_DUPLEX_FULL","< Ethernet is in full duplex"],["eth_duplex_t_ETH_DUPLEX_HALF","< Ethernet is in half duplex"],["eth_event_t_ETHERNET_EVENT_CONNECTED","< Ethernet got a valid link"],["eth_event_t_ETHERNET_EVENT_DISCONNECTED","< Ethernet lost a valid link"],["eth_event_t_ETHERNET_EVENT_START","< Ethernet driver start"],["eth_event_t_ETHERNET_EVENT_STOP","< Ethernet driver stop"],["eth_link_t_ETH_LINK_DOWN","< Ethernet link is down"],["eth_link_t_ETH_LINK_UP","< Ethernet link is up"],["eth_speed_t_ETH_SPEED_100M","< Ethernet speed is 100Mbps"],["eth_speed_t_ETH_SPEED_10M","< Ethernet speed is 10Mbps"],["false_",""],["flags_F_CHUNKED",""],["flags_F_CONNECTION_CLOSE",""],["flags_F_CONNECTION_KEEP_ALIVE",""],["flags_F_CONNECTION_UPGRADE",""],["flags_F_CONTENTLENGTH",""],["flags_F_SKIPBODY",""],["flags_F_TRAILING",""],["flags_F_UPGRADE",""],["gpio_drive_cap_t_GPIO_DRIVE_CAP_0","< Pad drive capability: weak"],["gpio_drive_cap_t_GPIO_DRIVE_CAP_1","< Pad drive capability: stronger"],["gpio_drive_cap_t_GPIO_DRIVE_CAP_2","< Pad drive capability: medium"],["gpio_drive_cap_t_GPIO_DRIVE_CAP_3","< Pad drive capability: strongest"],["gpio_drive_cap_t_GPIO_DRIVE_CAP_DEFAULT","< Pad drive capability: medium"],["gpio_drive_cap_t_GPIO_DRIVE_CAP_MAX",""],["gpio_int_type_t_GPIO_INTR_ANYEDGE","< GPIO interrupt type : both rising and falling edge"],["gpio_int_type_t_GPIO_INTR_DISABLE","< Disable GPIO interrupt"],["gpio_int_type_t_GPIO_INTR_HIGH_LEVEL","< GPIO interrupt type : input high level trigger"],["gpio_int_type_t_GPIO_INTR_LOW_LEVEL","< GPIO interrupt type : input low level trigger"],["gpio_int_type_t_GPIO_INTR_MAX",""],["gpio_int_type_t_GPIO_INTR_NEGEDGE","< GPIO interrupt type : falling edge"],["gpio_int_type_t_GPIO_INTR_POSEDGE","< GPIO interrupt type : rising edge"],["gpio_mode_t_GPIO_MODE_DISABLE","< GPIO mode : disable input and output"],["gpio_mode_t_GPIO_MODE_INPUT","< GPIO mode : input only"],["gpio_mode_t_GPIO_MODE_INPUT_OUTPUT","< GPIO mode : output and input mode"],["gpio_mode_t_GPIO_MODE_INPUT_OUTPUT_OD","< GPIO mode : output and input with open-drain mode"],["gpio_mode_t_GPIO_MODE_OUTPUT","< GPIO mode : output only mode"],["gpio_mode_t_GPIO_MODE_OUTPUT_OD","< GPIO mode : output only with open-drain mode"],["gpio_num_t_GPIO_NUM_0","< GPIO0, input and output"],["gpio_num_t_GPIO_NUM_1","< GPIO1, input and output"],["gpio_num_t_GPIO_NUM_10","< GPIO10, input and output"],["gpio_num_t_GPIO_NUM_11","< GPIO11, input and output"],["gpio_num_t_GPIO_NUM_12","< GPIO12, input and output"],["gpio_num_t_GPIO_NUM_13","< GPIO13, input and output"],["gpio_num_t_GPIO_NUM_14","< GPIO14, input and output"],["gpio_num_t_GPIO_NUM_15","< GPIO15, input and output"],["gpio_num_t_GPIO_NUM_16","< GPIO16, input and output"],["gpio_num_t_GPIO_NUM_17","< GPIO17, input and output"],["gpio_num_t_GPIO_NUM_18","< GPIO18, input and output"],["gpio_num_t_GPIO_NUM_19","< GPIO19, input and output"],["gpio_num_t_GPIO_NUM_2","< GPIO2, input and output"],["gpio_num_t_GPIO_NUM_20","< GPIO20, input and output"],["gpio_num_t_GPIO_NUM_21","< GPIO21, input and output"],["gpio_num_t_GPIO_NUM_22","< GPIO22, input and output"],["gpio_num_t_GPIO_NUM_3","< GPIO3, input and output"],["gpio_num_t_GPIO_NUM_4","< GPIO4, input and output"],["gpio_num_t_GPIO_NUM_5","< GPIO5, input and output"],["gpio_num_t_GPIO_NUM_6","< GPIO6, input and output"],["gpio_num_t_GPIO_NUM_7","< GPIO7, input and output"],["gpio_num_t_GPIO_NUM_8","< GPIO8, input and output"],["gpio_num_t_GPIO_NUM_9","< GPIO9, input and output"],["gpio_num_t_GPIO_NUM_MAX",""],["gpio_num_t_GPIO_NUM_NC","< Use to signal not connected to S/W"],["gpio_port_t_GPIO_PORT_0",""],["gpio_port_t_GPIO_PORT_MAX",""],["gpio_pull_mode_t_GPIO_FLOATING","< Pad floating"],["gpio_pull_mode_t_GPIO_PULLDOWN_ONLY","< Pad pull down"],["gpio_pull_mode_t_GPIO_PULLUP_ONLY","< Pad pull up"],["gpio_pull_mode_t_GPIO_PULLUP_PULLDOWN","< Pad pull up + pull down"],["gpio_pulldown_t_GPIO_PULLDOWN_DISABLE","< Disable GPIO pull-down resistor"],["gpio_pulldown_t_GPIO_PULLDOWN_ENABLE","< Enable GPIO pull-down resistor"],["gpio_pullup_t_GPIO_PULLUP_DISABLE","< Disable GPIO pull-up resistor"],["gpio_pullup_t_GPIO_PULLUP_ENABLE","< Enable GPIO pull-up resistor"],["http_errno_HPE_CB_body",""],["http_errno_HPE_CB_chunk_complete",""],["http_errno_HPE_CB_chunk_header",""],["http_errno_HPE_CB_header_field",""],["http_errno_HPE_CB_header_value",""],["http_errno_HPE_CB_headers_complete",""],["http_errno_HPE_CB_message_begin",""],["http_errno_HPE_CB_message_complete",""],["http_errno_HPE_CB_status",""],["http_errno_HPE_CB_url",""],["http_errno_HPE_CLOSED_CONNECTION",""],["http_errno_HPE_HEADER_OVERFLOW",""],["http_errno_HPE_INVALID_CHUNK_SIZE",""],["http_errno_HPE_INVALID_CONSTANT",""],["http_errno_HPE_INVALID_CONTENT_LENGTH",""],["http_errno_HPE_INVALID_EOF_STATE",""],["http_errno_HPE_INVALID_FRAGMENT",""],["http_errno_HPE_INVALID_HEADER_TOKEN",""],["http_errno_HPE_INVALID_HOST",""],["http_errno_HPE_INVALID_INTERNAL_STATE",""],["http_errno_HPE_INVALID_METHOD",""],["http_errno_HPE_INVALID_PATH",""],["http_errno_HPE_INVALID_PORT",""],["http_errno_HPE_INVALID_QUERY_STRING",""],["http_errno_HPE_INVALID_STATUS",""],["http_errno_HPE_INVALID_URL",""],["http_errno_HPE_INVALID_VERSION",""],["http_errno_HPE_LF_EXPECTED",""],["http_errno_HPE_OK",""],["http_errno_HPE_PAUSED",""],["http_errno_HPE_STRICT",""],["http_errno_HPE_UNEXPECTED_CONTENT_LENGTH",""],["http_errno_HPE_UNKNOWN",""],["http_method_HTTP_ACL",""],["http_method_HTTP_BIND",""],["http_method_HTTP_CHECKOUT",""],["http_method_HTTP_CONNECT",""],["http_method_HTTP_COPY",""],["http_method_HTTP_DELETE",""],["http_method_HTTP_GET",""],["http_method_HTTP_HEAD",""],["http_method_HTTP_LINK",""],["http_method_HTTP_LOCK",""],["http_method_HTTP_MERGE",""],["http_method_HTTP_MKACTIVITY",""],["http_method_HTTP_MKCALENDAR",""],["http_method_HTTP_MKCOL",""],["http_method_HTTP_MOVE",""],["http_method_HTTP_MSEARCH",""],["http_method_HTTP_NOTIFY",""],["http_method_HTTP_OPTIONS",""],["http_method_HTTP_PATCH",""],["http_method_HTTP_POST",""],["http_method_HTTP_PROPFIND",""],["http_method_HTTP_PROPPATCH",""],["http_method_HTTP_PURGE",""],["http_method_HTTP_PUT",""],["http_method_HTTP_REBIND",""],["http_method_HTTP_REPORT",""],["http_method_HTTP_SEARCH",""],["http_method_HTTP_SUBSCRIBE",""],["http_method_HTTP_TRACE",""],["http_method_HTTP_UNBIND",""],["http_method_HTTP_UNLINK",""],["http_method_HTTP_UNLOCK",""],["http_method_HTTP_UNSUBSCRIBE",""],["http_parser_type_HTTP_BOTH",""],["http_parser_type_HTTP_REQUEST",""],["http_parser_type_HTTP_RESPONSE",""],["http_parser_url_fields_UF_FRAGMENT",""],["http_parser_url_fields_UF_HOST",""],["http_parser_url_fields_UF_MAX",""],["http_parser_url_fields_UF_PATH",""],["http_parser_url_fields_UF_PORT",""],["http_parser_url_fields_UF_QUERY",""],["http_parser_url_fields_UF_SCHEMA",""],["http_parser_url_fields_UF_USERINFO",""],["httpd_err_code_t_HTTPD_400_BAD_REQUEST",""],["httpd_err_code_t_HTTPD_401_UNAUTHORIZED",""],["httpd_err_code_t_HTTPD_403_FORBIDDEN",""],["httpd_err_code_t_HTTPD_404_NOT_FOUND",""],["httpd_err_code_t_HTTPD_405_METHOD_NOT_ALLOWED",""],["httpd_err_code_t_HTTPD_408_REQ_TIMEOUT",""],["httpd_err_code_t_HTTPD_411_LENGTH_REQUIRED",""],["httpd_err_code_t_HTTPD_414_URI_TOO_LONG",""],["httpd_err_code_t_HTTPD_431_REQ_HDR_FIELDS_TOO_LARGE",""],["httpd_err_code_t_HTTPD_500_INTERNAL_SERVER_ERROR",""],["httpd_err_code_t_HTTPD_501_METHOD_NOT_IMPLEMENTED",""],["httpd_err_code_t_HTTPD_505_VERSION_NOT_SUPPORTED",""],["httpd_err_code_t_HTTPD_ERR_CODE_MAX",""],["i2c_ack_type_t_I2C_MASTER_ACK","< I2C ack for each byte read"],["i2c_ack_type_t_I2C_MASTER_ACK_MAX",""],["i2c_ack_type_t_I2C_MASTER_LAST_NACK","< I2C nack for the last byte"],["i2c_ack_type_t_I2C_MASTER_NACK","< I2C nack for each byte read"],["i2c_addr_mode_t_I2C_ADDR_BIT_10","< I2C 10bit address for slave mode"],["i2c_addr_mode_t_I2C_ADDR_BIT_7","< I2C 7bit address for slave mode"],["i2c_addr_mode_t_I2C_ADDR_BIT_MAX",""],["i2c_mode_t_I2C_MODE_MASTER","< I2C master mode"],["i2c_mode_t_I2C_MODE_MAX",""],["i2c_mode_t_I2C_MODE_SLAVE","< I2C slave mode"],["i2c_rw_t_I2C_MASTER_READ","< I2C read data"],["i2c_rw_t_I2C_MASTER_WRITE","< I2C write data"],["i2c_sclk_t_I2C_SCLK_DEFAULT","< I2C source clock not selected"],["i2c_sclk_t_I2C_SCLK_MAX",""],["i2c_sclk_t_I2C_SCLK_RTC","< I2C source clock from 8M RTC, 8M"],["i2c_sclk_t_I2C_SCLK_XTAL","< I2C source clock from XTAL, 40M"],["i2c_trans_mode_t_I2C_DATA_MODE_LSB_FIRST","< I2C data lsb first"],["i2c_trans_mode_t_I2C_DATA_MODE_MAX",""],["i2c_trans_mode_t_I2C_DATA_MODE_MSB_FIRST","< I2C data msb first"],["i2s_bits_per_sample_t_I2S_BITS_PER_SAMPLE_16BIT","< I2S bits per sample: 16-bits"],["i2s_bits_per_sample_t_I2S_BITS_PER_SAMPLE_24BIT","< I2S bits per sample: 24-bits"],["i2s_bits_per_sample_t_I2S_BITS_PER_SAMPLE_32BIT","< I2S bits per sample: 32-bits"],["i2s_bits_per_sample_t_I2S_BITS_PER_SAMPLE_8BIT","< I2S bits per sample: 8-bits"],["i2s_channel_fmt_t_I2S_CHANNEL_FMT_ALL_LEFT",""],["i2s_channel_fmt_t_I2S_CHANNEL_FMT_ALL_RIGHT",""],["i2s_channel_fmt_t_I2S_CHANNEL_FMT_ONLY_LEFT",""],["i2s_channel_fmt_t_I2S_CHANNEL_FMT_ONLY_RIGHT",""],["i2s_channel_fmt_t_I2S_CHANNEL_FMT_RIGHT_LEFT",""],["i2s_channel_t_I2S_CHANNEL_MONO","< I2S 1 channel (mono)"],["i2s_channel_t_I2S_CHANNEL_STEREO","< I2S 2 channel (stereo)"],["i2s_clock_src_t_I2S_CLK_APLL","< Clock from APLL"],["i2s_clock_src_t_I2S_CLK_D2CLK","< Clock from PLL_D2_CLK(160M)"],["i2s_comm_format_t_I2S_COMM_FORMAT_I2S","< I2S communication format I2S, correspond to `I2S_COMM_FORMAT_STAND_I2S`"],["i2s_comm_format_t_I2S_COMM_FORMAT_I2S_LSB","< I2S format LSB, (I2S_COMM_FORMAT_I2S |I2S_COMM_FORMAT_I2S_LSB) correspond to `I2S_COMM_FORMAT_STAND_MSB`"],["i2s_comm_format_t_I2S_COMM_FORMAT_I2S_MSB","< I2S format MSB, (I2S_COMM_FORMAT_I2S |I2S_COMM_FORMAT_I2S_MSB) correspond to `I2S_COMM_FORMAT_STAND_I2S`"],["i2s_comm_format_t_I2S_COMM_FORMAT_PCM","< I2S communication format PCM, correspond to `I2S_COMM_FORMAT_STAND_PCM_SHORT`"],["i2s_comm_format_t_I2S_COMM_FORMAT_PCM_LONG","< PCM Long, (I2S_COMM_FORMAT_PCM | I2S_COMM_FORMAT_PCM_LONG) correspond to `I2S_COMM_FORMAT_STAND_PCM_LONG`"],["i2s_comm_format_t_I2S_COMM_FORMAT_PCM_SHORT","< PCM Short, (I2S_COMM_FORMAT_PCM | I2S_COMM_FORMAT_PCM_SHORT) correspond to `I2S_COMM_FORMAT_STAND_PCM_SHORT`"],["i2s_comm_format_t_I2S_COMM_FORMAT_STAND_I2S","< I2S communication I2S Philips standard, data launch at second BCK"],["i2s_comm_format_t_I2S_COMM_FORMAT_STAND_MAX","< standard max"],["i2s_comm_format_t_I2S_COMM_FORMAT_STAND_MSB","< I2S communication MSB alignment standard, data launch at first BCK"],["i2s_comm_format_t_I2S_COMM_FORMAT_STAND_PCM_LONG","< PCM Long standard. The period of synchronization signal (WS) is channel_bit*bck cycles."],["i2s_comm_format_t_I2S_COMM_FORMAT_STAND_PCM_SHORT","< PCM Short standard, also known as DSP mode. The period of synchronization signal (WS) is 1 bck cycle."],["i2s_dac_mode_t_I2S_DAC_CHANNEL_BOTH_EN","< Enable both of the I2S built-in DAC channels."],["i2s_dac_mode_t_I2S_DAC_CHANNEL_DISABLE","< Disable I2S built-in DAC signals"],["i2s_dac_mode_t_I2S_DAC_CHANNEL_LEFT_EN","< Enable I2S built-in DAC left  channel, maps to DAC channel 2 on GPIO26"],["i2s_dac_mode_t_I2S_DAC_CHANNEL_MAX","< I2S built-in DAC mode max index"],["i2s_dac_mode_t_I2S_DAC_CHANNEL_RIGHT_EN","< Enable I2S built-in DAC right channel, maps to DAC channel 1 on GPIO25"],["i2s_event_type_t_I2S_EVENT_DMA_ERROR",""],["i2s_event_type_t_I2S_EVENT_MAX","< I2S event max index"],["i2s_event_type_t_I2S_EVENT_RX_DONE","< I2S DMA finish received 1 buffer"],["i2s_event_type_t_I2S_EVENT_TX_DONE","< I2S DMA finish sent 1 buffer"],["i2s_mode_t_I2S_MODE_MASTER","< Master mode"],["i2s_mode_t_I2S_MODE_RX","< RX mode"],["i2s_mode_t_I2S_MODE_SLAVE","< Slave mode"],["i2s_mode_t_I2S_MODE_TX","< TX mode"],["i2s_port_t_I2S_NUM_0","< I2S port 0"],["i2s_port_t_I2S_NUM_MAX","< I2S port max"],["ip_event_t_IP_EVENT_AP_STAIPASSIGNED","< soft-AP assign an IP to a connected station"],["ip_event_t_IP_EVENT_ETH_GOT_IP","< ethernet got IP from connected AP"],["ip_event_t_IP_EVENT_GOT_IP6","< station or ap or ethernet interface v6IP addr is preferred"],["ip_event_t_IP_EVENT_PPP_GOT_IP","< PPP interface got IP"],["ip_event_t_IP_EVENT_PPP_LOST_IP","< PPP interface lost IP"],["ip_event_t_IP_EVENT_STA_GOT_IP","< station got IP from connected AP"],["ip_event_t_IP_EVENT_STA_LOST_IP","< station lost IP and the IP is reset to 0"],["ledc_channel_t_LEDC_CHANNEL_0","< LEDC channel 0"],["ledc_channel_t_LEDC_CHANNEL_1","< LEDC channel 1"],["ledc_channel_t_LEDC_CHANNEL_2","< LEDC channel 2"],["ledc_channel_t_LEDC_CHANNEL_3","< LEDC channel 3"],["ledc_channel_t_LEDC_CHANNEL_4","< LEDC channel 4"],["ledc_channel_t_LEDC_CHANNEL_5","< LEDC channel 5"],["ledc_channel_t_LEDC_CHANNEL_MAX",""],["ledc_clk_cfg_t_LEDC_AUTO_CLK","< The driver will automatically select the source clock(REF_TICK or APB) based on the giving resolution and duty parameter when init the timer"],["ledc_clk_cfg_t_LEDC_USE_APB_CLK","< LEDC timer select APB clock as source clock"],["ledc_clk_cfg_t_LEDC_USE_REF_TICK","< LEDC timer select REF_TICK clock as source clock"],["ledc_clk_cfg_t_LEDC_USE_RTC8M_CLK","< LEDC timer select RTC8M_CLK as source clock. Only for low speed channels and this parameter must be the same for all low speed channels"],["ledc_clk_cfg_t_LEDC_USE_XTAL_CLK","< LEDC timer select XTAL clock as source clock"],["ledc_clk_src_t_LEDC_APB_CLK","< LEDC timer clock divided from APB clock (80Mhz)"],["ledc_clk_src_t_LEDC_REF_TICK","< LEDC timer clock divided from reference tick (1Mhz)"],["ledc_duty_direction_t_LEDC_DUTY_DIR_DECREASE","< LEDC duty decrease direction"],["ledc_duty_direction_t_LEDC_DUTY_DIR_INCREASE","< LEDC duty increase direction"],["ledc_duty_direction_t_LEDC_DUTY_DIR_MAX",""],["ledc_fade_mode_t_LEDC_FADE_MAX",""],["ledc_fade_mode_t_LEDC_FADE_NO_WAIT","< LEDC fade function will return immediately"],["ledc_fade_mode_t_LEDC_FADE_WAIT_DONE","< LEDC fade function will block until fading to the target duty"],["ledc_intr_type_t_LEDC_INTR_DISABLE","< Disable LEDC interrupt"],["ledc_intr_type_t_LEDC_INTR_FADE_END","< Enable LEDC interrupt"],["ledc_intr_type_t_LEDC_INTR_MAX",""],["ledc_mode_t_LEDC_LOW_SPEED_MODE","< LEDC low speed speed_mode"],["ledc_mode_t_LEDC_SPEED_MODE_MAX","< LEDC speed limit"],["ledc_slow_clk_sel_t_LEDC_SLOW_CLK_APB","< LEDC low speed timer clock source is 80MHz APB clock"],["ledc_slow_clk_sel_t_LEDC_SLOW_CLK_RTC8M","< LEDC low speed timer clock source is 8MHz RTC clock"],["ledc_slow_clk_sel_t_LEDC_SLOW_CLK_XTAL","< LEDC low speed timer clock source XTAL clock"],["ledc_timer_bit_t_LEDC_TIMER_10_BIT","< LEDC PWM duty resolution of 10 bits"],["ledc_timer_bit_t_LEDC_TIMER_11_BIT","< LEDC PWM duty resolution of 11 bits"],["ledc_timer_bit_t_LEDC_TIMER_12_BIT","< LEDC PWM duty resolution of 12 bits"],["ledc_timer_bit_t_LEDC_TIMER_13_BIT","< LEDC PWM duty resolution of 13 bits"],["ledc_timer_bit_t_LEDC_TIMER_14_BIT","< LEDC PWM duty resolution of 14 bits"],["ledc_timer_bit_t_LEDC_TIMER_1_BIT","< LEDC PWM duty resolution of  1 bits"],["ledc_timer_bit_t_LEDC_TIMER_2_BIT","< LEDC PWM duty resolution of  2 bits"],["ledc_timer_bit_t_LEDC_TIMER_3_BIT","< LEDC PWM duty resolution of  3 bits"],["ledc_timer_bit_t_LEDC_TIMER_4_BIT","< LEDC PWM duty resolution of  4 bits"],["ledc_timer_bit_t_LEDC_TIMER_5_BIT","< LEDC PWM duty resolution of  5 bits"],["ledc_timer_bit_t_LEDC_TIMER_6_BIT","< LEDC PWM duty resolution of  6 bits"],["ledc_timer_bit_t_LEDC_TIMER_7_BIT","< LEDC PWM duty resolution of  7 bits"],["ledc_timer_bit_t_LEDC_TIMER_8_BIT","< LEDC PWM duty resolution of  8 bits"],["ledc_timer_bit_t_LEDC_TIMER_9_BIT","< LEDC PWM duty resolution of  9 bits"],["ledc_timer_bit_t_LEDC_TIMER_BIT_MAX",""],["ledc_timer_t_LEDC_TIMER_0","< LEDC timer 0"],["ledc_timer_t_LEDC_TIMER_1","< LEDC timer 1"],["ledc_timer_t_LEDC_TIMER_2","< LEDC timer 2"],["ledc_timer_t_LEDC_TIMER_3","< LEDC timer 3"],["ledc_timer_t_LEDC_TIMER_MAX",""],["lwip_iana_hwtype_LWIP_IANA_HWTYPE_ETHERNET","Ethernet"],["lwip_iana_port_number_LWIP_IANA_PORT_DHCP_CLIENT","DHCP client"],["lwip_iana_port_number_LWIP_IANA_PORT_DHCP_SERVER","DHCP server"],["lwip_iana_port_number_LWIP_IANA_PORT_HTTP","HTTP"],["lwip_iana_port_number_LWIP_IANA_PORT_HTTPS","HTTPS"],["lwip_iana_port_number_LWIP_IANA_PORT_MDNS","MDNS"],["lwip_iana_port_number_LWIP_IANA_PORT_MQTT","MQTT"],["lwip_iana_port_number_LWIP_IANA_PORT_NETBIOS","NETBIOS"],["lwip_iana_port_number_LWIP_IANA_PORT_SECURE_MQTT","Secure MQTT"],["lwip_iana_port_number_LWIP_IANA_PORT_SMTP","SMTP"],["lwip_iana_port_number_LWIP_IANA_PORT_SMTPS","SMTPS"],["lwip_iana_port_number_LWIP_IANA_PORT_SNMP","SNMP"],["lwip_iana_port_number_LWIP_IANA_PORT_SNMP_TRAP","SNMP traps"],["lwip_iana_port_number_LWIP_IANA_PORT_SNTP","SNTP"],["lwip_iana_port_number_LWIP_IANA_PORT_TFTP","TFTP"],["lwip_internal_netif_client_data_index_LWIP_NETIF_CLIENT_DATA_INDEX_DHCP",""],["lwip_internal_netif_client_data_index_LWIP_NETIF_CLIENT_DATA_INDEX_IGMP",""],["lwip_internal_netif_client_data_index_LWIP_NETIF_CLIENT_DATA_INDEX_MAX",""],["lwip_internal_netif_client_data_index_LWIP_NETIF_CLIENT_DATA_INDEX_MLD6",""],["lwip_ip_addr_type_IPADDR_TYPE_ANY","IPv4+IPv6 (“dual-stack”)"],["lwip_ip_addr_type_IPADDR_TYPE_V4","IPv4"],["lwip_ip_addr_type_IPADDR_TYPE_V6","IPv6"],["lwip_ipv6_scope_type_IP6_MULTICAST","Multicast"],["lwip_ipv6_scope_type_IP6_UNICAST","Unicast"],["lwip_ipv6_scope_type_IP6_UNKNOWN","Unknown"],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_3DES","< The Triple DES cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_AES","< The AES cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_ARC4","< The RC4 cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_ARIA","< The Aria cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_BLOWFISH","< The Blowfish cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_CAMELLIA","< The Camellia cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_CHACHA20","< The ChaCha20 cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_DES","< The DES cipher."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_NONE","< Placeholder to mark the end of cipher ID lists."],["mbedtls_cipher_id_t_MBEDTLS_CIPHER_ID_NULL","< The identity cipher, treated as a stream cipher."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_CBC","< The CBC cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_CCM","< The CCM cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_CFB","< The CFB cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_CHACHAPOLY","< The ChaCha-Poly cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_CTR","< The CTR cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_ECB","< The ECB cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_GCM","< The GCM cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_NONE","< None."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_OFB","< The OFB cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_STREAM","< The stream cipher mode."],["mbedtls_cipher_mode_t_MBEDTLS_MODE_XTS","< The XTS cipher mode."],["mbedtls_cipher_padding_t_MBEDTLS_PADDING_NONE","< Never pad (full blocks only)."],["mbedtls_cipher_padding_t_MBEDTLS_PADDING_ONE_AND_ZEROS","< ISO/IEC 7816-4 padding."],["mbedtls_cipher_padding_t_MBEDTLS_PADDING_PKCS7","< PKCS7 padding (default)."],["mbedtls_cipher_padding_t_MBEDTLS_PADDING_ZEROS","< Zero padding (not reversible)."],["mbedtls_cipher_padding_t_MBEDTLS_PADDING_ZEROS_AND_LEN","< ANSI X.923 padding."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CBC","< AES cipher with 128-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CCM","< AES cipher with 128-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CFB128","< AES cipher with 128-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_CTR","< AES cipher with 128-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_ECB","< AES cipher with 128-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_GCM","< AES cipher with 128-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_OFB","< AES 128-bit cipher in OFB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_128_XTS","< AES 128-bit cipher in XTS block mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CBC","< AES cipher with 192-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CCM","< AES cipher with 192-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CFB128","< AES cipher with 192-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_CTR","< AES cipher with 192-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_ECB","< AES cipher with 192-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_GCM","< AES cipher with 192-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_192_OFB","< AES 192-bit cipher in OFB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CBC","< AES cipher with 256-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CCM","< AES cipher with 256-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CFB128","< AES cipher with 256-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_CTR","< AES cipher with 256-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_ECB","< AES cipher with 256-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_GCM","< AES cipher with 256-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_OFB","< AES 256-bit cipher in OFB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_AES_256_XTS","< AES 256-bit cipher in XTS block mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARC4_128","< RC4 cipher with 128-bit mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CBC","< Aria cipher with 128-bit key and CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CCM","< Aria cipher with 128-bit key and CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CFB128","< Aria cipher with 128-bit key and CFB-128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_CTR","< Aria cipher with 128-bit key and CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_ECB","< Aria cipher with 128-bit key and ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_128_GCM","< Aria cipher with 128-bit key and GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CBC","< Aria cipher with 192-bit key and CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CCM","< Aria cipher with 192-bit key and CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CFB128","< Aria cipher with 192-bit key and CFB-128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_CTR","< Aria cipher with 192-bit key and CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_ECB","< Aria cipher with 192-bit key and ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_192_GCM","< Aria cipher with 192-bit key and GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CBC","< Aria cipher with 256-bit key and CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CCM","< Aria cipher with 256-bit key and CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CFB128","< Aria cipher with 256-bit key and CFB-128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_CTR","< Aria cipher with 256-bit key and CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_ECB","< Aria cipher with 256-bit key and ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_ARIA_256_GCM","< Aria cipher with 256-bit key and GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_BLOWFISH_CBC","< Blowfish cipher with CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_BLOWFISH_CFB64","< Blowfish cipher with CFB64 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_BLOWFISH_CTR","< Blowfish cipher with CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_BLOWFISH_ECB","< Blowfish cipher with ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CBC","< Camellia cipher with 128-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CCM","< Camellia cipher with 128-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CFB128","< Camellia cipher with 128-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_CTR","< Camellia cipher with 128-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_ECB","< Camellia cipher with 128-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_128_GCM","< Camellia cipher with 128-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CBC","< Camellia cipher with 192-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CCM","< Camellia cipher with 192-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CFB128","< Camellia cipher with 192-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_CTR","< Camellia cipher with 192-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_ECB","< Camellia cipher with 192-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_192_GCM","< Camellia cipher with 192-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CBC","< Camellia cipher with 256-bit CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CCM","< Camellia cipher with 256-bit CCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CFB128","< Camellia cipher with 256-bit CFB128 mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_CTR","< Camellia cipher with 256-bit CTR mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_ECB","< Camellia cipher with 256-bit ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CAMELLIA_256_GCM","< Camellia cipher with 256-bit GCM mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CHACHA20","< ChaCha20 stream cipher."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_CHACHA20_POLY1305","< ChaCha20-Poly1305 AEAD cipher."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_CBC","< DES cipher with CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_ECB","< DES cipher with ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE3_CBC","< DES cipher with EDE3 CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE3_ECB","< DES cipher with EDE3 ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE_CBC","< DES cipher with EDE CBC mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_DES_EDE_ECB","< DES cipher with EDE ECB mode."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_NONE","< Placeholder to mark the end of cipher-pair lists."],["mbedtls_cipher_type_t_MBEDTLS_CIPHER_NULL","< The identity stream cipher."],["mbedtls_ecdh_side_MBEDTLS_ECDH_OURS","< Our key."],["mbedtls_ecdh_side_MBEDTLS_ECDH_THEIRS","< The key of the peer."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP256R1","< Domain parameters for 256-bit Brainpool curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP384R1","< Domain parameters for 384-bit Brainpool curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_BP512R1","< Domain parameters for 512-bit Brainpool curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_CURVE25519","< Domain parameters for Curve25519."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_CURVE448","< Domain parameters for Curve448."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_NONE","< Curve not defined."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP192K1","< Domain parameters for 192-bit “Koblitz” curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP192R1","< Domain parameters for the 192-bit curve defined by FIPS 186-4 and SEC1."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP224K1","< Domain parameters for 224-bit “Koblitz” curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP224R1","< Domain parameters for the 224-bit curve defined by FIPS 186-4 and SEC1."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP256K1","< Domain parameters for 256-bit “Koblitz” curve."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP256R1","< Domain parameters for the 256-bit curve defined by FIPS 186-4 and SEC1."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP384R1","< Domain parameters for the 384-bit curve defined by FIPS 186-4 and SEC1."],["mbedtls_ecp_group_id_MBEDTLS_ECP_DP_SECP521R1","< Domain parameters for the 521-bit curve defined by FIPS 186-4 and SEC1."],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_DHE_PSK",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_DHE_RSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_PSK",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECDH_RSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_ECJPAKE",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_NONE",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_PSK",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_RSA",""],["mbedtls_key_exchange_type_t_MBEDTLS_KEY_EXCHANGE_RSA_PSK",""],["mbedtls_md_type_t_MBEDTLS_MD_MD2","< The MD2 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_MD4","< The MD4 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_MD5","< The MD5 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_NONE","< None."],["mbedtls_md_type_t_MBEDTLS_MD_RIPEMD160","< The RIPEMD-160 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_SHA1","< The SHA-1 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_SHA224","< The SHA-224 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_SHA256","< The SHA-256 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_SHA384","< The SHA-384 message digest."],["mbedtls_md_type_t_MBEDTLS_MD_SHA512","< The SHA-512 message digest."],["mbedtls_mpi_gen_prime_flag_t_MBEDTLS_MPI_GEN_PRIME_FLAG_DH","< (X-1)/2 is prime too"],["mbedtls_mpi_gen_prime_flag_t_MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR","< lower error rate from 2-80 to 2-128"],["mbedtls_operation_t_MBEDTLS_DECRYPT",""],["mbedtls_operation_t_MBEDTLS_ENCRYPT",""],["mbedtls_operation_t_MBEDTLS_OPERATION_NONE",""],["mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_ECP",""],["mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_MPI",""],["mbedtls_pk_debug_type_MBEDTLS_PK_DEBUG_NONE",""],["mbedtls_pk_type_t_MBEDTLS_PK_ECDSA",""],["mbedtls_pk_type_t_MBEDTLS_PK_ECKEY",""],["mbedtls_pk_type_t_MBEDTLS_PK_ECKEY_DH",""],["mbedtls_pk_type_t_MBEDTLS_PK_NONE",""],["mbedtls_pk_type_t_MBEDTLS_PK_RSA",""],["mbedtls_pk_type_t_MBEDTLS_PK_RSASSA_PSS",""],["mbedtls_pk_type_t_MBEDTLS_PK_RSA_ALT",""],["mbedtls_ssl_states_MBEDTLS_SSL_CERTIFICATE_REQUEST",""],["mbedtls_ssl_states_MBEDTLS_SSL_CERTIFICATE_VERIFY",""],["mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CERTIFICATE",""],["mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC",""],["mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_FINISHED",""],["mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_HELLO",""],["mbedtls_ssl_states_MBEDTLS_SSL_CLIENT_KEY_EXCHANGE",""],["mbedtls_ssl_states_MBEDTLS_SSL_FLUSH_BUFFERS",""],["mbedtls_ssl_states_MBEDTLS_SSL_HANDSHAKE_OVER",""],["mbedtls_ssl_states_MBEDTLS_SSL_HANDSHAKE_WRAPUP",""],["mbedtls_ssl_states_MBEDTLS_SSL_HELLO_REQUEST",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CERTIFICATE",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_FINISHED",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO_DONE",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_HELLO_VERIFY_REQUEST_SENT",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_KEY_EXCHANGE",""],["mbedtls_ssl_states_MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET",""],["mdns_if_internal_MDNS_IF_AP",""],["mdns_if_internal_MDNS_IF_ETH",""],["mdns_if_internal_MDNS_IF_MAX",""],["mdns_if_internal_MDNS_IF_STA",""],["mdns_ip_protocol_t_MDNS_IP_PROTOCOL_MAX",""],["mdns_ip_protocol_t_MDNS_IP_PROTOCOL_V4",""],["mdns_ip_protocol_t_MDNS_IP_PROTOCOL_V6",""],["memp_t_MEMP_ARP_QUEUE",""],["memp_t_MEMP_FRAG_PBUF",""],["memp_t_MEMP_IGMP_GROUP",""],["memp_t_MEMP_MAX",""],["memp_t_MEMP_MLD6_GROUP",""],["memp_t_MEMP_ND6_QUEUE",""],["memp_t_MEMP_NETBUF",""],["memp_t_MEMP_NETCONN",""],["memp_t_MEMP_NETDB",""],["memp_t_MEMP_PBUF",""],["memp_t_MEMP_PBUF_POOL",""],["memp_t_MEMP_RAW_PCB",""],["memp_t_MEMP_SYS_TIMEOUT",""],["memp_t_MEMP_TCPIP_MSG_API",""],["memp_t_MEMP_TCPIP_MSG_INPKT",""],["memp_t_MEMP_TCP_PCB",""],["memp_t_MEMP_TCP_PCB_LISTEN",""],["memp_t_MEMP_TCP_SEG",""],["memp_t_MEMP_UDP_PCB",""],["netif_mac_filter_action_NETIF_ADD_MAC_FILTER","Add a filter entry"],["netif_mac_filter_action_NETIF_DEL_MAC_FILTER","Delete a filter entry"],["nvs_open_mode_t_NVS_READONLY","< Read only"],["nvs_open_mode_t_NVS_READWRITE","< Read and write"],["nvs_type_t_NVS_TYPE_ANY","< Must be last"],["nvs_type_t_NVS_TYPE_BLOB","< Type blob"],["nvs_type_t_NVS_TYPE_I16","< Type int16_t"],["nvs_type_t_NVS_TYPE_I32","< Type int32_t"],["nvs_type_t_NVS_TYPE_I64","< Type int64_t"],["nvs_type_t_NVS_TYPE_I8","< Type int8_t"],["nvs_type_t_NVS_TYPE_STR","< Type string"],["nvs_type_t_NVS_TYPE_U16","< Type uint16_t"],["nvs_type_t_NVS_TYPE_U32","< Type uint32_t"],["nvs_type_t_NVS_TYPE_U64","< Type uint64_t"],["nvs_type_t_NVS_TYPE_U8","< Type uint8_t"],["panic_exception_t_PANIC_EXCEPTION_ABORT",""],["panic_exception_t_PANIC_EXCEPTION_DEBUG",""],["panic_exception_t_PANIC_EXCEPTION_FAULT",""],["panic_exception_t_PANIC_EXCEPTION_IWDT",""],["panic_exception_t_PANIC_EXCEPTION_TWDT",""],["pbuf_layer_PBUF_IP","Includes spare room for IP header. Use this if you intend to pass the pbuf to functions like raw_send()."],["pbuf_layer_PBUF_LINK","Includes spare room for link layer header (ethernet header). Use this if you intend to pass the pbuf to functions like ethernet_output(). @see PBUF_LINK_HLEN"],["pbuf_layer_PBUF_RAW","Use this for input packets in a netif driver when calling netif->input() in the most common case - ethernet-layer netif driver."],["pbuf_layer_PBUF_RAW_TX","Includes spare room for additional encapsulation header before ethernet headers (e.g. 802.11). Use this if you intend to pass the pbuf to functions like netif->linkoutput(). @see PBUF_LINK_ENCAPSULATION_HLEN"],["pbuf_layer_PBUF_TRANSPORT","Includes spare room for transport layer header, e.g. UDP header. Use this if you intend to pass the pbuf to functions like udp_send()."],["pbuf_type_PBUF_POOL","pbuf payload refers to RAM. This one comes from a pool and should be used for RX. Payload can be chained (scatter-gather RX) but like PBUF_RAM, struct pbuf and its payload are allocated in one piece of contiguous memory (so the first payload byte can be calculated from struct pbuf). Don’t use this for TX, if the pool becomes empty e.g. because of TCP queuing, you are unable to receive TCP acks!"],["pbuf_type_PBUF_RAM","pbuf data is stored in RAM, used for TX mostly, struct pbuf and its payload are allocated in one piece of contiguous memory (so the first payload byte can be calculated from struct pbuf). pbuf_alloc() allocates PBUF_RAM pbufs as unchained pbufs (although that might change in future versions). This should be used for all OUTGOING packets (TX)."],["pbuf_type_PBUF_REF","pbuf comes from the pbuf pool. Much like PBUF_ROM but payload might change so it has to be duplicated when queued before transmitting, depending on who has a ‘ref’ to it."],["pbuf_type_PBUF_ROM","pbuf data is stored in ROM, i.e. struct pbuf and its payload are located in totally different memory areas. Since it points to ROM, payload does not have to be copied when queued for transmission."],["pdBIG_ENDIAN",""],["pdFREERTOS_BIG_ENDIAN",""],["pdFREERTOS_ERRNO_EACCES",""],["pdFREERTOS_ERRNO_EADDRINUSE",""],["pdFREERTOS_ERRNO_EADDRNOTAVAIL",""],["pdFREERTOS_ERRNO_EAGAIN",""],["pdFREERTOS_ERRNO_EALREADY",""],["pdFREERTOS_ERRNO_EBADE",""],["pdFREERTOS_ERRNO_EBADF",""],["pdFREERTOS_ERRNO_EBUSY",""],["pdFREERTOS_ERRNO_ECANCELED",""],["pdFREERTOS_ERRNO_EEXIST",""],["pdFREERTOS_ERRNO_EFAULT",""],["pdFREERTOS_ERRNO_EFTYPE",""],["pdFREERTOS_ERRNO_EILSEQ",""],["pdFREERTOS_ERRNO_EINPROGRESS",""],["pdFREERTOS_ERRNO_EINTR",""],["pdFREERTOS_ERRNO_EINVAL",""],["pdFREERTOS_ERRNO_EIO",""],["pdFREERTOS_ERRNO_EISCONN",""],["pdFREERTOS_ERRNO_EISDIR",""],["pdFREERTOS_ERRNO_ENAMETOOLONG",""],["pdFREERTOS_ERRNO_ENMFILE",""],["pdFREERTOS_ERRNO_ENOBUFS",""],["pdFREERTOS_ERRNO_ENODEV",""],["pdFREERTOS_ERRNO_ENOENT",""],["pdFREERTOS_ERRNO_ENOMEDIUM",""],["pdFREERTOS_ERRNO_ENOMEM",""],["pdFREERTOS_ERRNO_ENOPROTOOPT",""],["pdFREERTOS_ERRNO_ENOSPC",""],["pdFREERTOS_ERRNO_ENOTCONN",""],["pdFREERTOS_ERRNO_ENOTDIR",""],["pdFREERTOS_ERRNO_ENOTEMPTY",""],["pdFREERTOS_ERRNO_ENXIO",""],["pdFREERTOS_ERRNO_EOPNOTSUPP",""],["pdFREERTOS_ERRNO_EROFS",""],["pdFREERTOS_ERRNO_ESPIPE",""],["pdFREERTOS_ERRNO_ETIMEDOUT",""],["pdFREERTOS_ERRNO_EUNATCH",""],["pdFREERTOS_ERRNO_EWOULDBLOCK",""],["pdFREERTOS_ERRNO_EXDEV",""],["pdFREERTOS_ERRNO_NONE",""],["pdFREERTOS_LITTLE_ENDIAN",""],["pdINTEGRITY_CHECK_VALUE",""],["pdLITTLE_ENDIAN",""],["periph_interrput_t_ETS_AES_INTR_SOURCE","< interrupt of AES accelerator, level"],["periph_interrput_t_ETS_APB_ADC_INTR_SOURCE","< interrupt of APB ADC, LEVEL"],["periph_interrput_t_ETS_APB_CTRL_INTR_SOURCE","< interrupt of APB ctrl, ?"],["periph_interrput_t_ETS_ASSIST_DEBUG_INTR_SOURCE","< interrupt of Assist debug module, LEVEL"],["periph_interrput_t_ETS_BAK_PMS_VIOLATE_INTR_SOURCE",""],["periph_interrput_t_ETS_BT_BB_INTR_SOURCE","< interrupt of BT BB, level"],["periph_interrput_t_ETS_BT_BB_NMI_SOURCE","< interrupt of BT BB, NMI, use if BB have bug to fix in NMI"],["periph_interrput_t_ETS_BT_MAC_INTR_SOURCE","< will be cancelled"],["periph_interrput_t_ETS_CACHE_CORE0_ACS_INTR_SOURCE",""],["periph_interrput_t_ETS_CACHE_IA_INTR_SOURCE","< interrupt of Cache Invalied Access, LEVEL"],["periph_interrput_t_ETS_CORE0_DRAM0_PMS_INTR_SOURCE",""],["periph_interrput_t_ETS_CORE0_IRAM0_PMS_INTR_SOURCE",""],["periph_interrput_t_ETS_CORE0_PIF_PMS_INTR_SOURCE",""],["periph_interrput_t_ETS_CORE0_PIF_PMS_SIZE_INTR_SOURCE",""],["periph_interrput_t_ETS_DMA_APBPERI_PMS_INTR_SOURCE",""],["periph_interrput_t_ETS_DMA_CH0_INTR_SOURCE","< interrupt of general DMA channel 0, LEVEL"],["periph_interrput_t_ETS_DMA_CH1_INTR_SOURCE","< interrupt of general DMA channel 1, LEVEL"],["periph_interrput_t_ETS_DMA_CH2_INTR_SOURCE","< interrupt of general DMA channel 2, LEVEL"],["periph_interrput_t_ETS_EFUSE_INTR_SOURCE","< interrupt of efuse, level, not likely to use"],["periph_interrput_t_ETS_FROM_CPU_INTR0_SOURCE","< interrupt0 generated from a CPU, level"],["periph_interrput_t_ETS_FROM_CPU_INTR1_SOURCE","< interrupt1 generated from a CPU, level"],["periph_interrput_t_ETS_FROM_CPU_INTR2_SOURCE","< interrupt2 generated from a CPU, level"],["periph_interrput_t_ETS_FROM_CPU_INTR3_SOURCE","< interrupt3 generated from a CPU, level"],["periph_interrput_t_ETS_GPIO_INTR_SOURCE","< interrupt of GPIO, level"],["periph_interrput_t_ETS_GPIO_NMI_SOURCE","< interrupt of GPIO, NMI"],["periph_interrput_t_ETS_I2C_EXT0_INTR_SOURCE","< interrupt of I2C controller1, level"],["periph_interrput_t_ETS_I2C_MASTER_SOURCE","< interrupt of I2C Master, level"],["periph_interrput_t_ETS_I2S1_INTR_SOURCE","< interrupt of I2S1, level"],["periph_interrput_t_ETS_ICACHE_PRELOAD0_INTR_SOURCE","< interrupt of ICache perload operation, LEVEL"],["periph_interrput_t_ETS_ICACHE_SYNC0_INTR_SOURCE","< interrupt of instruction cache sync done, LEVEL"],["periph_interrput_t_ETS_LEDC_INTR_SOURCE","< interrupt of LED PWM, level"],["periph_interrput_t_ETS_MAX_INTR_SOURCE",""],["periph_interrput_t_ETS_RMT_INTR_SOURCE","< interrupt of remote controller, level"],["periph_interrput_t_ETS_RSA_INTR_SOURCE","< interrupt of RSA accelerator, level"],["periph_interrput_t_ETS_RTC_CORE_INTR_SOURCE","< interrupt of rtc core, level, include rtc watchdog"],["periph_interrput_t_ETS_RWBLE_INTR_SOURCE","< interrupt of RWBLE, level"],["periph_interrput_t_ETS_RWBLE_NMI_SOURCE","< interrupt of RWBLE, NMI, use if RWBT have bug to fix in NMI"],["periph_interrput_t_ETS_RWBT_INTR_SOURCE","< interrupt of RWBT, level"],["periph_interrput_t_ETS_RWBT_NMI_SOURCE","< interrupt of RWBT, NMI, use if RWBT have bug to fix in NMI"],["periph_interrput_t_ETS_SHA_INTR_SOURCE","< interrupt of SHA accelerator, level"],["periph_interrput_t_ETS_SLC0_INTR_SOURCE","< interrupt of SLC0, level"],["periph_interrput_t_ETS_SLC1_INTR_SOURCE","< interrupt of SLC1, level"],["periph_interrput_t_ETS_SPI1_INTR_SOURCE","< interrupt of SPI1, level, SPI1 is for flash read/write, do not use this"],["periph_interrput_t_ETS_SPI2_INTR_SOURCE","< interrupt of SPI2, level"],["periph_interrput_t_ETS_SPI_MEM_REJECT_CACHE_INTR_SOURCE","< interrupt of SPI0 Cache access and SPI1 access rejected, LEVEL"],["periph_interrput_t_ETS_SYSTIMER_TARGET0_EDGE_INTR_SOURCE","< interrupt of system timer 0, EDGE"],["periph_interrput_t_ETS_SYSTIMER_TARGET1_EDGE_INTR_SOURCE","< interrupt of system timer 1, EDGE"],["periph_interrput_t_ETS_SYSTIMER_TARGET2_EDGE_INTR_SOURCE","< interrupt of system timer 2, EDGE"],["periph_interrput_t_ETS_TG0_T0_LEVEL_INTR_SOURCE","< interrupt of TIMER_GROUP0, TIMER0, level"],["periph_interrput_t_ETS_TG0_WDT_LEVEL_INTR_SOURCE","< interrupt of TIMER_GROUP0, WATCH DOG, level"],["periph_interrput_t_ETS_TG1_T0_LEVEL_INTR_SOURCE","< interrupt of TIMER_GROUP1, TIMER0, level"],["periph_interrput_t_ETS_TG1_WDT_LEVEL_INTR_SOURCE","< interrupt of TIMER_GROUP1, WATCHDOG, level"],["periph_interrput_t_ETS_TIMER1_INTR_SOURCE",""],["periph_interrput_t_ETS_TIMER2_INTR_SOURCE",""],["periph_interrput_t_ETS_TWAI_INTR_SOURCE","< interrupt of can, level"],["periph_interrput_t_ETS_UART0_INTR_SOURCE","< interrupt of UART0, level"],["periph_interrput_t_ETS_UART1_INTR_SOURCE","< interrupt of UART1, level"],["periph_interrput_t_ETS_UHCI0_INTR_SOURCE","< interrupt of UHCI0, level"],["periph_interrput_t_ETS_USB_INTR_SOURCE","< interrupt of USB, level"],["periph_interrput_t_ETS_WIFI_BB_INTR_SOURCE","< interrupt of WiFi BB, level, we can do some calibartion"],["periph_interrput_t_ETS_WIFI_MAC_INTR_SOURCE","< interrupt of WiFi MAC, level"],["periph_interrput_t_ETS_WIFI_MAC_NMI_SOURCE","< interrupt of WiFi MAC, NMI, use if MAC have bug to fix in NMI"],["periph_interrput_t_ETS_WIFI_PWR_INTR_SOURCE","<"],["periph_module_t_PERIPH_AES_MODULE",""],["periph_module_t_PERIPH_BT_BASEBAND_MODULE",""],["periph_module_t_PERIPH_BT_LC_MODULE",""],["periph_module_t_PERIPH_BT_MODULE",""],["periph_module_t_PERIPH_DS_MODULE",""],["periph_module_t_PERIPH_GDMA_MODULE",""],["periph_module_t_PERIPH_HMAC_MODULE",""],["periph_module_t_PERIPH_I2C0_MODULE",""],["periph_module_t_PERIPH_I2S1_MODULE",""],["periph_module_t_PERIPH_LEDC_MODULE",""],["periph_module_t_PERIPH_MODULE_MAX",""],["periph_module_t_PERIPH_RMT_MODULE",""],["periph_module_t_PERIPH_RNG_MODULE",""],["periph_module_t_PERIPH_RSA_MODULE",""],["periph_module_t_PERIPH_SARADC_MODULE",""],["periph_module_t_PERIPH_SHA_MODULE",""],["periph_module_t_PERIPH_SPI2_MODULE",""],["periph_module_t_PERIPH_SPI_MODULE",""],["periph_module_t_PERIPH_SYSTIMER_MODULE",""],["periph_module_t_PERIPH_TIMG0_MODULE",""],["periph_module_t_PERIPH_TIMG1_MODULE",""],["periph_module_t_PERIPH_TWAI_MODULE",""],["periph_module_t_PERIPH_UART0_MODULE",""],["periph_module_t_PERIPH_UART1_MODULE",""],["periph_module_t_PERIPH_UHCI0_MODULE",""],["periph_module_t_PERIPH_USB_DEVICE_MODULE",""],["periph_module_t_PERIPH_WIFI_BT_COMMON_MODULE",""],["periph_module_t_PERIPH_WIFI_MODULE",""],["portBYTE_ALIGNMENT",""],["portBYTE_ALIGNMENT_MASK",""],["portCRITICAL_NESTING_IN_TCB",""],["portHAS_STACK_OVERFLOW_CHECKING",""],["portMUX_FREE_VAL",""],["portMUX_NO_TIMEOUT",""],["portMUX_TRY_LOCK",""],["portNUM_CONFIGURABLE_REGIONS",""],["portNUM_PROCESSORS",""],["portSTACK_GROWTH",""],["portStackMemoryCaps",""],["portTICK_TYPE_IS_ATOMIC",""],["portTcbMemoryCaps",""],["portUSING_MPU_WRAPPERS",""],["rmt_carrier_level_t_RMT_CARRIER_LEVEL_HIGH","< RMT carrier wave is modulated for high Level output"],["rmt_carrier_level_t_RMT_CARRIER_LEVEL_LOW","< RMT carrier wave is modulated for low Level output"],["rmt_carrier_level_t_RMT_CARRIER_LEVEL_MAX",""],["rmt_channel_status_t_RMT_CHANNEL_BUSY","< RMT channel status busy"],["rmt_channel_status_t_RMT_CHANNEL_IDLE","< RMT channel status idle"],["rmt_channel_status_t_RMT_CHANNEL_UNINIT","< RMT channel uninitialized"],["rmt_channel_t_RMT_CHANNEL_0","< RMT channel number 0"],["rmt_channel_t_RMT_CHANNEL_1","< RMT channel number 1"],["rmt_channel_t_RMT_CHANNEL_2","< RMT channel number 2"],["rmt_channel_t_RMT_CHANNEL_3","< RMT channel number 3"],["rmt_channel_t_RMT_CHANNEL_MAX","< Number of RMT channels"],["rmt_data_mode_t_RMT_DATA_MODE_FIFO",""],["rmt_data_mode_t_RMT_DATA_MODE_MAX",""],["rmt_data_mode_t_RMT_DATA_MODE_MEM",""],["rmt_idle_level_t_RMT_IDLE_LEVEL_HIGH","< RMT TX idle level: high Level"],["rmt_idle_level_t_RMT_IDLE_LEVEL_LOW","< RMT TX idle level: low Level"],["rmt_idle_level_t_RMT_IDLE_LEVEL_MAX",""],["rmt_mem_owner_t_RMT_MEM_OWNER_MAX",""],["rmt_mem_owner_t_RMT_MEM_OWNER_RX","< RMT RX mode, RMT receiver owns the memory block"],["rmt_mem_owner_t_RMT_MEM_OWNER_TX","< RMT RX mode, RMT transmitter owns the memory block"],["rmt_mode_t_RMT_MODE_MAX",""],["rmt_mode_t_RMT_MODE_RX","< RMT RX mode"],["rmt_mode_t_RMT_MODE_TX","< RMT TX mode"],["rmt_source_clk_t_RMT_BASECLK_APB","< RMT source clock is APB CLK, 80Mhz by default"],["rmt_source_clk_t_RMT_BASECLK_MAX",""],["rmt_source_clk_t_RMT_BASECLK_XTAL","< RMT source clock is XTAL clock, 40Mhz by default"],["rtc_cal_sel_t_RTC_CAL_32K_XTAL","!< External 32 kHz XTAL"],["rtc_cal_sel_t_RTC_CAL_8MD256","!< Internal 8 MHz RC oscillator, divided by 256"],["rtc_cal_sel_t_RTC_CAL_RTC_MUX","!< Currently selected RTC SLOW_CLK"],["rtc_cpu_freq_src_t_RTC_CPU_FREQ_SRC_8M","!< Internal 8M RTC oscillator"],["rtc_cpu_freq_src_t_RTC_CPU_FREQ_SRC_APLL","!< APLL"],["rtc_cpu_freq_src_t_RTC_CPU_FREQ_SRC_PLL","!< PLL (480M or 320M)"],["rtc_cpu_freq_src_t_RTC_CPU_FREQ_SRC_XTAL","!< XTAL"],["rtc_cpu_freq_t_RTC_CPU_320M_160M","!< for test"],["rtc_cpu_freq_t_RTC_CPU_320M_80M","!< for test"],["rtc_cpu_freq_t_RTC_CPU_FREQ_160M","!< 160 MHz"],["rtc_cpu_freq_t_RTC_CPU_FREQ_240M","!< 240 MHz"],["rtc_cpu_freq_t_RTC_CPU_FREQ_2M","!< 2 MHz"],["rtc_cpu_freq_t_RTC_CPU_FREQ_80M","!< 80 MHz"],["rtc_cpu_freq_t_RTC_CPU_FREQ_XTAL","!< Main XTAL frequency"],["rtc_cpu_freq_t_RTC_CPU_FREQ_XTAL_DIV2","!< XTAL/2 after reset"],["rtc_fast_freq_t_RTC_FAST_FREQ_8M","!< Internal 8 MHz RC oscillator"],["rtc_fast_freq_t_RTC_FAST_FREQ_XTALD4","!< Main XTAL, divided by 4"],["rtc_gpio_mode_t_RTC_GPIO_MODE_DISABLED","< Pad (output + input) disable"],["rtc_gpio_mode_t_RTC_GPIO_MODE_INPUT_ONLY","< Pad input"],["rtc_gpio_mode_t_RTC_GPIO_MODE_INPUT_OUTPUT","< Pad input + output"],["rtc_gpio_mode_t_RTC_GPIO_MODE_INPUT_OUTPUT_OD","< Pad input + open-drain output"],["rtc_gpio_mode_t_RTC_GPIO_MODE_OUTPUT_OD","< Pad open-drain output"],["rtc_gpio_mode_t_RTC_GPIO_MODE_OUTPUT_ONLY","< Pad output"],["rtc_slow_freq_t_RTC_SLOW_FREQ_32K_XTAL","!< External 32 kHz XTAL"],["rtc_slow_freq_t_RTC_SLOW_FREQ_8MD256","!< Internal 8 MHz RC oscillator, divided by 256"],["rtc_slow_freq_t_RTC_SLOW_FREQ_RTC","!< Internal 150 kHz RC oscillator"],["rtc_xtal_freq_t_RTC_XTAL_FREQ_32M",""],["rtc_xtal_freq_t_RTC_XTAL_FREQ_40M","!< 40 MHz XTAL"],["sigmadelta_channel_t_SIGMADELTA_CHANNEL_0","< Sigma-delta channel 0"],["sigmadelta_channel_t_SIGMADELTA_CHANNEL_1","< Sigma-delta channel 1"],["sigmadelta_channel_t_SIGMADELTA_CHANNEL_2","< Sigma-delta channel 2"],["sigmadelta_channel_t_SIGMADELTA_CHANNEL_3","< Sigma-delta channel 3"],["sigmadelta_channel_t_SIGMADELTA_CHANNEL_MAX","< Sigma-delta channel max"],["sigmadelta_port_t_SIGMADELTA_PORT_0","< SIGMADELTA port 0"],["sigmadelta_port_t_SIGMADELTA_PORT_MAX","< SIGMADELTA port max"],["sntp_sync_mode_t_SNTP_SYNC_MODE_IMMED","< Update system time immediately when receiving a response from the SNTP server."],["sntp_sync_mode_t_SNTP_SYNC_MODE_SMOOTH","< Smooth time updating. Time error is gradually reduced using adjtime function. If the difference between SNTP response time and system time is large (more than 35 minutes) then update immediately."],["sntp_sync_status_t_SNTP_SYNC_STATUS_COMPLETED",""],["sntp_sync_status_t_SNTP_SYNC_STATUS_IN_PROGRESS",""],["sntp_sync_status_t_SNTP_SYNC_STATUS_RESET",""],["spi_common_dma_t_SPI_DMA_CH_AUTO","< Enable DMA, channel is automatically selected by driver"],["spi_common_dma_t_SPI_DMA_DISABLED","< Do not enable DMA for SPI"],["spi_event_t_SPI_EV_BUF_RX","< The buffer has received data from master."],["spi_event_t_SPI_EV_BUF_TX","< The buffer has sent data to master."],["spi_event_t_SPI_EV_CMD9","< Received CMD9 from master."],["spi_event_t_SPI_EV_CMDA","< Received CMDA from master."],["spi_event_t_SPI_EV_RECV","< Slave has received certain number of data from master, the number is determined by Master."],["spi_event_t_SPI_EV_RECV_DMA_READY","< Slave has loaded its RX data buffer to the hardware (DMA)."],["spi_event_t_SPI_EV_SEND","< Master has received certain number of the data, the number is determined by Master."],["spi_event_t_SPI_EV_SEND_DMA_READY","< Slave has loaded its TX data buffer to the hardware (DMA)."],["spi_event_t_SPI_EV_TRANS","< A transaction has done"],["spi_flash_mmap_memory_t_SPI_FLASH_MMAP_DATA","< map to data memory (Vaddr0), allows byte-aligned access, 4 MB total"],["spi_flash_mmap_memory_t_SPI_FLASH_MMAP_INST","< map to instruction memory (Vaddr1-3), allows only 4-byte-aligned access, 11 MB total"],["spi_flash_wrap_mode_t_FLASH_WRAP_MODE_16B",""],["spi_flash_wrap_mode_t_FLASH_WRAP_MODE_32B",""],["spi_flash_wrap_mode_t_FLASH_WRAP_MODE_64B",""],["spi_flash_wrap_mode_t_FLASH_WRAP_MODE_8B",""],["spi_flash_wrap_mode_t_FLASH_WRAP_MODE_DISABLE",""],["spi_host_device_t_SPI1_HOST","< SPI1"],["spi_host_device_t_SPI2_HOST","< SPI2"],["spi_host_device_t_SPI3_HOST","< SPI3"],["system_event_id_t_SYSTEM_EVENT_ACTION_TX_STATUS","< Receive status of Action frame transmitted"],["system_event_id_t_SYSTEM_EVENT_AP_PROBEREQRECVED","< Receive probe request packet in soft-AP interface"],["system_event_id_t_SYSTEM_EVENT_AP_STACONNECTED","< a station connected to ESP32 soft-AP"],["system_event_id_t_SYSTEM_EVENT_AP_STADISCONNECTED","< a station disconnected from ESP32 soft-AP"],["system_event_id_t_SYSTEM_EVENT_AP_STAIPASSIGNED","< ESP32 soft-AP assign an IP to a connected station"],["system_event_id_t_SYSTEM_EVENT_AP_START","< ESP32 soft-AP start"],["system_event_id_t_SYSTEM_EVENT_AP_STOP","< ESP32 soft-AP stop"],["system_event_id_t_SYSTEM_EVENT_ETH_CONNECTED","< ESP32 ethernet phy link up"],["system_event_id_t_SYSTEM_EVENT_ETH_DISCONNECTED","< ESP32 ethernet phy link down"],["system_event_id_t_SYSTEM_EVENT_ETH_GOT_IP","< ESP32 ethernet got IP from connected AP"],["system_event_id_t_SYSTEM_EVENT_ETH_START","< ESP32 ethernet start"],["system_event_id_t_SYSTEM_EVENT_ETH_STOP","< ESP32 ethernet stop"],["system_event_id_t_SYSTEM_EVENT_FTM_REPORT","< Receive report of FTM procedure"],["system_event_id_t_SYSTEM_EVENT_GOT_IP6","< ESP32 station or ap or ethernet interface v6IP addr is preferred"],["system_event_id_t_SYSTEM_EVENT_MAX","< Number of members in this enum"],["system_event_id_t_SYSTEM_EVENT_ROC_DONE","< Indicates the completion of Remain-on-Channel operation status"],["system_event_id_t_SYSTEM_EVENT_SCAN_DONE","< ESP32 finish scanning AP"],["system_event_id_t_SYSTEM_EVENT_STA_AUTHMODE_CHANGE","< the auth mode of AP connected by ESP32 station changed"],["system_event_id_t_SYSTEM_EVENT_STA_BEACON_TIMEOUT","< ESP32 station beacon timeout"],["system_event_id_t_SYSTEM_EVENT_STA_BSS_RSSI_LOW","< ESP32 station connected BSS rssi goes below threshold"],["system_event_id_t_SYSTEM_EVENT_STA_CONNECTED","< ESP32 station connected to AP"],["system_event_id_t_SYSTEM_EVENT_STA_DISCONNECTED","< ESP32 station disconnected from AP"],["system_event_id_t_SYSTEM_EVENT_STA_GOT_IP","< ESP32 station got IP from connected AP"],["system_event_id_t_SYSTEM_EVENT_STA_LOST_IP","< ESP32 station lost IP and the IP is reset to 0"],["system_event_id_t_SYSTEM_EVENT_STA_START","< ESP32 station start"],["system_event_id_t_SYSTEM_EVENT_STA_STOP","< ESP32 station stop"],["system_event_id_t_SYSTEM_EVENT_STA_WPS_ER_FAILED","< ESP32 station wps fails in enrollee mode"],["system_event_id_t_SYSTEM_EVENT_STA_WPS_ER_PBC_OVERLAP","< ESP32 station wps overlap in enrollee mode"],["system_event_id_t_SYSTEM_EVENT_STA_WPS_ER_PIN","< ESP32 station wps pin code in enrollee mode"],["system_event_id_t_SYSTEM_EVENT_STA_WPS_ER_SUCCESS","< ESP32 station wps succeeds in enrollee mode"],["system_event_id_t_SYSTEM_EVENT_STA_WPS_ER_TIMEOUT","< ESP32 station wps timeout in enrollee mode"],["system_event_id_t_SYSTEM_EVENT_WIFI_READY","< ESP32 WiFi ready"],["tcpip_adapter_if_t_TCPIP_ADAPTER_IF_AP","< Wi-Fi soft-AP interface"],["tcpip_adapter_if_t_TCPIP_ADAPTER_IF_ETH","< Ethernet interface"],["tcpip_adapter_if_t_TCPIP_ADAPTER_IF_MAX",""],["tcpip_adapter_if_t_TCPIP_ADAPTER_IF_STA","< Wi-Fi STA (station) interface"],["tcpip_adapter_if_t_TCPIP_ADAPTER_IF_TEST","< tcpip stack test interface"],["timer_alarm_t_TIMER_ALARM_DIS","< Disable timer alarm"],["timer_alarm_t_TIMER_ALARM_EN","< Enable timer alarm"],["timer_alarm_t_TIMER_ALARM_MAX",""],["timer_autoreload_t_TIMER_AUTORELOAD_DIS","< Disable auto-reload: hardware will not load counter value after an alarm event"],["timer_autoreload_t_TIMER_AUTORELOAD_EN","< Enable auto-reload: hardware will load counter value after an alarm event"],["timer_autoreload_t_TIMER_AUTORELOAD_MAX",""],["timer_count_dir_t_TIMER_COUNT_DOWN","< Descending Count from cnt.high|cnt.low"],["timer_count_dir_t_TIMER_COUNT_MAX",""],["timer_count_dir_t_TIMER_COUNT_UP","< Ascending Count from Zero"],["timer_group_t_TIMER_GROUP_0","<Hw timer group 0"],["timer_group_t_TIMER_GROUP_1","<Hw timer group 1"],["timer_group_t_TIMER_GROUP_MAX",""],["timer_idx_t_TIMER_0","<Select timer0 of GROUPx"],["timer_idx_t_TIMER_MAX",""],["timer_intr_mode_t_TIMER_INTR_LEVEL","< Interrupt mode: level mode"],["timer_intr_mode_t_TIMER_INTR_MAX",""],["timer_intr_t_TIMER_INTR_NONE",""],["timer_intr_t_TIMER_INTR_T0","< interrupt of timer 0"],["timer_intr_t_TIMER_INTR_WDT","< interrupt of watchdog"],["timer_src_clk_t_TIMER_SRC_CLK_APB","< Select APB as the source clock"],["timer_src_clk_t_TIMER_SRC_CLK_XTAL","< Select XTAL as the source clock"],["timer_start_t_TIMER_PAUSE","<Pause timer counter"],["timer_start_t_TIMER_START","<Start timer counter"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_0","<Touch sensor charge / discharge speed, always zero"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_1","<Touch sensor charge / discharge speed, slowest"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_2","<Touch sensor charge / discharge speed"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_3","<Touch sensor charge / discharge speed"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_4","<Touch sensor charge / discharge speed"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_5","<Touch sensor charge / discharge speed"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_6","<Touch sensor charge / discharge speed"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_7","<Touch sensor charge / discharge speed, fast"],["touch_cnt_slope_t_TOUCH_PAD_SLOPE_MAX",""],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_128","<The filter mode is first-order IIR filter. The coefficient is 128."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_16","<The filter mode is first-order IIR filter. The coefficient is 16 (Typical value)."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_256","<The filter mode is first-order IIR filter. The coefficient is 256."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_32","<The filter mode is first-order IIR filter. The coefficient is 32."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_4","<The filter mode is first-order IIR filter. The coefficient is 4."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_64","<The filter mode is first-order IIR filter. The coefficient is 64."],["touch_filter_mode_t_TOUCH_PAD_FILTER_IIR_8","<The filter mode is first-order IIR filter. The coefficient is 8."],["touch_filter_mode_t_TOUCH_PAD_FILTER_JITTER","<The filter mode is jitter filter"],["touch_filter_mode_t_TOUCH_PAD_FILTER_MAX",""],["touch_fsm_mode_t_TOUCH_FSM_MODE_MAX",""],["touch_fsm_mode_t_TOUCH_FSM_MODE_SW","<To start touch FSM by software trigger"],["touch_fsm_mode_t_TOUCH_FSM_MODE_TIMER","<To start touch FSM by timer"],["touch_high_volt_t_TOUCH_HVOLT_2V4","<Touch sensor high reference voltage, 2.4V"],["touch_high_volt_t_TOUCH_HVOLT_2V5","<Touch sensor high reference voltage, 2.5V"],["touch_high_volt_t_TOUCH_HVOLT_2V6","<Touch sensor high reference voltage, 2.6V"],["touch_high_volt_t_TOUCH_HVOLT_2V7","<Touch sensor high reference voltage, 2.7V"],["touch_high_volt_t_TOUCH_HVOLT_KEEP","<Touch sensor high reference voltage, no change"],["touch_high_volt_t_TOUCH_HVOLT_MAX",""],["touch_low_volt_t_TOUCH_LVOLT_0V5","<Touch sensor low reference voltage, 0.5V"],["touch_low_volt_t_TOUCH_LVOLT_0V6","<Touch sensor low reference voltage, 0.6V"],["touch_low_volt_t_TOUCH_LVOLT_0V7","<Touch sensor low reference voltage, 0.7V"],["touch_low_volt_t_TOUCH_LVOLT_0V8","<Touch sensor low reference voltage, 0.8V"],["touch_low_volt_t_TOUCH_LVOLT_KEEP","<Touch sensor low reference voltage, no change"],["touch_low_volt_t_TOUCH_LVOLT_MAX",""],["touch_pad_conn_type_t_TOUCH_PAD_CONN_GND","<Idle status of touch channel is ground connection"],["touch_pad_conn_type_t_TOUCH_PAD_CONN_HIGHZ","<Idle status of touch channel is high resistance state"],["touch_pad_conn_type_t_TOUCH_PAD_CONN_MAX",""],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L0","<Denoise channel internal reference capacitance is 5pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L1","<Denoise channel internal reference capacitance is 6.4pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L2","<Denoise channel internal reference capacitance is 7.8pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L3","<Denoise channel internal reference capacitance is 9.2pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L4","<Denoise channel internal reference capacitance is 10.6pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L5","<Denoise channel internal reference capacitance is 12.0pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L6","<Denoise channel internal reference capacitance is 13.4pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_L7","<Denoise channel internal reference capacitance is 14.8pf"],["touch_pad_denoise_cap_t_TOUCH_PAD_DENOISE_CAP_MAX",""],["touch_pad_denoise_grade_t_TOUCH_PAD_DENOISE_BIT10","<Denoise range is 10bit"],["touch_pad_denoise_grade_t_TOUCH_PAD_DENOISE_BIT12","<Denoise range is 12bit"],["touch_pad_denoise_grade_t_TOUCH_PAD_DENOISE_BIT4","<Denoise range is 4bit"],["touch_pad_denoise_grade_t_TOUCH_PAD_DENOISE_BIT8","<Denoise range is 8bit"],["touch_pad_denoise_grade_t_TOUCH_PAD_DENOISE_MAX",""],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_ACTIVE","<Active for one of the enabled channels."],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_DONE","<Measurement done for one of the enabled channels."],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_INACTIVE","<Inactive for one of the enabled channels."],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_MAX",""],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_SCAN_DONE","<Measurement done for all the enabled channels."],["touch_pad_intr_mask_t_TOUCH_PAD_INTR_MASK_TIMEOUT","<Timeout for one of the enabled channels."],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L0","<The max equivalent capacitance in shield channel is 40pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L1","<The max equivalent capacitance in shield channel is 80pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L2","<The max equivalent capacitance in shield channel is 120pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L3","<The max equivalent capacitance in shield channel is 160pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L4","<The max equivalent capacitance in shield channel is 200pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L5","<The max equivalent capacitance in shield channel is 240pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L6","<The max equivalent capacitance in shield channel is 280pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_L7","<The max equivalent capacitance in shield channel is 320pf"],["touch_pad_shield_driver_t_TOUCH_PAD_SHIELD_DRV_MAX",""],["touch_pad_t_TOUCH_PAD_MAX",""],["touch_pad_t_TOUCH_PAD_NUM0","< Touch pad channel 0 is GPIO4(ESP32)"],["touch_pad_t_TOUCH_PAD_NUM1","< Touch pad channel 1 is GPIO0(ESP32) / GPIO1(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM2","< Touch pad channel 2 is GPIO2(ESP32) / GPIO2(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM3","< Touch pad channel 3 is GPIO15(ESP32) / GPIO3(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM4","< Touch pad channel 4 is GPIO13(ESP32) / GPIO4(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM5","< Touch pad channel 5 is GPIO12(ESP32) / GPIO5(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM6","< Touch pad channel 6 is GPIO14(ESP32) / GPIO6(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM7","< Touch pad channel 7 is GPIO27(ESP32) / GPIO7(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM8","< Touch pad channel 8 is GPIO33(ESP32) / GPIO8(ESP32-S2)"],["touch_pad_t_TOUCH_PAD_NUM9","< Touch pad channel 9 is GPIO32(ESP32) / GPIO9(ESP32-S2)"],["touch_smooth_mode_t_TOUCH_PAD_SMOOTH_IIR_2","<Filter the raw data. The coefficient is 2 (Typical value)."],["touch_smooth_mode_t_TOUCH_PAD_SMOOTH_IIR_4","<Filter the raw data. The coefficient is 4."],["touch_smooth_mode_t_TOUCH_PAD_SMOOTH_IIR_8","<Filter the raw data. The coefficient is 8."],["touch_smooth_mode_t_TOUCH_PAD_SMOOTH_MAX",""],["touch_smooth_mode_t_TOUCH_PAD_SMOOTH_OFF","<No filtering of raw data."],["touch_tie_opt_t_TOUCH_PAD_TIE_OPT_HIGH","<Initial level of charging voltage, high level"],["touch_tie_opt_t_TOUCH_PAD_TIE_OPT_LOW","<Initial level of charging voltage, low level"],["touch_tie_opt_t_TOUCH_PAD_TIE_OPT_MAX",""],["touch_trigger_mode_t_TOUCH_TRIGGER_ABOVE","<Touch interrupt will happen if counter value is larger than threshold."],["touch_trigger_mode_t_TOUCH_TRIGGER_BELOW","<Touch interrupt will happen if counter value is less than threshold."],["touch_trigger_mode_t_TOUCH_TRIGGER_MAX",""],["touch_trigger_src_t_TOUCH_TRIGGER_SOURCE_BOTH","< wakeup interrupt is generated if both SET1 and SET2 are “touched”"],["touch_trigger_src_t_TOUCH_TRIGGER_SOURCE_MAX",""],["touch_trigger_src_t_TOUCH_TRIGGER_SOURCE_SET1","< wakeup interrupt is generated if SET1 is “touched”"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_0V","<Touch sensor high reference voltage attenuation,   0V attenuation"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_0V5","<Touch sensor high reference voltage attenuation, 0.5V attenuation"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_1V","<Touch sensor high reference voltage attenuation, 1.0V attenuation"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_1V5","<Touch sensor high reference voltage attenuation, 1.5V attenuation"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_KEEP","<Touch sensor high reference voltage attenuation, no change"],["touch_volt_atten_t_TOUCH_HVOLT_ATTEN_MAX",""],["true_",""],["tskKERNEL_VERSION_BUILD",""],["tskKERNEL_VERSION_MAJOR",""],["tskKERNEL_VERSION_MINOR",""],["tskKERNEL_VERSION_NUMBER",""],["tskMPU_REGION_DEVICE_MEMORY",""],["tskMPU_REGION_EXECUTE_NEVER",""],["tskMPU_REGION_NORMAL_MEMORY",""],["tskMPU_REGION_READ_ONLY",""],["tskMPU_REGION_READ_WRITE",""],["tskNO_AFFINITY",""],["twai_mode_t_TWAI_MODE_LISTEN_ONLY","< The TWAI controller will not influence the bus (No transmissions or acknowledgments) but can receive messages"],["twai_mode_t_TWAI_MODE_NORMAL","< Normal operating mode where TWAI controller can send/receive/acknowledge messages"],["twai_mode_t_TWAI_MODE_NO_ACK","< Transmission does not require acknowledgment. Use this mode for self testing"],["twai_state_t_TWAI_STATE_BUS_OFF","< Bus-off state. The TWAI controller cannot participate in bus activities until it has recovered"],["twai_state_t_TWAI_STATE_RECOVERING","< Recovering state. The TWAI controller is undergoing bus recovery"],["twai_state_t_TWAI_STATE_RUNNING","< Running state. The TWAI controller can transmit and receive messages"],["twai_state_t_TWAI_STATE_STOPPED","< Stopped state. The TWAI controller will not participate in any TWAI bus activities"],["uart_event_type_t_UART_BREAK","< UART break event"],["uart_event_type_t_UART_BUFFER_FULL","< UART RX buffer full event"],["uart_event_type_t_UART_DATA","< UART data event"],["uart_event_type_t_UART_DATA_BREAK","< UART TX data and break event"],["uart_event_type_t_UART_EVENT_MAX","< UART event max index"],["uart_event_type_t_UART_FIFO_OVF","< UART FIFO overflow event"],["uart_event_type_t_UART_FRAME_ERR","< UART RX frame error event"],["uart_event_type_t_UART_PARITY_ERR","< UART RX parity event"],["uart_event_type_t_UART_PATTERN_DET","< UART pattern detected"],["uart_hw_flowcontrol_t_UART_HW_FLOWCTRL_CTS","< enable TX hardware flow control (cts)"],["uart_hw_flowcontrol_t_UART_HW_FLOWCTRL_CTS_RTS","< enable hardware flow control"],["uart_hw_flowcontrol_t_UART_HW_FLOWCTRL_DISABLE","< disable hardware flow control"],["uart_hw_flowcontrol_t_UART_HW_FLOWCTRL_MAX",""],["uart_hw_flowcontrol_t_UART_HW_FLOWCTRL_RTS","< enable RX hardware flow control (rts)"],["uart_mode_t_UART_MODE_IRDA","< mode: IRDA  UART mode"],["uart_mode_t_UART_MODE_RS485_APP_CTRL","< mode: application control RS485 UART mode (used for test purposes)"],["uart_mode_t_UART_MODE_RS485_COLLISION_DETECT","< mode: RS485 collision detection UART mode (used for test purposes)"],["uart_mode_t_UART_MODE_RS485_HALF_DUPLEX","< mode: half duplex RS485 UART mode control by RTS pin"],["uart_mode_t_UART_MODE_UART","< mode: regular UART mode"],["uart_parity_t_UART_PARITY_DISABLE","< Disable UART parity"],["uart_parity_t_UART_PARITY_EVEN","< Enable UART even parity"],["uart_parity_t_UART_PARITY_ODD","< Enable UART odd parity"],["uart_sclk_t_UART_SCLK_APB","< UART source clock from APB"],["uart_sclk_t_UART_SCLK_RTC","< UART source clock from RTC"],["uart_sclk_t_UART_SCLK_XTAL","< UART source clock from XTAL"],["uart_select_notif_t_UART_SELECT_ERROR_NOTIF",""],["uart_select_notif_t_UART_SELECT_READ_NOTIF",""],["uart_select_notif_t_UART_SELECT_WRITE_NOTIF",""],["uart_signal_inv_t_UART_SIGNAL_CTS_INV","< inverse the UART cts signal"],["uart_signal_inv_t_UART_SIGNAL_DSR_INV","< inverse the UART dsr signal"],["uart_signal_inv_t_UART_SIGNAL_DTR_INV","< inverse the UART dtr signal"],["uart_signal_inv_t_UART_SIGNAL_INV_DISABLE","< Disable UART signal inverse"],["uart_signal_inv_t_UART_SIGNAL_IRDA_RX_INV","< inverse the UART irda_rx signal"],["uart_signal_inv_t_UART_SIGNAL_IRDA_TX_INV","< inverse the UART irda_tx signal"],["uart_signal_inv_t_UART_SIGNAL_RTS_INV","< inverse the UART rts signal"],["uart_signal_inv_t_UART_SIGNAL_RXD_INV","< inverse the UART rxd signal"],["uart_signal_inv_t_UART_SIGNAL_TXD_INV","< inverse the UART txd signal"],["uart_stop_bits_t_UART_STOP_BITS_1","< stop bit: 1bit"],["uart_stop_bits_t_UART_STOP_BITS_1_5","< stop bit: 1.5bits"],["uart_stop_bits_t_UART_STOP_BITS_2","< stop bit: 2bits"],["uart_stop_bits_t_UART_STOP_BITS_MAX",""],["uart_word_length_t_UART_DATA_5_BITS","< word length: 5bits"],["uart_word_length_t_UART_DATA_6_BITS","< word length: 6bits"],["uart_word_length_t_UART_DATA_7_BITS","< word length: 7bits"],["uart_word_length_t_UART_DATA_8_BITS","< word length: 8bits"],["uart_word_length_t_UART_DATA_BITS_MAX",""],["watchpoint_trigger_t_WATCHPOINT_TRIGGER_ON_RO",""],["watchpoint_trigger_t_WATCHPOINT_TRIGGER_ON_RW",""],["watchpoint_trigger_t_WATCHPOINT_TRIGGER_ON_WO",""],["wifi_ant_mode_t_WIFI_ANT_MODE_ANT0","< Enable WiFi antenna 0 only"],["wifi_ant_mode_t_WIFI_ANT_MODE_ANT1","< Enable WiFi antenna 1 only"],["wifi_ant_mode_t_WIFI_ANT_MODE_AUTO","< Enable WiFi antenna 0 and 1, automatically select an antenna"],["wifi_ant_mode_t_WIFI_ANT_MODE_MAX","< Invalid WiFi enabled antenna"],["wifi_ant_t_WIFI_ANT_ANT0","< WiFi antenna 0"],["wifi_ant_t_WIFI_ANT_ANT1","< WiFi antenna 1"],["wifi_ant_t_WIFI_ANT_MAX","< Invalid WiFi antenna"],["wifi_auth_mode_t_WIFI_AUTH_MAX",""],["wifi_auth_mode_t_WIFI_AUTH_OPEN","< authenticate mode : open"],["wifi_auth_mode_t_WIFI_AUTH_WAPI_PSK","< authenticate mode : WAPI_PSK"],["wifi_auth_mode_t_WIFI_AUTH_WEP","< authenticate mode : WEP"],["wifi_auth_mode_t_WIFI_AUTH_WPA2_ENTERPRISE","< authenticate mode : WPA2_ENTERPRISE"],["wifi_auth_mode_t_WIFI_AUTH_WPA2_PSK","< authenticate mode : WPA2_PSK"],["wifi_auth_mode_t_WIFI_AUTH_WPA2_WPA3_PSK","< authenticate mode : WPA2_WPA3_PSK"],["wifi_auth_mode_t_WIFI_AUTH_WPA3_PSK","< authenticate mode : WPA3_PSK"],["wifi_auth_mode_t_WIFI_AUTH_WPA_PSK","< authenticate mode : WPA_PSK"],["wifi_auth_mode_t_WIFI_AUTH_WPA_WPA2_PSK","< authenticate mode : WPA_WPA2_PSK"],["wifi_bandwidth_t_WIFI_BW_HT20",""],["wifi_bandwidth_t_WIFI_BW_HT40",""],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_AES_CMAC128","< the cipher type is AES-CMAC-128"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_CCMP","< the cipher type is CCMP"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_NONE","< the cipher type is none"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_SMS4","< the cipher type is SMS4"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_TKIP","< the cipher type is TKIP"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_TKIP_CCMP","< the cipher type is TKIP and CCMP"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_UNKNOWN","< the cipher type is unknown"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_WEP104","< the cipher type is WEP104"],["wifi_cipher_type_t_WIFI_CIPHER_TYPE_WEP40","< the cipher type is WEP40"],["wifi_country_policy_t_WIFI_COUNTRY_POLICY_AUTO","< Country policy is auto, use the country info of AP to which the station is connected"],["wifi_country_policy_t_WIFI_COUNTRY_POLICY_MANUAL","< Country policy is manual, always use the configured country info"],["wifi_err_reason_t_WIFI_REASON_4WAY_HANDSHAKE_TIMEOUT",""],["wifi_err_reason_t_WIFI_REASON_802_1X_AUTH_FAILED",""],["wifi_err_reason_t_WIFI_REASON_AKMP_INVALID",""],["wifi_err_reason_t_WIFI_REASON_AP_TSF_RESET",""],["wifi_err_reason_t_WIFI_REASON_ASSOC_EXPIRE",""],["wifi_err_reason_t_WIFI_REASON_ASSOC_FAIL",""],["wifi_err_reason_t_WIFI_REASON_ASSOC_LEAVE",""],["wifi_err_reason_t_WIFI_REASON_ASSOC_NOT_AUTHED",""],["wifi_err_reason_t_WIFI_REASON_ASSOC_TOOMANY",""],["wifi_err_reason_t_WIFI_REASON_AUTH_EXPIRE",""],["wifi_err_reason_t_WIFI_REASON_AUTH_FAIL",""],["wifi_err_reason_t_WIFI_REASON_AUTH_LEAVE",""],["wifi_err_reason_t_WIFI_REASON_BEACON_TIMEOUT",""],["wifi_err_reason_t_WIFI_REASON_CIPHER_SUITE_REJECTED",""],["wifi_err_reason_t_WIFI_REASON_CONNECTION_FAIL",""],["wifi_err_reason_t_WIFI_REASON_DISASSOC_PWRCAP_BAD",""],["wifi_err_reason_t_WIFI_REASON_DISASSOC_SUPCHAN_BAD",""],["wifi_err_reason_t_WIFI_REASON_GROUP_CIPHER_INVALID",""],["wifi_err_reason_t_WIFI_REASON_GROUP_KEY_UPDATE_TIMEOUT",""],["wifi_err_reason_t_WIFI_REASON_HANDSHAKE_TIMEOUT",""],["wifi_err_reason_t_WIFI_REASON_IE_INVALID",""],["wifi_err_reason_t_WIFI_REASON_IE_IN_4WAY_DIFFERS",""],["wifi_err_reason_t_WIFI_REASON_INVALID_PMKID",""],["wifi_err_reason_t_WIFI_REASON_INVALID_RSN_IE_CAP",""],["wifi_err_reason_t_WIFI_REASON_MIC_FAILURE",""],["wifi_err_reason_t_WIFI_REASON_NOT_ASSOCED",""],["wifi_err_reason_t_WIFI_REASON_NOT_AUTHED",""],["wifi_err_reason_t_WIFI_REASON_NO_AP_FOUND",""],["wifi_err_reason_t_WIFI_REASON_PAIRWISE_CIPHER_INVALID",""],["wifi_err_reason_t_WIFI_REASON_ROAMING",""],["wifi_err_reason_t_WIFI_REASON_UNSPECIFIED",""],["wifi_err_reason_t_WIFI_REASON_UNSUPP_RSN_IE_VERSION",""],["wifi_event_sta_wps_fail_reason_t_WPS_FAIL_REASON_MAX",""],["wifi_event_sta_wps_fail_reason_t_WPS_FAIL_REASON_NORMAL","< ESP32 WPS normal fail reason"],["wifi_event_sta_wps_fail_reason_t_WPS_FAIL_REASON_RECV_M2D","< ESP32 WPS receive M2D frame"],["wifi_event_t_WIFI_EVENT_ACTION_TX_STATUS","< Status indication of Action Tx operation"],["wifi_event_t_WIFI_EVENT_AP_PROBEREQRECVED","< Receive probe request packet in soft-AP interface"],["wifi_event_t_WIFI_EVENT_AP_STACONNECTED","< a station connected to ESP32 soft-AP"],["wifi_event_t_WIFI_EVENT_AP_STADISCONNECTED","< a station disconnected from ESP32 soft-AP"],["wifi_event_t_WIFI_EVENT_AP_START","< ESP32 soft-AP start"],["wifi_event_t_WIFI_EVENT_AP_STOP","< ESP32 soft-AP stop"],["wifi_event_t_WIFI_EVENT_FTM_REPORT","< Receive report of FTM procedure"],["wifi_event_t_WIFI_EVENT_MAX","< Invalid WiFi event ID"],["wifi_event_t_WIFI_EVENT_ROC_DONE","< Remain-on-Channel operation complete"],["wifi_event_t_WIFI_EVENT_SCAN_DONE","< ESP32 finish scanning AP"],["wifi_event_t_WIFI_EVENT_STA_AUTHMODE_CHANGE","< the auth mode of AP connected by ESP32 station changed"],["wifi_event_t_WIFI_EVENT_STA_BEACON_TIMEOUT","< ESP32 station beacon timeout"],["wifi_event_t_WIFI_EVENT_STA_BSS_RSSI_LOW","< AP’s RSSI crossed configured threshold"],["wifi_event_t_WIFI_EVENT_STA_CONNECTED","< ESP32 station connected to AP"],["wifi_event_t_WIFI_EVENT_STA_DISCONNECTED","< ESP32 station disconnected from AP"],["wifi_event_t_WIFI_EVENT_STA_START","< ESP32 station start"],["wifi_event_t_WIFI_EVENT_STA_STOP","< ESP32 station stop"],["wifi_event_t_WIFI_EVENT_STA_WPS_ER_FAILED","< ESP32 station wps fails in enrollee mode"],["wifi_event_t_WIFI_EVENT_STA_WPS_ER_PBC_OVERLAP","< ESP32 station wps overlap in enrollee mode"],["wifi_event_t_WIFI_EVENT_STA_WPS_ER_PIN","< ESP32 station wps pin code in enrollee mode"],["wifi_event_t_WIFI_EVENT_STA_WPS_ER_SUCCESS","< ESP32 station wps succeeds in enrollee mode"],["wifi_event_t_WIFI_EVENT_STA_WPS_ER_TIMEOUT","< ESP32 station wps timeout in enrollee mode"],["wifi_event_t_WIFI_EVENT_WIFI_READY","< ESP32 WiFi ready"],["wifi_ftm_status_t_FTM_STATUS_CONF_REJECTED","< Peer rejected FTM configuration in FTM Request"],["wifi_ftm_status_t_FTM_STATUS_FAIL","< Unknown error during FTM exchange"],["wifi_ftm_status_t_FTM_STATUS_NO_RESPONSE","< Peer did not respond to FTM Requests"],["wifi_ftm_status_t_FTM_STATUS_SUCCESS","< FTM exchange is successful"],["wifi_ftm_status_t_FTM_STATUS_UNSUPPORTED","< Peer does not support FTM"],["wifi_interface_t_WIFI_IF_AP",""],["wifi_interface_t_WIFI_IF_STA",""],["wifi_mode_t_WIFI_MODE_AP","< WiFi soft-AP mode"],["wifi_mode_t_WIFI_MODE_APSTA","< WiFi station + soft-AP mode"],["wifi_mode_t_WIFI_MODE_MAX",""],["wifi_mode_t_WIFI_MODE_NULL","< null mode"],["wifi_mode_t_WIFI_MODE_STA","< WiFi station mode"],["wifi_phy_rate_t_WIFI_PHY_RATE_11M_L","< 11 Mbps with long preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_11M_S","< 11 Mbps with short preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_12M","< 12 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_18M","< 18 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_1M_L","< 1 Mbps with long preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_24M","< 24 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_2M_L","< 2 Mbps with long preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_2M_S","< 2 Mbps with short preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_36M","< 36 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_48M","< 48 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_54M","< 54 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_5M_L","< 5.5 Mbps with long preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_5M_S","< 5.5 Mbps with short preamble"],["wifi_phy_rate_t_WIFI_PHY_RATE_6M","< 6 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_9M","< 9 Mbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_LORA_250K","< 250 Kbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_LORA_500K","< 500 Kbps"],["wifi_phy_rate_t_WIFI_PHY_RATE_MAX",""],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS0_LGI","< MCS0 with long GI, 6.5 Mbps for 20MHz, 13.5 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS0_SGI","< MCS0 with short GI, 7.2 Mbps for 20MHz, 15 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS1_LGI","< MCS1 with long GI, 13 Mbps for 20MHz, 27 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS1_SGI","< MCS1 with short GI, 14.4 Mbps for 20MHz, 30 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS2_LGI","< MCS2 with long GI, 19.5 Mbps for 20MHz, 40.5 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS2_SGI","< MCS2 with short GI, 21.7 Mbps for 20MHz, 45 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS3_LGI","< MCS3 with long GI, 26 Mbps for 20MHz, 54 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS3_SGI","< MCS3 with short GI, 28.9 Mbps for 20MHz, 60 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS4_LGI","< MCS4 with long GI, 39 Mbps for 20MHz, 81 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS4_SGI","< MCS4 with short GI, 43.3 Mbps for 20MHz, 90 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS5_LGI","< MCS5 with long GI, 52 Mbps for 20MHz, 108 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS5_SGI","< MCS5 with short GI, 57.8 Mbps for 20MHz, 120 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS6_LGI","< MCS6 with long GI, 58.5 Mbps for 20MHz, 121.5 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS6_SGI","< MCS6 with short GI, 65 Mbps for 20MHz, 135 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS7_LGI","< MCS7 with long GI, 65 Mbps for 20MHz, 135 Mbps for 40MHz"],["wifi_phy_rate_t_WIFI_PHY_RATE_MCS7_SGI","< MCS7 with short GI, 72.2 Mbps for 20MHz, 150 Mbps for 40MHz"],["wifi_promiscuous_pkt_type_t_WIFI_PKT_CTRL","< Control frame, indicates ‘buf’ argument is wifi_promiscuous_pkt_t"],["wifi_promiscuous_pkt_type_t_WIFI_PKT_DATA","< Data frame, indiciates ‘buf’ argument is wifi_promiscuous_pkt_t"],["wifi_promiscuous_pkt_type_t_WIFI_PKT_MGMT","< Management frame, indicates ‘buf’ argument is wifi_promiscuous_pkt_t"],["wifi_promiscuous_pkt_type_t_WIFI_PKT_MISC","< Other type, such as MIMO etc. ‘buf’ argument is wifi_promiscuous_pkt_t but the payload is zero length."],["wifi_prov_cb_event_t_WIFI_PROV_CRED_FAIL","Emitted when device fails to connect to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`. The event data in this case is a pointer to the disconnection reason code with type `wifi_prov_sta_fail_reason_t`"],["wifi_prov_cb_event_t_WIFI_PROV_CRED_RECV","Emitted when Wi-Fi AP credentials are received via `protocomm` endpoint `wifi_config`. The event data in this case is a pointer to the corresponding `wifi_sta_config_t` structure"],["wifi_prov_cb_event_t_WIFI_PROV_CRED_SUCCESS","Emitted when device successfully connects to the AP of which the credentials were received earlier on event `WIFI_PROV_CRED_RECV`"],["wifi_prov_cb_event_t_WIFI_PROV_DEINIT","Signals that manager has been de-initialized"],["wifi_prov_cb_event_t_WIFI_PROV_END","Signals that provisioning service has stopped"],["wifi_prov_cb_event_t_WIFI_PROV_INIT","Emitted when the manager is initialized"],["wifi_prov_cb_event_t_WIFI_PROV_START","Indicates that provisioning has started"],["wifi_prov_security_WIFI_PROV_SECURITY_0","No security (plain-text communication)"],["wifi_prov_security_WIFI_PROV_SECURITY_1","This secure communication mode consists of X25519 key exchange"],["wifi_prov_sta_fail_reason_t_WIFI_PROV_STA_AP_NOT_FOUND",""],["wifi_prov_sta_fail_reason_t_WIFI_PROV_STA_AUTH_ERROR",""],["wifi_prov_sta_state_t_WIFI_PROV_STA_CONNECTED",""],["wifi_prov_sta_state_t_WIFI_PROV_STA_CONNECTING",""],["wifi_prov_sta_state_t_WIFI_PROV_STA_DISCONNECTED",""],["wifi_ps_type_t_WIFI_PS_MAX_MODEM","< Maximum modem power saving. In this mode, interval to receive beacons is determined by the listen_interval parameter in wifi_sta_config_t"],["wifi_ps_type_t_WIFI_PS_MIN_MODEM","< Minimum modem power saving. In this mode, station wakes up to receive beacon every DTIM period"],["wifi_ps_type_t_WIFI_PS_NONE","< No power save"],["wifi_scan_method_t_WIFI_ALL_CHANNEL_SCAN","< All channel scan, scan will end after scan all the channel"],["wifi_scan_method_t_WIFI_FAST_SCAN","< Do fast scan, scan will end after find SSID match AP"],["wifi_scan_type_t_WIFI_SCAN_TYPE_ACTIVE","< active scan"],["wifi_scan_type_t_WIFI_SCAN_TYPE_PASSIVE","< passive scan"],["wifi_second_chan_t_WIFI_SECOND_CHAN_ABOVE","< the channel width is HT40 and the secondary channel is above the primary channel"],["wifi_second_chan_t_WIFI_SECOND_CHAN_BELOW","< the channel width is HT40 and the secondary channel is below the primary channel"],["wifi_second_chan_t_WIFI_SECOND_CHAN_NONE","< the channel width is HT20"],["wifi_sort_method_t_WIFI_CONNECT_AP_BY_SECURITY","< Sort match AP in scan list by security mode"],["wifi_sort_method_t_WIFI_CONNECT_AP_BY_SIGNAL","< Sort match AP in scan list by RSSI"],["wifi_storage_t_WIFI_STORAGE_FLASH","< all configuration will store in both memory and flash"],["wifi_storage_t_WIFI_STORAGE_RAM","< all configuration will only store in the memory"],["wifi_vendor_ie_id_t_WIFI_VND_IE_ID_0",""],["wifi_vendor_ie_id_t_WIFI_VND_IE_ID_1",""],["wifi_vendor_ie_type_t_WIFI_VND_IE_TYPE_ASSOC_REQ",""],["wifi_vendor_ie_type_t_WIFI_VND_IE_TYPE_ASSOC_RESP",""],["wifi_vendor_ie_type_t_WIFI_VND_IE_TYPE_BEACON",""],["wifi_vendor_ie_type_t_WIFI_VND_IE_TYPE_PROBE_REQ",""],["wifi_vendor_ie_type_t_WIFI_VND_IE_TYPE_PROBE_RESP",""]],"fn":[["_Exit",""],["__assert",""],["__assert_func",""],["__eprintf",""],["__errno",""],["__getdelim",""],["__getline",""],["__getreent",""],["__gettzinfo",""],["__itoa",""],["__locale_mb_cur_max",""],["__retarget_lock_acquire",""],["__retarget_lock_acquire_recursive",""],["__retarget_lock_close",""],["__retarget_lock_close_recursive",""],["__retarget_lock_init",""],["__retarget_lock_init_recursive",""],["__retarget_lock_release",""],["__retarget_lock_release_recursive",""],["__retarget_lock_try_acquire",""],["__retarget_lock_try_acquire_recursive",""],["__sinit",""],["__srget_r",""],["__swbuf_r",""],["__utoa",""],["_asiprintf_r",""],["_asniprintf_r",""],["_asnprintf_r",""],["_asprintf_r",""],["_atoi_r",""],["_atol_r",""],["_atoll_r",""],["_calloc_r",""],["_cleanup_r",""],["_close_r",""],["_diprintf_r",""],["_dprintf_r",""],["_drand48_r",""],["_dtoa_r",""],["_erand48_r",""],["_esp_error_check_failed","@cond"],["_esp_error_check_failed_without_abort","@cond"],["_execve_r",""],["_exit",""],["_fclose_r",""],["_fcloseall_r",""],["_fcntl_r",""],["_fdopen_r",""],["_fflush_r",""],["_fgetc_r",""],["_fgetc_unlocked_r",""],["_fgetpos_r",""],["_fgets_r",""],["_fgets_unlocked_r",""],["_findenv",""],["_findenv_r",""],["_fiprintf_r",""],["_fiscanf_r",""],["_fmemopen_r",""],["_fopen_r",""],["_fork_r",""],["_fprintf_r",""],["_fpurge_r",""],["_fputc_r",""],["_fputc_unlocked_r",""],["_fputs_r",""],["_fputs_unlocked_r",""],["_fread_r",""],["_fread_unlocked_r",""],["_free_r",""],["_freopen_r",""],["_fscanf_r",""],["_fseek_r",""],["_fseeko_r",""],["_fsetpos_r",""],["_fstat_r",""],["_ftell_r",""],["_ftello_r",""],["_funopen_r",""],["_fwrite_r",""],["_fwrite_unlocked_r",""],["_getc_r",""],["_getc_unlocked_r",""],["_getchar_r",""],["_getchar_unlocked_r",""],["_getenv_r",""],["_getpid_r",""],["_gets_r",""],["_gettimeofday_r",""],["_iprintf_r",""],["_isatty_r",""],["_iscanf_r",""],["_jrand48_r",""],["_kill_r",""],["_l64a_r",""],["_lcong48_r",""],["_link_r",""],["_lock_acquire",""],["_lock_acquire_recursive",""],["_lock_close",""],["_lock_close_recursive",""],["_lock_init",""],["_lock_init_recursive",""],["_lock_release",""],["_lock_release_recursive",""],["_lock_try_acquire",""],["_lock_try_acquire_recursive",""],["_lrand48_r",""],["_lseek_r",""],["_malloc_r",""],["_mblen_r",""],["_mbstowcs_r",""],["_mbtowc_r",""],["_mkdir_r",""],["_mkdtemp_r",""],["_mkostemp_r",""],["_mkostemps_r",""],["_mkstemp_r",""],["_mkstemps_r",""],["_mktemp_r",""],["_mrand48_r",""],["_mstats_r",""],["_nrand48_r",""],["_open_memstream_r",""],["_open_r",""],["_perror_r",""],["_printf_r",""],["_pthread_cleanup_pop",""],["_pthread_cleanup_push",""],["_putc_r",""],["_putc_unlocked_r",""],["_putchar_r",""],["_putchar_unlocked_r",""],["_putenv_r",""],["_puts_r",""],["_raise_r",""],["_read_r",""],["_realloc_r",""],["_reallocf_r",""],["_reclaim_reent",""],["_remove_r",""],["_rename_r",""],["_rewind_r",""],["_sbrk_r",""],["_scanf_r",""],["_seed48_r",""],["_setenv_r",""],["_signal_r",""],["_siprintf_r",""],["_siscanf_r",""],["_sniprintf_r",""],["_snprintf_r",""],["_sprintf_r",""],["_srand48_r",""],["_sscanf_r",""],["_stat_r",""],["_strdup_r",""],["_strerror_r",""],["_strndup_r",""],["_strtod_r",""],["_strtoimax_r",""],["_strtol_r",""],["_strtoll_r",""],["_strtoul_r",""],["_strtoull_r",""],["_strtoumax_r",""],["_system_r",""],["_tempnam_r",""],["_times_r",""],["_tmpfile_r",""],["_tmpnam_r",""],["_tzset_r",""],["_ungetc_r",""],["_unlink_r",""],["_unsetenv_r",""],["_wait_r",""],["_wcstoimax_r",""],["_wcstombs_r",""],["_wcstoumax_r",""],["_wctomb_r",""],["_write_r",""],["a64l",""],["abort",""],["abs",""],["access",""],["adc1_config_channel_atten","@brief Set the attenuation of a particular channel on ADC1, and configure its associated GPIO pin mux."],["adc1_config_width","@brief Configure ADC1 capture width, meanwhile enable output invert for ADC1. The configuration is for all channels of ADC1 @param width_bit Bit capture width for ADC1"],["adc1_get_raw","@brief Take an ADC1 reading from a single channel. @note ESP32: When the power switch of SARADC1, SARADC2, HALL sensor and AMP sensor is turned on, the input of GPIO36 and GPIO39 will be pulled down for about 80ns. When enabling power for any of these peripherals, ignore input from GPIO36 and GPIO39. Please refer to section 3.11 of ‘ECO_and_Workarounds_for_Bugs_in_ESP32’ for the description of this issue. As a workaround, call adc_power_acquire() in the app. This will result in higher power consumption (by ~1mA), but will remove the glitches on GPIO36 and GPIO39."],["adc1_pad_get_io_num","@brief Get the GPIO number of a specific ADC1 channel."],["adc2_config_channel_atten","@brief Configure the ADC2 channel, including setting attenuation."],["adc2_get_raw","@brief Take an ADC2 reading on a single channel"],["adc2_pad_get_io_num","@brief Get the GPIO number of a specific ADC2 channel."],["adc2_vref_to_gpio","@brief Output ADC2 reference voltage to `adc2_channe_t`’s IO."],["adc_digi_controller_config","@brief Setting the digital controller."],["adc_digi_deinitialize","@brief Deinitialize the Digital ADC."],["adc_digi_filter_enable","@brief Enable/disable adc digital controller filter. Filtering the ADC data to obtain smooth data at higher sampling rates."],["adc_digi_filter_get_config","@brief Get adc digital controller filter configuration."],["adc_digi_filter_reset","@brief Reset adc digital controller filter."],["adc_digi_filter_set_config","@brief Set adc digital controller filter configuration."],["adc_digi_initialize","@brief Initialize the Digital ADC."],["adc_digi_monitor_enable","@brief Enable/disable monitor of adc digital controller."],["adc_digi_monitor_set_config","@brief Config monitor of adc digital controller."],["adc_digi_read_bytes","@brief Read bytes from Digital ADC through DMA."],["adc_digi_start","@brief Start the Digital ADC and DMA peripherals. After this, the hardware starts working."],["adc_digi_stop","@brief Stop the Digital ADC and DMA peripherals. After this, the hardware stops working."],["adc_power_acquire","@brief Increment the usage counter for ADC module. ADC will stay powered on while the counter is greater than 0. Call adc_power_release when done using the ADC."],["adc_power_off","@brief Power off SAR ADC @deprecated Use adc_power_acquire and adc_power_release instead. This function will force power down for ADC. This function is deprecated because forcing power ADC power off may disrupt operation of other components which may be using the ADC."],["adc_power_on","@brief Enable ADC power @deprecated Use adc_power_acquire and adc_power_release instead."],["adc_power_release","@brief Decrement the usage counter for ADC module. ADC will stay powered on while the counter is greater than 0. Call this function when done using the ADC."],["adc_vref_to_gpio","@brief Output ADC1 or ADC2’s reference voltage to `adc2_channe_t`’s IO."],["adjtime",""],["alarm",""],["aligned_alloc",""],["arc4random",""],["arc4random_buf",""],["arc4random_uniform",""],["arg_date0",""],["arg_date1",""],["arg_daten",""],["arg_dbl0",""],["arg_dbl1",""],["arg_dbln",""],["arg_end",""],["arg_file0",""],["arg_file1",""],["arg_filen",""],["arg_free","deprecated functions, for back-compatibility only"],["arg_freetable",""],["arg_int0",""],["arg_int1",""],["arg_intn",""],["arg_key0",""],["arg_key1",""],["arg_keyn",""],["arg_lit0",""],["arg_lit1",""],["arg_litn",""],["arg_nullcheck","other functions"],["arg_parse",""],["arg_print_errors",""],["arg_print_formatted",""],["arg_print_glossary",""],["arg_print_glossary_gnu",""],["arg_print_option",""],["arg_print_syntax",""],["arg_print_syntaxv",""],["arg_rem","arg_xxx constructor functions"],["arg_rex0",""],["arg_rex1",""],["arg_rexn",""],["arg_str0",""],["arg_str1",""],["arg_strn",""],["asctime",""],["asctime_r",""],["asiprintf",""],["asniprintf",""],["asnprintf",""],["at_quick_exit",""],["atexit",""],["atof",""],["atoff",""],["atoi",""],["atol",""],["atoll",""],["bcmp",""],["bcopy",""],["bootloader_load_image","@brief Verify and load an app image (available only in space of bootloader)."],["bootloader_load_image_no_verify","@brief Load an app image without verification (available only in space of bootloader)."],["bsearch",""],["bzero",""],["calloc",""],["cfgetispeed","@brief Extracts the input baud rate from the input structure exactly (without interpretation)."],["cfgetospeed","@brief Extracts the output baud rate from the input structure exactly (without interpretation)."],["cfree",""],["cfsetispeed","@brief Set input baud rate in the termios structure"],["cfsetospeed","@brief Set output baud rate in the termios structure"],["chdir",""],["chmod",""],["chown",""],["chroot",""],["clearerr",""],["clearerr_unlocked",""],["clock",""],["clock_getres",""],["clock_gettime",""],["clock_nanosleep",""],["clock_settime",""],["close",""],["closedir",""],["compare_and_set_extram",""],["confstr",""],["cpu_hal_clear_breakpoint","Clear and disable breakpoint."],["cpu_hal_clear_watchpoint","Clear and disable watchpoint."],["cpu_hal_set_breakpoint","Set and enable breakpoint at an instruction address."],["cpu_hal_set_vecbase","Set exception vector table base address."],["cpu_hal_set_watchpoint","Set and enable a watchpoint, specifying the memory range and trigger operation."],["creat",""],["ctermid",""],["ctime",""],["ctime_r",""],["daemon",""],["dhcp_ip_addr_erase",""],["dhcp_ip_addr_restore",""],["dhcp_ip_addr_store",""],["dhcp_search_ip_on_mac",""],["dhcps_dns_getserver",""],["dhcps_dns_setserver",""],["dhcps_option_info",""],["dhcps_set_new_lease_cb",""],["dhcps_set_option_info",""],["dhcps_start",""],["dhcps_stop",""],["difftime",""],["diprintf",""],["div",""],["dprintf",""],["drand48",""],["dup",""],["dup2",""],["eTaskConfirmSleepModeStatus",""],["eTaskGetState","Obtain the state of any task."],["endusershell",""],["erand48",""],["err_to_errno",""],["esp_adc_cal_characterize","@brief Characterize an ADC at a particular attenuation"],["esp_adc_cal_check_efuse","@brief Checks if ADC calibration values are burned into eFuse"],["esp_adc_cal_get_voltage","@brief   Reads an ADC and converts the reading to a voltage in mV"],["esp_adc_cal_raw_to_voltage","@brief   Convert an ADC reading to voltage in mV"],["esp_aes_acquire_hardware","\\brief Lock access to AES hardware unit"],["esp_aes_crypt_cbc","\\brief          AES-CBC buffer encryption/decryption Length should be a multiple of the block size (16 bytes)"],["esp_aes_crypt_cfb128","\\brief          AES-CFB128 buffer encryption/decryption."],["esp_aes_crypt_cfb8","\\brief          AES-CFB8 buffer encryption/decryption."],["esp_aes_crypt_ctr","\\brief               AES-CTR buffer encryption/decryption"],["esp_aes_crypt_ecb","\\brief          AES-ECB block encryption/decryption"],["esp_aes_crypt_ofb","\\brief       This function performs an AES-OFB (Output Feedback Mode) encryption or decryption operation."],["esp_aes_crypt_xts","AES-XTS buffer encryption/decryption"],["esp_aes_decrypt","Deprecated, see esp_aes_internal_decrypt"],["esp_aes_encrypt","Deprecated, see esp_aes_internal_encrypt"],["esp_aes_free","\\brief          Clear AES context"],["esp_aes_init","\\brief          Initialize AES context"],["esp_aes_release_hardware","\\brief Unlock access to AES hardware unit"],["esp_aes_setkey","\\brief          AES set key schedule (encryption or decryption)"],["esp_aes_xts_free","\\brief          This function releases and clears the specified AES XTS context."],["esp_aes_xts_init","\\brief          This function initializes the specified AES XTS context."],["esp_aes_xts_setkey_dec","\\brief          This function prepares an XTS context for decryption and sets the decryption key."],["esp_aes_xts_setkey_enc","\\brief          This function prepares an XTS context for encryption and sets the encryption key."],["esp_backtrace_get_next_frame","Get the next frame on a stack for backtracing"],["esp_backtrace_get_start","Get the first frame of the current stack’s backtrace"],["esp_backtrace_print","@brief Print the backtrace of the current stack"],["esp_base_mac_addr_get","@brief  Return base MAC address which is set using esp_base_mac_addr_set."],["esp_base_mac_addr_set","@brief  Set base MAC address with the MAC address which is stored in BLK3 of EFUSE or external storage e.g. flash and EEPROM."],["esp_chip_info","@brief Fill an esp_chip_info_t structure with information about the chip @param[out] out_info structure to be filled"],["esp_clear_watchpoint","@brief Clear a watchpoint"],["esp_console_cmd_register","@brief Register console command @param cmd pointer to the command description; can point to a temporary value @return - ESP_OK on success - ESP_ERR_NO_MEM if out of memory - ESP_ERR_INVALID_ARG if command description includes invalid arguments"],["esp_console_deinit","@brief de-initialize console module @note  Call this once when done using console module functions @return - ESP_OK on success - ESP_ERR_INVALID_STATE if not initialized yet"],["esp_console_get_completion","@brief Callback which provides command completion for linenoise library"],["esp_console_get_hint","@brief Callback which provides command hints for linenoise library"],["esp_console_init","@brief initialize console module @param config console configuration @note  Call this once before using other console module features @return - ESP_OK on success - ESP_ERR_NO_MEM if out of memory - ESP_ERR_INVALID_STATE if already initialized - ESP_ERR_INVALID_ARG if the configuration is invalid"],["esp_console_new_repl_uart","@brief Establish a console REPL environment over UART driver"],["esp_console_new_repl_usb_cdc","@brief Establish a console REPL environment over USB CDC"],["esp_console_register_help_command","@brief Register a ‘help’ command"],["esp_console_run","@brief Run command line @param cmdline command line (command name followed by a number of arguments) @param[out] cmd_ret return code from the command (set if command was run) @return - ESP_OK, if command was run - ESP_ERR_INVALID_ARG, if the command line is empty, or only contained whitespace - ESP_ERR_NOT_FOUND, if command with given name wasn’t registered - ESP_ERR_INVALID_STATE, if esp_console_init wasn’t called"],["esp_console_split_argv","@brief Split command line into arguments in place @verbatim"],["esp_console_start_repl","@brief Start REPL environment @param[in] repl REPL handle returned from esp_console_new_repl_xxx @note Once the REPL got started, it won’t be stopped until user call repl->del(repl) to destory the REPL environment. @return - ESP_OK on success - ESP_ERR_INVALID_STATE, if repl has started already"],["esp_core_dump_image_check","@brief  Check integrity of coredump data in flash. This function reads the coredump data while calculating their checksum. If it doesn’t match the checksum written on flash, it means data are corrupted, an error will be returned. Else, ESP_OK is returned."],["esp_core_dump_image_erase","@brief  Erases coredump data in flash. esp_core_dump_image_get() will then return ESP_ERR_NOT_FOUND. Can be used after a coredump has been transmitted successfully. This function is always available, even when core dump is disabled in menuconfig."],["esp_core_dump_image_get","@brief  Retrieves address and size of coredump data in flash. This function is always available, even when core dump is disabled in menuconfig."],["esp_core_dump_init","@brief  Initializes core dump module internal data."],["esp_core_dump_to_flash","@brief  Saves core dump to flash."],["esp_core_dump_to_uart","@brief  Print base64-encoded core dump to UART."],["esp_cpu_configure_region_protection","@brief Configure CPU to disable access to invalid memory regions"],["esp_cpu_in_ocd_debug_mode","@brief Returns true if a JTAG debugger is attached to CPU OCD (on chip debug) port."],["esp_cpu_reset","@brief Reset CPU using RTC controller @param cpu_id ID of the CPU to reset (0 = PRO, 1 = APP)"],["esp_cpu_stall","@brief Stall CPU using RTC controller @param cpu_id ID of the CPU to stall (0 = PRO, 1 = APP)"],["esp_cpu_unstall","@brief Un-stall CPU using RTC controller @param cpu_id ID of the CPU to un-stall (0 = PRO, 1 = APP)"],["esp_crt_bundle_attach","@brief      Attach and enable use of a bundle for certificate verification"],["esp_crt_bundle_detach","@brief      Disable and dealloc the certification bundle"],["esp_crt_bundle_set","@brief      Set the default certificate bundle used for verification"],["esp_deep_sleep","@brief Enter deep-sleep mode"],["esp_deep_sleep_disable_rom_logging","@brief Disable logging from the ROM code after deep sleep."],["esp_deep_sleep_enable_gpio_wakeup","@brief Enable wakeup using specific gpio pins"],["esp_deep_sleep_start","@brief Enter deep sleep with the configured wakeup options"],["esp_default_wake_deep_sleep","@brief The default esp-idf-provided esp_wake_deep_sleep() stub."],["esp_derive_local_mac","@brief Derive local MAC address from universal MAC address."],["esp_efuse_batch_write_begin","@brief Set the batch mode of writing fields."],["esp_efuse_batch_write_cancel","@brief Reset the batch mode of writing fields."],["esp_efuse_batch_write_commit","@brief Writes all prepared data for the batch mode."],["esp_efuse_burn_new_values","@brief Permanently update values written to the efuse write registers"],["esp_efuse_check_secure_version","@brief Check secure_version from app and secure_version and from efuse field."],["esp_efuse_count_unused_key_blocks","@brief Return the number of unused efuse key blocks in the range EFUSE_BLK_KEY0..EFUSE_BLK_KEY_MAX"],["esp_efuse_disable_rom_download_mode","@brief Disable ROM Download Mode via eFuse"],["esp_efuse_enable_rom_secure_download_mode","@brief Switch ROM Download Mode to Secure Download mode via eFuse"],["esp_efuse_find_purpose","@brief Find a key block with the particular purpose set."],["esp_efuse_find_unused_key_block","@brief Search for an unused key block and return the first one found."],["esp_efuse_get_chip_ver","@brief   Returns chip version from efuse"],["esp_efuse_get_coding_scheme","@brief   Return efuse coding scheme for blocks."],["esp_efuse_get_digest_revoke","@brief Returns the status of the Secure Boot public key digest revocation bit."],["esp_efuse_get_field_size","@brief   Returns the number of bits used by field."],["esp_efuse_get_key","@brief Returns a pointer to a key block."],["esp_efuse_get_key_dis_read","@brief Returns a read protection for the key block."],["esp_efuse_get_key_dis_write","@brief Returns a write protection for the key block."],["esp_efuse_get_key_purpose","@brief Returns the current purpose set for an efuse key block."],["esp_efuse_get_keypurpose_dis_write","@brief Returns a write protection of the key purpose field for an efuse key block."],["esp_efuse_get_pkg_ver","@brief   Returns chip package from efuse"],["esp_efuse_get_purpose_field","@brief Returns a pointer to a key purpose for an efuse key block."],["esp_efuse_get_write_protect_of_digest_revoke","@brief Returns a write protection of the Secure Boot public key digest revocation bit."],["esp_efuse_init","@brief Initializes variables: offset and size to simulate the work of an eFuse."],["esp_efuse_key_block_unused","@brief Returns true if the key block is unused, false otherwise."],["esp_efuse_mac_get_custom","@brief  Return base MAC address which was previously written to BLK3 of EFUSE."],["esp_efuse_mac_get_default","@brief  Return base MAC address which is factory-programmed by Espressif in BLK0 of EFUSE."],["esp_efuse_read_block","@brief   Read key to efuse block starting at the offset and the required size."],["esp_efuse_read_field_bit","@brief Read a single bit eFuse field as a boolean value."],["esp_efuse_read_field_blob","@brief   Reads bits from EFUSE field and writes it into an array."],["esp_efuse_read_field_cnt","@brief   Reads bits from EFUSE field and returns number of bits programmed as “1”."],["esp_efuse_read_reg","@brief   Returns value of efuse register."],["esp_efuse_read_secure_version","@brief Return secure_version from efuse field. @return Secure version from efuse field"],["esp_efuse_reset","@brief Reset efuse write registers"],["esp_efuse_set_digest_revoke","@brief Sets the Secure Boot public key digest revocation bit."],["esp_efuse_set_key_dis_read","@brief Sets a read protection for the key block."],["esp_efuse_set_key_dis_write","@brief Sets a write protection for the key block."],["esp_efuse_set_key_purpose","@brief Sets a key purpose for an efuse key block."],["esp_efuse_set_keypurpose_dis_write","@brief Sets a write protection of the key purpose field for an efuse key block."],["esp_efuse_set_read_protect","@brief   Sets a read protection for the whole block."],["esp_efuse_set_write_protect","@brief   Sets a write protection for the whole block."],["esp_efuse_set_write_protect_of_digest_revoke","@brief Sets a write protection of the Secure Boot public key digest revocation bit."],["esp_efuse_update_secure_version","@brief Write efuse field by secure_version value."],["esp_efuse_write_block","@brief   Write key to efuse block starting at the offset and the required size."],["esp_efuse_write_field_bit","@brief Write a single bit eFuse field to 1"],["esp_efuse_write_field_blob","@brief   Writes array to EFUSE field."],["esp_efuse_write_field_cnt","@brief   Writes a required count of bits as “1” to EFUSE field."],["esp_efuse_write_key","@brief Program a block of key data to an efuse block"],["esp_efuse_write_keys","@brief Program keys to unused efuse blocks"],["esp_efuse_write_random_key","@brief Write random data to efuse key block write registers"],["esp_efuse_write_reg","@brief   Write value to efuse register."],["esp_err_to_name","@brief Returns string for esp_err_t error codes"],["esp_err_to_name_r","@brief Returns string for esp_err_t and system error codes"],["esp_eth_clear_default_handlers","@brief Unregister default IP layer handlers for Ethernet"],["esp_eth_decrease_reference","@brief Decrease Ethernet driver reference"],["esp_eth_del_netif_glue","@brief Delete netif glue of Ethernet driver"],["esp_eth_detect_phy_addr","@brief Detect PHY address"],["esp_eth_driver_install","@brief Install Ethernet driver"],["esp_eth_driver_uninstall","@brief Uninstall Ethernet driver @note It’s not recommended to uninstall Ethernet driver unless it won’t get used any more in application code. To uninstall Ethernet driver, you have to make sure, all references to the driver are released. Ethernet driver can only be uninstalled successfully when reference counter equals to one."],["esp_eth_increase_reference","@brief Increase Ethernet driver reference @note Ethernet driver handle can be obtained by os timer, netif, etc. It’s dangerous when thread A is using Ethernet but thread B uninstall the driver. Using reference counter can prevent such risk, but care should be taken, when you obtain Ethernet driver, this API must be invoked so that the driver won’t be uninstalled during your using time."],["esp_eth_ioctl","@brief Misc IO function of Etherent driver"],["esp_eth_new_netif_glue","@brief Create a netif glue for Ethernet driver @note netif glue is used to attach io driver to TCP/IP netif"],["esp_eth_phy_new_dp83848","@brief Create a PHY instance of DP83848"],["esp_eth_phy_new_ip101","@brief Create a PHY instance of IP101"],["esp_eth_phy_new_ksz8041","@brief Create a PHY instance of KSZ8041"],["esp_eth_phy_new_lan8720","@brief Create a PHY instance of LAN8720"],["esp_eth_phy_new_rtl8201","@brief Create a PHY instance of RTL8201"],["esp_eth_receive","@brief General Receive is deprecated and shall not be accessed from app code, as polling is not supported by Ethernet."],["esp_eth_set_default_handlers","@brief Register default IP layer handlers for Ethernet"],["esp_eth_start","@brief Start Ethernet driver ONLY in standalone mode (i.e. without TCP/IP stack)"],["esp_eth_stop","@brief Stop Ethernet driver"],["esp_eth_transmit","@brief General Transmit"],["esp_eth_update_input_path","@brief Update Ethernet data input path (i.e. specify where to pass the input buffer)"],["esp_event_dump","@brief Dumps statistics of all event loops."],["esp_event_handler_instance_register","@brief Register an instance of event handler to the default loop."],["esp_event_handler_instance_register_with","@brief Register an instance of event handler to a specific loop."],["esp_event_handler_instance_unregister","@brief Unregister a handler from the system event loop."],["esp_event_handler_instance_unregister_with","@brief Unregister a handler instance from a specific event loop."],["esp_event_handler_register","@brief Register an event handler to the system event loop (legacy)."],["esp_event_handler_register_with","@brief Register an event handler to a specific loop (legacy)."],["esp_event_handler_unregister","@brief Unregister a handler with the system event loop (legacy)."],["esp_event_handler_unregister_with","@brief Unregister a handler from a specific event loop (legacy)."],["esp_event_isr_post","@brief Special variant of esp_event_post for posting events from interrupt handlers."],["esp_event_isr_post_to","@brief Special variant of esp_event_post_to for posting events from interrupt handlers"],["esp_event_loop_create","@brief Create a new event loop."],["esp_event_loop_create_default","@brief Create default event loop"],["esp_event_loop_delete","@brief Delete an existing event loop."],["esp_event_loop_delete_default","@brief Delete the default event loop"],["esp_event_loop_init","@brief  Initialize event loop"],["esp_event_loop_run","@brief Dispatch events posted to an event loop."],["esp_event_loop_set_cb","@brief  Set application specified event callback function"],["esp_event_post","@brief Posts an event to the system default event loop. The event loop library keeps a copy of event_data and manages the copy’s lifetime automatically (allocation + deletion); this ensures that the data the handler recieves is always valid."],["esp_event_post_to","@brief Posts an event to the specified event loop. The event loop library keeps a copy of event_data and manages the copy’s lifetime automatically (allocation + deletion); this ensures that the data the handler recieves is always valid."],["esp_event_process_default","@brief  Default event handler for system events"],["esp_event_send","@brief  Send a event to event task"],["esp_event_send_internal","@brief  Send a event to event task"],["esp_event_set_default_eth_handlers","@brief  Install default event handlers for Ethernet interface"],["esp_event_set_default_wifi_handlers","@brief  Install default event handlers for Wi-Fi interfaces (station and AP)"],["esp_fill_random","@brief Fill a buffer with random bytes from hardware RNG"],["esp_flash_chip_driver_initialized","Check if appropriate chip driver is set."],["esp_flash_erase_chip","@brief Erase flash chip contents"],["esp_flash_erase_region","@brief Erase a region of the flash chip"],["esp_flash_get_chip_write_protect","@brief Read if the entire chip is write protected"],["esp_flash_get_protectable_regions","@brief Read the list of individually protectable regions of this SPI flash chip."],["esp_flash_get_protected_region","@brief Detect if a region of the SPI flash chip is protected"],["esp_flash_get_size","@brief Detect flash size based on flash ID."],["esp_flash_init","@brief Initialise SPI flash chip interface."],["esp_flash_read","@brief Read data from the SPI flash chip"],["esp_flash_read_encrypted","@brief Read and decrypt data from the SPI flash chip using on-chip hardware flash encryption"],["esp_flash_read_id","@brief Read flash ID via the common “RDID” SPI flash command."],["esp_flash_set_chip_write_protect","@brief Set write protection for the SPI flash chip"],["esp_flash_set_protected_region","@brief Update the protected status for a region of the SPI flash chip"],["esp_flash_write","@brief Write data to the SPI flash chip"],["esp_flash_write_encrypted","@brief Encrypted and write data to the SPI flash chip using on-chip hardware flash encryption"],["esp_get_deep_sleep_wake_stub","@brief Get current wake from deep sleep stub @return Return current wake from deep sleep stub, or NULL if no stub is installed."],["esp_get_free_heap_size","@brief  Get the size of available heap."],["esp_get_free_internal_heap_size","@brief  Get the size of available internal heap."],["esp_get_idf_version","Return full IDF version string, same as ‘git describe’ output."],["esp_get_minimum_free_heap_size","@brief Get the minimum heap that has ever been available"],["esp_http_client_add_auth","@brief      On receiving HTTP Status code 401, this API can be invoked to add authorization information."],["esp_http_client_cleanup","@brief      This function must be the last function to call for an session. It is the opposite of the esp_http_client_init function and must be called with the same handle as input that a esp_http_client_init call returned. This might close all connections this handle has used and possibly has kept open until now. Don’t call this function if you intend to transfer more files, re-using handles is a key to good performance with esp_http_client."],["esp_http_client_close","@brief      Close http connection, still kept all http request resources"],["esp_http_client_delete_header","@brief      Delete http request header"],["esp_http_client_fetch_headers","@brief      This function need to call after esp_http_client_open, it will read from http stream, process all receive headers"],["esp_http_client_flush_response","@brief       Process all remaining response data This uses an internal buffer to repeatedly receive, parse, and discard response data until complete data is processed. As no additional user-supplied buffer is required, this may be preferrable to `esp_http_client_read_response` in situations where the content of the response may be ignored."],["esp_http_client_get_chunk_length","@brief          Get Chunk-Length from client"],["esp_http_client_get_content_length","@brief      Get http response content length (from header Content-Length) the valid value if this function invoke after `esp_http_client_perform`"],["esp_http_client_get_header","@brief      Get http request header. The value parameter will be set to NULL if there is no header which is same as the key specified, otherwise the address of header value will be assigned to value parameter. This function must be called after `esp_http_client_init`."],["esp_http_client_get_password","@brief      Get http request password. The address of password buffer will be assigned to value parameter. This function must be called after `esp_http_client_init`."],["esp_http_client_get_post_field","@brief      Get current post field information"],["esp_http_client_get_status_code","@brief      Get http response status code, the valid value if this function invoke after `esp_http_client_perform`"],["esp_http_client_get_transport_type","@brief      Get transport type"],["esp_http_client_get_url","@brief          Get URL from client"],["esp_http_client_get_username","@brief      Get http request username. The address of username buffer will be assigned to value parameter. This function must be called after `esp_http_client_init`."],["esp_http_client_init","@brief      Start a HTTP session This function must be the first function to call, and it returns a esp_http_client_handle_t that you must use as input to other functions in the interface. This call MUST have a corresponding call to esp_http_client_cleanup when the operation is complete."],["esp_http_client_is_chunked_response","@brief      Check response data is chunked"],["esp_http_client_is_complete_data_received","@brief      Checks if entire data in the response has been read without any error."],["esp_http_client_open","@brief      This function will be open the connection, write all header strings and return"],["esp_http_client_perform","@brief      Invoke this function after `esp_http_client_init` and all the options calls are made, and will perform the transfer as described in the options. It must be called with the same esp_http_client_handle_t as input as the esp_http_client_init call returned. esp_http_client_perform performs the entire request in either blocking or non-blocking manner. By default, the API performs request in a blocking manner and returns when done, or if it failed, and in non-blocking manner, it returns if EAGAIN/EWOULDBLOCK or EINPROGRESS is encountered, or if it failed. And in case of non-blocking request, the user may call this API multiple times unless request & response is complete or there is a failure. To enable non-blocking esp_http_client_perform(), `is_async` member of esp_http_client_config_t must be set while making a call to esp_http_client_init() API. You can do any amount of calls to esp_http_client_perform while using the same esp_http_client_handle_t. The underlying connection may be kept open if the server allows it. If you intend to transfer more than one file, you are even encouraged to do so. esp_http_client will then attempt to re-use the same connection for the following transfers, thus making the operations faster, less CPU intense and using less network resources. Just note that you will have to use `esp_http_client_set_**` between the invokes to set options for the following esp_http_client_perform."],["esp_http_client_read","@brief      Read data from http stream"],["esp_http_client_read_response","@brief      Helper API to read larger data chunks This is a helper API which internally calls `esp_http_client_read` multiple times till the end of data is reached or till the buffer gets full."],["esp_http_client_set_authtype","@brief      Set http request auth_type."],["esp_http_client_set_header","@brief      Set http request header, this function must be called after esp_http_client_init and before any perform function"],["esp_http_client_set_method","@brief      Set http request method"],["esp_http_client_set_password","@brief      Set http request password. The value of password parameter will be assigned to password buffer. If the password parameter is NULL then password buffer will be freed."],["esp_http_client_set_post_field","@brief      Set post data, this function must be called before `esp_http_client_perform`. Note: The data parameter passed to this function is a pointer and this function will not copy the data"],["esp_http_client_set_redirection","@brief      Set redirection URL. When received the 30x code from the server, the client stores the redirect URL provided by the server. This function will set the current URL to redirect to enable client to execute the redirection request."],["esp_http_client_set_url","@brief      Set URL for client, when performing this behavior, the options in the URL will replace the old ones"],["esp_http_client_set_username","@brief      Set http request username. The value of username parameter will be assigned to username buffer. If the username parameter is NULL then username buffer will be freed."],["esp_http_client_write","@brief     This function will write data to the HTTP connection previously opened by esp_http_client_open()"],["esp_image_get_flash_size","@brief Get the flash size of the image"],["esp_image_get_metadata","@brief Get metadata of app"],["esp_image_verify","@brief Verify an app image."],["esp_image_verify_bootloader","@brief Verify the bootloader image."],["esp_image_verify_bootloader_data","@brief Verify the bootloader image."],["esp_int_wdt_cpu_init","@brief  Enable the interrupt watchdog on the current CPU. This is called in the init code by both CPUs if the interrupt watchdog is enabled in menuconfig."],["esp_int_wdt_init","@brief  Initialize the non-CPU-specific parts of interrupt watchdog. This is called in the init code if the interrupt watchdog is enabled in menuconfig."],["esp_internal_aes_decrypt","\\brief           Internal AES block decryption function (Only exposed to allow overriding it, see AES_DECRYPT_ALT)"],["esp_internal_aes_encrypt","\\brief           Internal AES block encryption function (Only exposed to allow overriding it, see AES_ENCRYPT_ALT)"],["esp_intr_alloc","@brief Allocate an interrupt with the given parameters."],["esp_intr_alloc_intrstatus","@brief Allocate an interrupt with the given parameters."],["esp_intr_disable","@brief Disable the interrupt associated with the handle"],["esp_intr_disable_source","@brief disable the interrupt source based on its number @param inum interrupt number from 0 to 31"],["esp_intr_enable","@brief Enable the interrupt associated with the handle"],["esp_intr_enable_source","@brief enable the interrupt source based on its number @param inum interrupt number from 0 to 31"],["esp_intr_free","@brief Disable and free an interrupt."],["esp_intr_get_cpu","@brief Get CPU number an interrupt is tied to"],["esp_intr_get_intno","@brief Get the allocated interrupt for a certain handle"],["esp_intr_mark_shared","@brief Mark an interrupt as a shared interrupt"],["esp_intr_noniram_disable","@brief Disable interrupts that aren’t specifically marked as running from IRAM"],["esp_intr_noniram_enable","@brief Re-enable interrupts disabled by esp_intr_noniram_disable"],["esp_intr_reserve","@brief Reserve an interrupt to be used outside of this framework"],["esp_intr_set_in_iram","@brief Set the “in IRAM” status of the handler."],["esp_ip4addr_aton","@brief Ascii internet address interpretation routine The value returned is in network order."],["esp_ip4addr_ntoa","@brief Converts numeric IP address into decimal dotted ASCII representation."],["esp_ipc_call","@brief Execute a function on the given CPU"],["esp_ipc_call_blocking","@brief Execute a function on the given CPU and blocks until it completes"],["esp_light_sleep_start","@brief Enter light sleep with the configured wakeup options"],["esp_log_buffer_char_internal",""],["esp_log_buffer_hex_internal",""],["esp_log_buffer_hexdump_internal",""],["esp_log_early_timestamp","@brief Function which returns timestamp to be used in log output"],["esp_log_level_set","@brief Set log level for given tag"],["esp_log_set_vprintf","@brief Set function used to output log entries"],["esp_log_system_timestamp","@brief Function which returns system timestamp to be used in log output"],["esp_log_timestamp","@brief Function which returns timestamp to be used in log output"],["esp_log_write","@brief Write message into the log"],["esp_mbedtls_mem_calloc",""],["esp_mbedtls_mem_free",""],["esp_mqtt_client_destroy","@brief Destroys the client handle"],["esp_mqtt_client_disconnect","@brief This api is typically used to force disconnection from the broker"],["esp_mqtt_client_enqueue","@brief Enqueue a message to the outbox, to be sent later. Typically used for messages with qos>0, but could be also used for qos=0 messages if store=true."],["esp_mqtt_client_get_outbox_size","@brief Get outbox size"],["esp_mqtt_client_init","@brief Creates mqtt client handle based on the configuration"],["esp_mqtt_client_publish","@brief Client to send a publish message to the broker"],["esp_mqtt_client_reconnect","@brief This api is typically used to force reconnection upon a specific event"],["esp_mqtt_client_register_event","@brief Registers mqtt event"],["esp_mqtt_client_set_uri","@brief Sets mqtt connection URI. This API is usually used to overrides the URI configured in esp_mqtt_client_init"],["esp_mqtt_client_start","@brief Starts mqtt client with already created client handle"],["esp_mqtt_client_stop","@brief Stops mqtt client tasks"],["esp_mqtt_client_subscribe","@brief Subscribe the client to defined topic with defined qos"],["esp_mqtt_client_unsubscribe","@brief Unsubscribe the client from defined topic"],["esp_mqtt_set_config","@brief Set configuration structure, typically used when updating the config (i.e. on “before_connect” event"],["esp_netif_action_connected","@brief Default building block for network interface action upon IO driver connected event"],["esp_netif_action_disconnected","@brief Default building block for network interface action upon IO driver disconnected event"],["esp_netif_action_got_ip","@brief Default building block for network interface action upon network got IP event"],["esp_netif_action_start","@brief Default building block for network interface action upon IO driver start event Creates network interface, if AUTOUP enabled turns the interface on, if DHCPS enabled starts dhcp server"],["esp_netif_action_stop","@brief Default building block for network interface action upon IO driver stop event"],["esp_netif_attach","@brief   Attaches esp_netif instance to the io driver handle"],["esp_netif_attach_wifi_ap","@brief Attaches wifi soft AP interface to supplied netif"],["esp_netif_attach_wifi_station","@brief Attaches wifi station interface to supplied netif"],["esp_netif_create_default_wifi_ap","@brief Creates default WIFI AP. In case of any init error this API aborts."],["esp_netif_create_default_wifi_mesh_netifs","@brief Creates default STA and AP network interfaces for esp-mesh."],["esp_netif_create_default_wifi_sta","@brief Creates default WIFI STA. In case of any init error this API aborts."],["esp_netif_create_ip6_linklocal","@brief  Create interface link-local IPv6 address"],["esp_netif_create_wifi","@brief Creates esp_netif WiFi object based on the custom configuration."],["esp_netif_deinit","@brief  Deinitialize the esp-netif component (and the underlying TCP/IP stack)"],["esp_netif_destroy","@brief   Destroys the esp_netif object"],["esp_netif_dhcpc_get_status","@brief  Get DHCP client status"],["esp_netif_dhcpc_option","@brief  Set or Get DHCP client option"],["esp_netif_dhcpc_start","@brief Start DHCP client (only if enabled in interface object)"],["esp_netif_dhcpc_stop","@brief  Stop DHCP client (only if enabled in interface object)"],["esp_netif_dhcps_get_status","@brief  Get DHCP Server status"],["esp_netif_dhcps_option","@brief  Set or Get DHCP server option"],["esp_netif_dhcps_start","@brief  Start DHCP server (only if enabled in interface object)"],["esp_netif_dhcps_stop","@brief  Stop DHCP server (only if enabled in interface object)"],["esp_netif_get_all_ip6","@brief  Get all IPv6 addresses of the specified interface"],["esp_netif_get_desc","@brief Returns configured interface type for this esp-netif instance"],["esp_netif_get_dns_info","@brief  Get DNS Server information"],["esp_netif_get_event_id","@brief Returns configured event for this esp-netif instance and supplied event type"],["esp_netif_get_flags","@brief Returns configured flags for this interface"],["esp_netif_get_handle_from_ifkey","@brief Searches over a list of created objects to find an instance with supplied if key"],["esp_netif_get_hostname","@brief  Get interface hostname."],["esp_netif_get_ifkey","@brief Returns configured interface key for this esp-netif instance"],["esp_netif_get_io_driver","@brief Gets media driver handle for this esp-netif instance"],["esp_netif_get_ip6_global","@brief  Get interface global IPv6 address"],["esp_netif_get_ip6_linklocal","@brief  Get interface link-local IPv6 address"],["esp_netif_get_ip_info","@brief  Get interface’s IP address information"],["esp_netif_get_mac","@brief Get the mac address for the interface instance"],["esp_netif_get_netif_impl_index","@brief  Get net interface index from network stack implementation"],["esp_netif_get_netif_impl_name","@brief  Get net interface name from network stack implementation"],["esp_netif_get_nr_of_ifs","@brief Returns number of registered esp_netif objects"],["esp_netif_get_old_ip_info","@brief  Get interface’s old IP information"],["esp_netif_get_route_prio","@brief Returns configured routing priority number"],["esp_netif_get_sta_list","@brief  Get IP information for stations connected to the Wi-Fi AP interface"],["esp_netif_init","@brief  Initialize the underlying TCP/IP stack"],["esp_netif_ip6_get_addr_type","@brief  Get the IPv6 address type"],["esp_netif_is_netif_up","@brief  Test if supplied interface is up or down"],["esp_netif_netstack_buf_free","@brief free the netstack buffer"],["esp_netif_netstack_buf_ref","@brief increase the reference counter of net stack buffer"],["esp_netif_new","@brief   Creates an instance of new esp-netif object based on provided config"],["esp_netif_next","@brief Iterates over list of interfaces. Returns first netif if NULL given as parameter"],["esp_netif_receive","@brief  Passes the raw packets from communication media to the appropriate TCP/IP stack"],["esp_netif_set_dns_info","@brief  Set DNS Server information"],["esp_netif_set_driver_config","@brief   Configures driver related options of esp_netif object"],["esp_netif_set_hostname","@brief  Set the hostname of an interface"],["esp_netif_set_ip4_addr","@brief Sets IPv4 address to the specified octets"],["esp_netif_set_ip_info","@brief  Set interface’s IP address information"],["esp_netif_set_mac","@brief Set the mac address for the interface instance"],["esp_netif_set_old_ip_info","@brief  Set interface old IP information"],["esp_netif_str_to_ip4","@brief Converts Ascii internet IPv4 address into esp_ip4_addr_t"],["esp_netif_str_to_ip6","@brief Converts Ascii internet IPv6 address into esp_ip4_addr_t Zeros in the IP address can be stripped or completely ommited: “2001:db8:85a3:0:0:0:2:1” or “2001:db8::2:1”)"],["esp_newlib_init","Function which sets up newlib in ROM for use with ESP-IDF"],["esp_newlib_locks_init","Initialize newlib static locks"],["esp_newlib_time_init",""],["esp_now_add_peer","@brief     Add a peer to peer list"],["esp_now_deinit","@brief     De-initialize ESPNOW function"],["esp_now_del_peer","@brief     Delete a peer from peer list"],["esp_now_fetch_peer","@brief     Fetch a peer from peer list. Only return the peer which address is unicast, for the multicast/broadcast address, the function will ignore and try to find the next in the peer list."],["esp_now_get_peer","@brief     Get a peer whose MAC address matches peer_addr from peer list"],["esp_now_get_peer_num","@brief     Get the number of peers"],["esp_now_get_version","@brief     Get the version of ESPNOW"],["esp_now_init","@brief     Initialize ESPNOW function"],["esp_now_is_peer_exist","@brief     Peer exists or not"],["esp_now_mod_peer","@brief     Modify a peer"],["esp_now_register_recv_cb","@brief     Register callback function of receiving ESPNOW data"],["esp_now_register_send_cb","@brief     Register callback function of sending ESPNOW data"],["esp_now_send","@brief     Send ESPNOW data"],["esp_now_set_pmk","@brief     Set the primary master key"],["esp_now_set_wake_window","@brief     Set esp_now wake window for sta_disconnected power management"],["esp_now_unregister_recv_cb","@brief     Unregister callback function of receiving ESPNOW data"],["esp_now_unregister_send_cb","@brief     Unregister callback function of sending ESPNOW data"],["esp_ota_abort","@brief Abort OTA update, free the handle and memory associated with it."],["esp_ota_begin","@brief   Commence an OTA update writing to the specified partition."],["esp_ota_check_rollback_is_possible","@brief Checks applications on the slots which can be booted in case of rollback."],["esp_ota_end","@brief Finish OTA update and validate newly written app image."],["esp_ota_erase_last_boot_app_partition","@brief Erase previous boot app partition and corresponding otadata select for this partition."],["esp_ota_get_app_description","@brief   Return esp_app_desc structure. This structure includes app version."],["esp_ota_get_app_elf_sha256","@brief   Fill the provided buffer with SHA256 of the ELF file, formatted as hexadecimal, null-terminated. If the buffer size is not sufficient to fit the entire SHA256 in hex plus a null terminator, the largest possible number of bytes will be written followed by a null. @param dst   Destination buffer @param size  Size of the buffer @return      Number of bytes written to dst (including null terminator)"],["esp_ota_get_boot_partition","@brief Get partition info of currently configured boot app"],["esp_ota_get_last_invalid_partition","@brief Returns last partition with invalid state (ESP_OTA_IMG_INVALID or ESP_OTA_IMG_ABORTED)."],["esp_ota_get_next_update_partition","@brief Return the next OTA app partition which should be written with a new firmware."],["esp_ota_get_partition_description","@brief Returns esp_app_desc structure for app partition. This structure includes app version."],["esp_ota_get_running_partition","@brief Get partition info of currently running app"],["esp_ota_get_state_partition","@brief Returns state for given partition."],["esp_ota_mark_app_invalid_rollback_and_reboot","@brief This function is called to roll back to the previously workable app with reboot."],["esp_ota_mark_app_valid_cancel_rollback","@brief This function is called to indicate that the running app is working well."],["esp_ota_set_boot_partition","@brief Configure OTA data for a new boot partition"],["esp_ota_write","@brief   Write OTA update data to partition"],["esp_ota_write_with_offset","@brief   Write OTA update data to partition"],["esp_partition_check_identity","@brief Check for the identity of two partitions by SHA-256 digest."],["esp_partition_deregister_external","@brief Deregister the partition previously registered using esp_partition_register_external @param partition  pointer to the partition structure obtained from esp_partition_register_external, @return - ESP_OK on success - ESP_ERR_NOT_FOUND if the partition pointer is not found - ESP_ERR_INVALID_ARG if the partition comes from the partition table - ESP_ERR_INVALID_ARG if the partition was not registered using esp_partition_register_external function."],["esp_partition_erase_range","@brief Erase part of the partition"],["esp_partition_find","@brief Find partition based on one or more parameters"],["esp_partition_find_first","@brief Find first partition based on one or more parameters"],["esp_partition_get","@brief Get esp_partition_t structure for given partition"],["esp_partition_get_sha256","@brief Get SHA-256 digest for required partition."],["esp_partition_iterator_release","@brief Release partition iterator"],["esp_partition_main_flash_region_safe","Check whether the region on the main flash is safe to write."],["esp_partition_mmap","@brief Configure MMU to map partition into data memory"],["esp_partition_next","@brief Move partition iterator to the next partition found"],["esp_partition_read","@brief Read data from the partition"],["esp_partition_read_raw","@brief Read data from the partition without any transformation/decryption."],["esp_partition_register_external","@brief Register a partition on an external flash chip"],["esp_partition_table_verify",""],["esp_partition_verify","@brief Verify partition data"],["esp_partition_write","@brief Write data to the partition"],["esp_partition_write_raw","@brief Write data to the partition without any transformation/encryption."],["esp_ping_delete_session","@brief Delete a ping session"],["esp_ping_get_profile","@brief Get runtime profile of ping session"],["esp_ping_new_session","@brief Create a ping session"],["esp_ping_start","@brief Start the ping session"],["esp_ping_stop","@brief Stop the ping session"],["esp_pm_configure","@brief Set implementation-specific power management configuration @param config pointer to implementation-specific configuration structure (e.g. esp_pm_config_esp32) @return - ESP_OK on success - ESP_ERR_INVALID_ARG if the configuration values are not correct - ESP_ERR_NOT_SUPPORTED if certain combination of values is not supported, or if CONFIG_PM_ENABLE is not enabled in sdkconfig"],["esp_pm_dump_locks","Dump the list of all locks to stderr"],["esp_pm_get_configuration","@brief Get implementation-specific power management configuration @param config pointer to implementation-specific configuration structure (e.g. esp_pm_config_esp32) @return - ESP_OK on success - ESP_ERR_INVALID_ARG if the pointer is null"],["esp_pm_lock_acquire","@brief Take a power management lock"],["esp_pm_lock_create","@brief Initialize a lock handle for certain power management parameter"],["esp_pm_lock_delete","@brief Delete a lock created using esp_pm_lock"],["esp_pm_lock_release","@brief Release the lock taken using esp_pm_lock_acquire."],["esp_pthread_get_cfg","@brief Get current pthread creation configuration"],["esp_pthread_get_default_config","@brief Creates a default pthread configuration based on the values set via menuconfig."],["esp_pthread_init","@brief Initialize pthread library"],["esp_pthread_set_cfg","@brief Configure parameters for creating pthread"],["esp_random","@brief  Get one random 32-bit word from hardware RNG"],["esp_read_mac","@brief  Read base MAC address and set MAC address of the interface."],["esp_reent_cleanup","Clean up some of lazily allocated buffers in REENT structures."],["esp_reent_init","Replacement for newlib’s _REENT_INIT_PTR and __sinit."],["esp_register_shutdown_handler","@brief  Register shutdown handler"],["esp_reset_reason","@brief  Get reason of last reset @return See description of esp_reset_reason_t for explanation of each value."],["esp_restart","@brief  Restart PRO and APP CPUs."],["esp_rom_delay_us","@brief Pauses execution for us microseconds"],["esp_rom_disable_logging","@brief Disable logging from the ROM code."],["esp_rom_install_channel_putc","@brief esp_rom_printf can print message to different channels simultaneously. This function can help install the low level putc function for esp_rom_printf."],["esp_rom_install_uart_printf","@brief Install UART1 as the default console channel, equivalent to `esp_rom_install_channel_putc(1, esp_rom_uart_putc)`"],["esp_rom_printf","@brief Print formated string to console device @note float and long long data are not supported!"],["esp_set_breakpoint_if_jtag","@brief If an OCD is connected over JTAG. set breakpoint 0 to the given function address. Do nothing otherwise. @param fn  Pointer to the target breakpoint position"],["esp_set_deep_sleep_wake_stub","@brief Install a new stub at runtime to run on wake from deep sleep"],["esp_set_time_from_rtc","Update current microsecond time from RTC"],["esp_set_watchpoint","@brief Set a watchpoint to break/panic when a certain memory range is accessed."],["esp_setup_syscall_table",""],["esp_sleep_config_gpio_isolate","@brief Configure to isolate all GPIO pins in sleep state"],["esp_sleep_disable_wakeup_source","@brief Disable wakeup source"],["esp_sleep_disable_wifi_wakeup","@brief Disable wakeup by WiFi MAC @return - ESP_OK on success"],["esp_sleep_enable_gpio_switch","@brief Enable or disable GPIO pins status switching between slept status and waked status. @param enable decide whether to switch status or not"],["esp_sleep_enable_gpio_wakeup","@brief Enable wakeup from light sleep using GPIOs"],["esp_sleep_enable_timer_wakeup","@brief Enable wakeup by timer @param time_in_us  time before wakeup, in microseconds @return - ESP_OK on success - ESP_ERR_INVALID_ARG if value is out of range (TBD)"],["esp_sleep_enable_uart_wakeup","@brief Enable wakeup from light sleep using UART"],["esp_sleep_enable_wifi_wakeup","@brief Enable wakeup by WiFi MAC @return - ESP_OK on success"],["esp_sleep_get_ext1_wakeup_status","@brief Get the bit mask of GPIOs which caused wakeup (ext1)"],["esp_sleep_get_gpio_wakeup_status","@brief Get the bit mask of GPIOs which caused wakeup (gpio)"],["esp_sleep_get_wakeup_cause","@brief Get the wakeup source which caused wakeup from sleep"],["esp_sleep_is_valid_wakeup_gpio","@brief Returns true if a GPIO number is valid for use as wakeup source."],["esp_sleep_pd_config","@brief Set power down mode for an RTC power domain in sleep mode"],["esp_spiffs_format","Format the SPIFFS partition"],["esp_spiffs_info","Get information for SPIFFS"],["esp_spiffs_mounted","Check if SPIFFS is mounted"],["esp_sync_counters_rtc_and_frc",""],["esp_system_abort","@brief Trigger a software abort"],["esp_task_wdt_add","@brief  Subscribe a task to the Task Watchdog Timer (TWDT)"],["esp_task_wdt_deinit","@brief   Deinitialize the Task Watchdog Timer (TWDT)"],["esp_task_wdt_delete","@brief  Unsubscribes a task from the Task Watchdog Timer (TWDT)"],["esp_task_wdt_init","@brief  Initialize the Task Watchdog Timer (TWDT)"],["esp_task_wdt_reset","@brief  Reset the Task Watchdog Timer (TWDT) on behalf of the currently running task"],["esp_task_wdt_status","@brief   Query whether a task is subscribed to the Task Watchdog Timer (TWDT)"],["esp_timer_create","@brief Create an esp_timer instance"],["esp_timer_deinit","@brief De-initialize esp_timer library"],["esp_timer_delete","@brief Delete an esp_timer instance"],["esp_timer_dump","@brief Dump the list of timers to a stream"],["esp_timer_early_init","@brief Minimal initialization of esp_timer"],["esp_timer_get_next_alarm","@brief Get the timestamp when the next timeout is expected to occur @return Timestamp of the nearest timer event, in microseconds. The timebase is the same as for the values returned by esp_timer_get_time."],["esp_timer_get_time","@brief Get time in microseconds since boot @return number of microseconds since underlying timer has been started"],["esp_timer_init","@brief Initialize esp_timer library"],["esp_timer_is_active","@brief Returns status of a timer, active or not"],["esp_timer_start_once","@brief Start one-shot timer"],["esp_timer_start_periodic","@brief Start a periodic timer"],["esp_timer_stop","@brief Stop the timer"],["esp_tls_conn_delete","@brief      Compatible version of esp_tls_conn_destroy() to close the TLS/SSL connection"],["esp_tls_conn_destroy","@brief      Close the TLS/SSL connection and free any allocated resources."],["esp_tls_conn_http_new","@brief      Create a new blocking TLS/SSL connection with a given “HTTP” url"],["esp_tls_conn_http_new_async","@brief      Create a new non-blocking TLS/SSL connection with a given “HTTP” url"],["esp_tls_conn_new","@brief      Create a new blocking TLS/SSL connection"],["esp_tls_conn_new_async","@brief      Create a new non-blocking TLS/SSL connection"],["esp_tls_conn_new_sync","@brief      Create a new blocking TLS/SSL connection"],["esp_tls_free_global_ca_store","@brief      Free the global CA store currently being used."],["esp_tls_get_and_clear_error_type","@brief      Returns the last error captured in esp_tls of a specific type The error information is cleared internally upon return"],["esp_tls_get_and_clear_last_error","@brief      Returns last error in esp_tls with detailed mbedtls related error codes. The error information is cleared internally upon return"],["esp_tls_get_bytes_avail","@brief      Return the number of application data bytes remaining to be read from the current record"],["esp_tls_get_conn_sockfd","@brief       Returns the connection socket file descriptor from esp_tls session"],["esp_tls_get_global_ca_store","@brief      Get the pointer to the global CA store currently being used."],["esp_tls_init","@brief      Create TLS connection"],["esp_tls_init_global_ca_store","@brief      Create a global CA store, initially empty."],["esp_tls_set_global_ca_store","@brief      Set the global CA store with the buffer provided in pem format."],["esp_unregister_shutdown_handler","@brief  Unregister shutdown handler"],["esp_vApplicationIdleHook",""],["esp_vApplicationTickHook",""],["esp_vfs_close",""],["esp_vfs_dev_cdcacm_register","@brief add /dev/cdcacm virtual filesystem driver"],["esp_vfs_dev_cdcacm_set_rx_line_endings","@brief Set the line endings expected to be received"],["esp_vfs_dev_cdcacm_set_tx_line_endings","@brief Set the line endings to sent"],["esp_vfs_dev_uart_port_set_rx_line_endings","@brief Set the line endings expected to be received on specified UART"],["esp_vfs_dev_uart_port_set_tx_line_endings","@brief Set the line endings to sent to specified UART"],["esp_vfs_dev_uart_register","@brief add /dev/uart virtual filesystem driver"],["esp_vfs_dev_uart_set_rx_line_endings","@brief Set the line endings expected to be received on UART"],["esp_vfs_dev_uart_set_tx_line_endings","@brief Set the line endings to sent to UART"],["esp_vfs_dev_uart_use_driver","@brief set VFS to use UART driver for reading and writing @note application must configure UART driver before calling these functions With these functions, read and write are blocking and interrupt-driven. @param uart_num UART peripheral number"],["esp_vfs_dev_uart_use_nonblocking","@brief set VFS to use simple functions for reading and writing UART Read is non-blocking, write is busy waiting until TX FIFO has enough space. These functions are used by default. @param uart_num UART peripheral number"],["esp_vfs_dev_usb_serial_jtag_register","@brief add /dev/usbserjtag virtual filesystem driver"],["esp_vfs_dev_usb_serial_jtag_set_rx_line_endings","@brief Set the line endings expected to be received"],["esp_vfs_dev_usb_serial_jtag_set_tx_line_endings","@brief Set the line endings to sent"],["esp_vfs_fat_rawflash_mount","@brief Convenience function to initialize read-only FAT filesystem and register it in VFS"],["esp_vfs_fat_rawflash_unmount","@brief Unmount FAT filesystem and release resources acquired using esp_vfs_fat_rawflash_mount"],["esp_vfs_fat_register","@brief Register FATFS with VFS component"],["esp_vfs_fat_sdcard_unmount","@brief Unmount an SD card from the FAT filesystem and release resources acquired using `esp_vfs_fat_sdmmc_mount()` or `esp_vfs_fat_sdspi_mount()`"],["esp_vfs_fat_sdmmc_mount","@brief Convenience function to get FAT filesystem on SD card registered in VFS"],["esp_vfs_fat_sdmmc_unmount","@brief Unmount FAT filesystem and release resources acquired using esp_vfs_fat_sdmmc_mount"],["esp_vfs_fat_sdspi_mount","@brief Convenience function to get FAT filesystem on SD card registered in VFS"],["esp_vfs_fat_spiflash_mount","@brief Convenience function to initialize FAT filesystem in SPI flash and register it in VFS"],["esp_vfs_fat_spiflash_unmount","@brief Unmount FAT filesystem and release resources acquired using esp_vfs_fat_spiflash_mount"],["esp_vfs_fat_unregister_path","@brief Un-register FATFS from VFS"],["esp_vfs_fstat",""],["esp_vfs_link",""],["esp_vfs_lseek",""],["esp_vfs_lwip_sockets_register",""],["esp_vfs_open",""],["esp_vfs_pread","@brief Implements the VFS layer of POSIX pread()"],["esp_vfs_pwrite","@brief Implements the VFS layer of POSIX pwrite()"],["esp_vfs_read",""],["esp_vfs_register","Register a virtual filesystem for given path prefix."],["esp_vfs_register_fd","Special function for registering another file descriptor for a VFS registered by esp_vfs_register_with_id."],["esp_vfs_register_fd_range","Special case function for registering a VFS that uses a method other than open() to open new file descriptors from the interval <min_fd; max_fd)."],["esp_vfs_register_with_id","Special case function for registering a VFS that uses a method other than open() to open new file descriptors. In comparison with esp_vfs_register_fd_range, this function doesn’t pre-registers an interval of file descriptors. File descriptors can be registered later, by using esp_vfs_register_fd."],["esp_vfs_rename",""],["esp_vfs_select","@brief Synchronous I/O multiplexing which implements the functionality of POSIX select() for VFS @param nfds      Specifies the range of descriptors which should be checked. The first nfds descriptors will be checked in each set. @param readfds   If not NULL, then points to a descriptor set that on input specifies which descriptors should be checked for being ready to read, and on output indicates which descriptors are ready to read. @param writefds  If not NULL, then points to a descriptor set that on input specifies which descriptors should be checked for being ready to write, and on output indicates which descriptors are ready to write. @param errorfds  If not NULL, then points to a descriptor set that on input specifies which descriptors should be checked for error conditions, and on output indicates which descriptors have error conditions. @param timeout   If not NULL, then points to timeval structure which specifies the time period after which the functions should time-out and return. If it is NULL, then the function will not time-out."],["esp_vfs_select_triggered","@brief Notification from a VFS driver about a read/write/error condition"],["esp_vfs_select_triggered_isr","@brief Notification from a VFS driver about a read/write/error condition (ISR version)"],["esp_vfs_semihost_register","@brief add virtual filesystem semihosting driver"],["esp_vfs_semihost_unregister","@brief Un-register semihosting driver from VFS"],["esp_vfs_spiffs_register","Register and mount SPIFFS to VFS with given path prefix."],["esp_vfs_spiffs_unregister","Unregister and unmount SPIFFS from VFS"],["esp_vfs_stat",""],["esp_vfs_unlink",""],["esp_vfs_unregister","Unregister a virtual filesystem for given path prefix"],["esp_vfs_unregister_fd","Special function for unregistering a file descriptor belonging to a VFS registered by esp_vfs_register_with_id."],["esp_vfs_utime",""],["esp_vfs_write","These functions are to be used in newlib syscall table. They will be called by newlib when it needs to use any of the syscalls."],["esp_wake_deep_sleep","@brief Default stub to run on wake from deep sleep."],["esp_wifi_80211_tx","@brief     Send raw ieee80211 data"],["esp_wifi_ap_get_sta_aid","@brief     Get AID of STA connected with soft-AP"],["esp_wifi_ap_get_sta_list","@brief     Get STAs associated with soft-AP"],["esp_wifi_clear_default_wifi_driver_and_handlers","@brief Clears default wifi event handlers for supplied network interface"],["esp_wifi_clear_fast_connect","@brief     Currently this API is just an stub API"],["esp_wifi_config_11b_rate","@brief      Enable or disable 11b rate of specified interface"],["esp_wifi_config_80211_tx_rate","@brief      Config 80211 tx rate of specified interface"],["esp_wifi_config_espnow_rate","@brief      Config ESPNOW rate of specified interface"],["esp_wifi_connect","@brief     Connect the ESP32 WiFi station to the AP."],["esp_wifi_create_if_driver","@brief Creates wifi driver instance to be used with esp-netif"],["esp_wifi_deauth_sta","@brief     deauthenticate all stations or associated id equals to aid"],["esp_wifi_deinit","@brief  Deinit WiFi Free all resource allocated in esp_wifi_init and stop WiFi task"],["esp_wifi_destroy_if_driver","@brief Destroys wifi driver instance"],["esp_wifi_disconnect","@brief     Disconnect the ESP32 WiFi station from the AP."],["esp_wifi_ftm_end_session","@brief      End the ongoing FTM Initiator session"],["esp_wifi_ftm_initiate_session","@brief      Start an FTM Initiator session by sending FTM request If successful, event WIFI_EVENT_FTM_REPORT is generated with the result of the FTM procedure"],["esp_wifi_ftm_resp_set_offset","@brief      Set offset in cm for FTM Responder. An equivalent offset is calculated in picoseconds and added in TOD of FTM Measurement frame (T1)."],["esp_wifi_get_ant","@brief     Get current antenna configuration"],["esp_wifi_get_ant_gpio","@brief     Get current antenna GPIO configuration"],["esp_wifi_get_bandwidth","@brief     Get the bandwidth of ESP32 specified interface"],["esp_wifi_get_channel","@brief     Get the primary/secondary channel of ESP32"],["esp_wifi_get_config","@brief     Get configuration of specified interface"],["esp_wifi_get_country","@brief     get the current country info"],["esp_wifi_get_country_code","@brief     get the current country code"],["esp_wifi_get_event_mask","@brief     Get mask of WiFi events"],["esp_wifi_get_if_mac","@brief Return mac of specified wifi driver instance"],["esp_wifi_get_inactive_time","@brief     Get inactive time of specified interface"],["esp_wifi_get_mac","@brief     Get mac of specified interface"],["esp_wifi_get_max_tx_power","@brief     Get maximum transmiting power after WiFi start"],["esp_wifi_get_mode","@brief  Get current operating mode of WiFi"],["esp_wifi_get_promiscuous","@brief     Get the promiscuous mode."],["esp_wifi_get_promiscuous_ctrl_filter","@brief     Get the subtype filter of the control packet in promiscuous mode."],["esp_wifi_get_promiscuous_filter","@brief     Get the promiscuous filter."],["esp_wifi_get_protocol","@brief     Get the current protocol bitmap of the specified interface"],["esp_wifi_get_ps","@brief     Get current WiFi power save type"],["esp_wifi_get_tsf_time","@brief      Get the TSF time In Station mode or SoftAP+Station mode if station is not connected or station doesn’t receive at least one beacon after connected, will return 0"],["esp_wifi_init","@brief  Init WiFi Alloc resource for WiFi driver, such as WiFi control structure, RX/TX buffer, WiFi NVS structure etc, this WiFi also start WiFi task"],["esp_wifi_is_if_ready_when_started","@brief Return true if the supplied interface instance is ready after start. Typically used when registering on receive callback, which ought to be installed as soon as AP started, but once STA gets connected."],["esp_wifi_register_if_rxcb","@brief Register interface receive callback function with argument"],["esp_wifi_restore","@brief  Restore WiFi stack persistent settings to default values"],["esp_wifi_scan_get_ap_num","@brief     Get number of APs found in last scan"],["esp_wifi_scan_get_ap_records","@brief     Get AP list found in last scan"],["esp_wifi_scan_start","@brief     Scan all available APs."],["esp_wifi_scan_stop","@brief     Stop the scan in process"],["esp_wifi_set_ant","@brief     Set antenna configuration"],["esp_wifi_set_ant_gpio","@brief     Set antenna GPIO configuration"],["esp_wifi_set_bandwidth","@brief     Set the bandwidth of ESP32 specified interface"],["esp_wifi_set_channel","@brief     Set primary/secondary channel of ESP32"],["esp_wifi_set_config","@brief     Set the configuration of the ESP32 STA or AP"],["esp_wifi_set_connectionless_wake_interval","@brief      Set interval for station to wake up periodically at disconnected."],["esp_wifi_set_country","@brief     configure country info"],["esp_wifi_set_country_code","@brief     configure country"],["esp_wifi_set_csi","@brief Enable or disable CSI"],["esp_wifi_set_csi_config","@brief Set CSI data configuration"],["esp_wifi_set_csi_rx_cb","@brief Register the RX callback function of CSI data."],["esp_wifi_set_default_wifi_ap_handlers","@brief Sets default wifi event handlers for AP interface"],["esp_wifi_set_default_wifi_sta_handlers","@brief Sets default wifi event handlers for STA interface"],["esp_wifi_set_event_mask","@brief     Set mask to enable or disable some WiFi events"],["esp_wifi_set_inactive_time","@brief     Set the inactive time of the ESP32 STA or AP"],["esp_wifi_set_mac","@brief     Set MAC address of the ESP32 WiFi station or the soft-AP interface."],["esp_wifi_set_max_tx_power","@brief     Set maximum transmitting power after WiFi start."],["esp_wifi_set_mode","@brief     Set the WiFi operating mode"],["esp_wifi_set_promiscuous","@brief     Enable the promiscuous mode."],["esp_wifi_set_promiscuous_ctrl_filter","@brief Enable subtype filter of the control packet in promiscuous mode."],["esp_wifi_set_promiscuous_filter","@brief Enable the promiscuous mode packet type filter."],["esp_wifi_set_promiscuous_rx_cb","@brief Register the RX callback function in the promiscuous mode."],["esp_wifi_set_protocol","@brief     Set protocol type of specified interface The default protocol is (WIFI_PROTOCOL_11B|WIFI_PROTOCOL_11G|WIFI_PROTOCOL_11N)"],["esp_wifi_set_ps","@brief     Set current WiFi power save type"],["esp_wifi_set_rssi_threshold","@brief      Set RSSI threshold below which APP will get an event"],["esp_wifi_set_storage","@brief     Set the WiFi API configuration storage type"],["esp_wifi_set_vendor_ie","@brief     Set 802.11 Vendor-Specific Information Element"],["esp_wifi_set_vendor_ie_cb","@brief     Register Vendor-Specific Information Element monitoring callback."],["esp_wifi_sta_get_ap_info","@brief     Get information of AP which the ESP32 station is associated with"],["esp_wifi_start","@brief  Start WiFi according to current configuration If mode is WIFI_MODE_STA, it create station control block and start station If mode is WIFI_MODE_AP, it create soft-AP control block and start soft-AP If mode is WIFI_MODE_APSTA, it create soft-AP and station control block and start soft-AP and station"],["esp_wifi_statis_dump","@brief     Dump WiFi statistics"],["esp_wifi_stop","@brief  Stop WiFi If mode is WIFI_MODE_STA, it stop station and free station control block If mode is WIFI_MODE_AP, it stop soft-AP and free soft-AP control block If mode is WIFI_MODE_APSTA, it stop station/soft-AP and free station/soft-AP control block"],["essl_clear_intr","Clear interrupt bits of ESSL slave. All the bits set in the mask will be cleared, while other bits will stay the same."],["essl_get_intr","Get interrupt bits of ESSL slave."],["essl_get_intr_ena","Get interrupt enable bits of ESSL slave."],["essl_get_packet","Get a packet from ESSL slave."],["essl_get_rx_data_size","Get the size, in bytes, of the data that the ESSL slave is ready to send"],["essl_get_tx_buffer_num","Get buffer num for the host to send data to the slave. The buffers are size of `buffer_size`."],["essl_init","@brief Initialize the slave."],["essl_read_reg","Read general purpose R/W registers (8-bit) of ESSL slave."],["essl_reset_cnt","Reset the counters of this component. Usually you don’t need to do this unless you know the slave is reset."],["essl_sdio_clear_intr","Clear interrupt bits of ESP32 slave. All the bits set in the mask will be cleared, while other bits will stay the same."],["essl_sdio_deinit_dev","@brief Deinitialize and free the space used by the ESSL SDIO device."],["essl_sdio_get_intr","Get interrupt bits of ESP32 slave."],["essl_sdio_get_intr_ena","Get interrupt enable bits of ESP32 slave."],["essl_sdio_get_packet","Get a packet from ESP32 slave."],["essl_sdio_get_rx_data_size","Get amount of data the ESP32 slave preparing to send to host."],["essl_sdio_get_tx_buffer_num","Get buffer num for the host to send data to the slave. The buffers are size of `buffer_size`."],["essl_sdio_init","@cond */ SDIO Initialize process of a ESP32 slave device."],["essl_sdio_init_dev","@brief Initialize the ESSL SDIO device and get its handle."],["essl_sdio_read_reg","Read general purpose R/W registers (8-bit) of ESP32 slave."],["essl_sdio_reset_cnt","@brief Reset the counter on the host side."],["essl_sdio_send_packet","Send a packet to the ESP32 slave. The slave receive the packet into buffers whose size is `buffer_size` in the arg."],["essl_sdio_send_slave_intr","Send interrupts to slave. Each bit of the interrupt will be triggered."],["essl_sdio_set_intr_ena","Set interrupt enable bits of ESP32 slave. The slave only sends interrupt on the line when there is a bit both the raw status and the enable are set."],["essl_sdio_wait_for_ready","Wait for interrupt of a ESP32 slave device."],["essl_sdio_wait_int","Wait for the interrupt from the SDIO slave."],["essl_sdio_write_reg","Write general purpose R/W registers (8-bit) of ESP32 slave."],["essl_send_packet","Send a packet to the ESSL Slave. The Slave receives the packet into buffers whose size is `buffer_size` (configured during initialization)."],["essl_send_slave_intr","Send interrupts to slave. Each bit of the interrupt will be triggered."],["essl_set_intr_ena","Set interrupt enable bits of ESSL slave. The slave only sends interrupt on the line when there is a bit both the raw status and the enable are set."],["essl_wait_for_ready","Wait for interrupt of an ESSL slave device."],["essl_wait_int","wait for an interrupt of the slave"],["essl_write_reg","Write general purpose R/W registers (8-bit) of ESSL slave."],["ets_delay_us","@brief  CPU do while loop for some time. In FreeRTOS task, please call FreeRTOS apis."],["ets_get_apb_freq","@brief  Get apb_freq value, If value not stored in RTC_STORE5, than store."],["ets_get_cpu_frequency","@brief  Get the real CPU ticks per us to the ets. This function do not return real CPU ticks per us, just the record in ets. It can be used to check with the real CPU frequency."],["ets_get_printf_channel","@brief Get the uart channel of ets_printf(uart_tx_one_char)."],["ets_get_xtal_div","@brief  Get the apb divior by xtal frequency. When any types of reset happen, the default value is 2."],["ets_get_xtal_freq","@brief  Get xtal_freq value, If value not stored in RTC_STORE5, than store."],["ets_install_putc1","@brief  Ets_printf have two output functions： putc1 and putc2, both of which will be called if need ouput. To install putc1, which is defaulted installed as ets_write_char_uart in none silent boot mode, as NULL in silent mode."],["ets_install_putc2","@brief  Ets_printf have two output functions： putc1 and putc2, both of which will be called if need ouput. To install putc2, which is defaulted installed as NULL."],["ets_install_uart_printf","@brief  Install putc1 as ets_write_char_uart. In silent boot mode(to void interfere the UART attached MCU), we can call this function, after booting ok."],["ets_intr_lock","@brief  Lock the interrupt to level 2. This function direct set the CPU registers. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_intr_unlock","@brief  Unlock the interrupt to level 0. This function direct set the CPU registers. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_isr_attach","@brief  Attach a interrupt handler to a CPU interrupt number. This function equals to _xtos_set_interrupt_handler_arg(i, func, arg). In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_isr_mask","@brief  Mask the interrupts which show in mask bits. This function equals to _xtos_ints_off(mask). In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_isr_unmask","@brief  Unmask the interrupts which show in mask bits. This function equals to _xtos_ints_on(mask). In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_post","@brief  Post an event to an Task."],["ets_printf","@brief  Printf the strings to uart or other devices, similar with printf, simple than printf. Can not print float point data format, or longlong data format. So we maybe only use this in ROM."],["ets_run","@brief  Start the Espressif Task Scheduler, which is an infinit loop. Please do not add code after it."],["ets_set_appcpu_boot_addr","@brief  Set App cpu Entry code, code can be called in PRO CPU. When APP booting is completed, APP CPU will call the Entry code if not NULL."],["ets_set_idle_cb","@brief  Set the Idle callback, when Tasks are processed, will call the callback before CPU goto sleep."],["ets_set_printf_channel","@brief  Set the uart channel of ets_printf(uart_tx_one_char). ROM will set it base on the efuse and gpio setting, however, this can be changed after booting."],["ets_set_startup_callback","@brief  Set Pro cpu Startup code, code can be called when booting is not completed, or in Entry code. When Entry code completed, CPU will call the Startup code if not NULL, else call ets_run."],["ets_set_user_start","@brief  Set Pro cpu Entry code, code can be called in PRO CPU when booting is not completed. When Pro CPU booting is completed, Pro CPU will call the Entry code if not NULL."],["ets_task","@brief  Init a task with processer, priority, queue to receive Event, queue length."],["ets_timer_arm","@brief  Arm an ets timer, this timer range is 640 us to 429496 ms. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_arm_us","@brief  Arm an ets timer, this timer range is 640 us to 429496 ms. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_deinit","@brief  In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_disarm","@brief  Disarm an ets timer. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_done","@brief  Unset timer callback and argument to NULL. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_init","@brief  Init ets timer, this timer range is 640 us to 429496 ms In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_timer_setfn","@brief  Set timer callback and argument. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_update_cpu_frequency","@brief  Set the real CPU ticks per us to the ets, so that ets_delay_us will be accurate. Call this function when CPU frequency is changed."],["ets_update_cpu_frequency_rom","@brief  Set the real CPU ticks per us to the ets, so that ets_delay_us will be accurate."],["ets_waiti0","@brief  Unlock the interrupt to level 0, and CPU will go into power save mode(wait interrupt). This function direct set the CPU registers. In FreeRTOS, please call FreeRTOS apis, never call this api."],["ets_write_char_uart","@brief  Output a char to uart, which uart to output(which is in uart module in ROM) is not in scope of the function. Can not print float point data format, or longlong data format"],["execl",""],["execle",""],["execlp",""],["execlpe",""],["execv",""],["execve",""],["execvp",""],["exit",""],["explicit_bzero",""],["f_chdir",""],["f_chdrive",""],["f_chmod",""],["f_close",""],["f_closedir",""],["f_expand",""],["f_fdisk",""],["f_findfirst",""],["f_findnext",""],["f_forward",""],["f_getcwd",""],["f_getfree",""],["f_getlabel",""],["f_gets",""],["f_lseek",""],["f_mkdir",""],["f_mkfs",""],["f_mount",""],["f_open",""],["f_opendir",""],["f_printf",""],["f_putc",""],["f_puts",""],["f_read",""],["f_readdir",""],["f_rename",""],["f_setcp",""],["f_setlabel",""],["f_stat",""],["f_sync",""],["f_truncate",""],["f_unlink",""],["f_utime",""],["f_write",""],["faccessat",""],["fchdir",""],["fchmod",""],["fchmodat",""],["fchown",""],["fchownat",""],["fclose",""],["fcntl",""],["fdatasync",""],["fdopen",""],["feof",""],["feof_unlocked",""],["ferror",""],["ferror_unlocked",""],["fexecve",""],["ff_cre_syncobj",""],["ff_del_syncobj",""],["ff_disk_initialize",""],["ff_disk_ioctl",""],["ff_disk_read",""],["ff_disk_status",""],["ff_disk_write",""],["ff_diskio_clear_pdrv_wl",""],["ff_diskio_get_drive","Get next available drive number"],["ff_diskio_get_pdrv_card","@brief Get the driver number corresponding to a card"],["ff_diskio_get_pdrv_raw",""],["ff_diskio_get_pdrv_wl",""],["ff_diskio_register","Register or unregister diskio driver for given drive number."],["ff_diskio_register_raw_partition","Register spi flash partition"],["ff_diskio_register_sdmmc","Register SD/MMC diskio driver"],["ff_diskio_register_wl_partition","Register spi flash partition"],["ff_memalloc",""],["ff_memfree",""],["ff_rel_grant",""],["ff_req_grant",""],["fflush",""],["fflush_unlocked",""],["ffs",""],["ffsl",""],["ffsll",""],["fgetc",""],["fgetc_unlocked",""],["fgetpos",""],["fgets",""],["fileno",""],["fileno_unlocked",""],["fiprintf",""],["fiscanf",""],["flock",""],["flockfile",""],["fls",""],["flsl",""],["flsll",""],["fmemopen",""],["fopen",""],["fork",""],["fpathconf",""],["fprintf",""],["fpurge",""],["fputc",""],["fputc_unlocked",""],["fputs",""],["fread",""],["fread_unlocked",""],["free",""],["freopen",""],["fscanf",""],["fseek",""],["fseeko",""],["fsetpos",""],["fstat",""],["fstatat",""],["fsync",""],["ftell",""],["ftello",""],["ftruncate",""],["ftrylockfile",""],["funlockfile",""],["funopen",""],["futimens",""],["futimes",""],["fwrite",""],["fwrite_unlocked",""],["get_fattime",""],["getc",""],["getc_unlocked",""],["getchar",""],["getchar_unlocked",""],["getcwd",""],["getdomainname",""],["getdtablesize",""],["getegid",""],["getentropy",""],["getenv",""],["geteuid",""],["getgid",""],["getgroups",""],["gethostid",""],["gethostname",""],["getitimer",""],["getlogin",""],["getopt",""],["getpagesize",""],["getpass",""],["getpeereid",""],["getpgid",""],["getpgrp",""],["getpid",""],["getppid",""],["gets",""],["getsid",""],["getsubopt",""],["gettimeofday",""],["getuid",""],["getusershell",""],["getw",""],["getwd",""],["gmtime",""],["gmtime_r",""],["gpio_config","@brief GPIO common configuration"],["gpio_deep_sleep_hold_dis","@brief Disable all digital gpio pad hold function during Deep-sleep."],["gpio_deep_sleep_hold_en","@brief Enable all digital gpio pad hold function during Deep-sleep."],["gpio_deep_sleep_wakeup_disable","@brief Disable GPIO deep-sleep wake-up function."],["gpio_deep_sleep_wakeup_enable","@brief Enable GPIO deep-sleep wake-up function."],["gpio_force_hold_all","@brief Force hold digital and rtc gpio pad. @note GPIO force hold, whether the chip in sleep mode or wakeup mode."],["gpio_force_unhold_all","@brief Force unhold digital and rtc gpio pad. @note GPIO force unhold, whether the chip in sleep mode or wakeup mode."],["gpio_get_drive_capability","@brief Get GPIO pad drive capability"],["gpio_get_level","@brief  GPIO get input level"],["gpio_hold_dis","@brief Disable gpio pad hold function."],["gpio_hold_en","@brief Enable gpio pad hold function."],["gpio_init","@brief Initialize GPIO. This includes reading the GPIO Configuration DataSet to initialize “output enables” and pin configurations for each gpio pin. Please do not call this function in SDK."],["gpio_input_get","@brief Sample the value of GPIO input pins(0-31) and returns a bitmask."],["gpio_input_get_high","@brief Sample the value of GPIO input pins(32-39) and returns a bitmask."],["gpio_install_isr_service","@brief Install the driver’s GPIO ISR handler service, which allows per-pin GPIO interrupt handlers."],["gpio_intr_ack","@brief Ack gpio interrupts to process pending interrupts. Please do not call this function in SDK."],["gpio_intr_ack_high","@brief Ack gpio interrupts to process pending interrupts. Please do not call this function in SDK."],["gpio_intr_disable","@brief  Disable GPIO module interrupt signal"],["gpio_intr_enable","@brief  Enable GPIO module interrupt signal"],["gpio_intr_handler_register","@brief Register an application-specific interrupt handler for GPIO pin interrupts. Once the interrupt handler is called, it will not be called again until after a call to gpio_intr_ack. Please do not call this function in SDK."],["gpio_intr_pending","@brief Get gpio interrupts which happens but not processed. Please do not call this function in SDK."],["gpio_intr_pending_high","@brief Get gpio interrupts which happens but not processed. Please do not call this function in SDK."],["gpio_iomux_in","@brief Set pad input to a peripheral signal through the IOMUX. @param gpio_num GPIO number of the pad. @param signal_idx Peripheral signal id to input. One of the `*_IN_IDX` signals in `soc/gpio_sig_map.h`."],["gpio_iomux_out","@brief Set peripheral output to an GPIO pad through the IOMUX. @param gpio_num gpio_num GPIO number of the pad. @param func The function number of the peripheral pin to output pin. One of the `FUNC_X_*` of specified pin (X) in `soc/io_mux_reg.h`. @param oen_inv True if the output enable needs to be inverted, otherwise False."],["gpio_isr_handler_add","@brief Add ISR handler for the corresponding GPIO pin."],["gpio_isr_handler_remove","@brief Remove ISR handler for the corresponding GPIO pin."],["gpio_isr_register","@brief   Register GPIO interrupt handler, the handler is an ISR. The handler will be attached to the same CPU core that this function is running on."],["gpio_matrix_in","@brief set gpio input to a signal, one gpio can input to several signals."],["gpio_matrix_out","@brief set signal output to gpio, one signal can output to several gpios."],["gpio_output_set","@brief Change GPIO(0-31) pin output by setting, clearing, or disabling pins, GPIO0<->BIT(0). There is no particular ordering guaranteed; so if the order of writes is significant, calling code should divide a single call into multiple calls."],["gpio_output_set_high","@brief Change GPIO(32-39) pin output by setting, clearing, or disabling pins, GPIO32<->BIT(0). There is no particular ordering guaranteed; so if the order of writes is significant, calling code should divide a single call into multiple calls."],["gpio_pad_hold","@brief Hold the pad from gpio number."],["gpio_pad_input_enable","@brief enable gpio pad input."],["gpio_pad_pulldown","@brief Pull down the pad from gpio number."],["gpio_pad_pullup","@brief Pull up the pad from gpio number."],["gpio_pad_select_gpio","@brief Select pad as a gpio function from IOMUX."],["gpio_pad_set_drv","@brief Set pad driver capability."],["gpio_pad_unhold","@brief Unhold the pad from gpio number."],["gpio_pin_wakeup_disable","@brief disable GPIOs to wakeup the ESP32. Please do not call this function in SDK."],["gpio_pin_wakeup_enable","@brief Set GPIO to wakeup the ESP32. Please do not call this function in SDK."],["gpio_pulldown_dis","@brief Disable pull-down on GPIO."],["gpio_pulldown_en","@brief Enable pull-down on GPIO."],["gpio_pullup_dis","@brief Disable pull-up on GPIO."],["gpio_pullup_en","@brief Enable pull-up on GPIO."],["gpio_reset_pin","@brief Reset an gpio to default state (select gpio function, enable pullup and disable input and output)."],["gpio_set_direction","@brief\t GPIO set direction"],["gpio_set_drive_capability","@brief Set GPIO pad drive capability"],["gpio_set_intr_type","@brief  GPIO set interrupt trigger type"],["gpio_set_level","@brief  GPIO set output level"],["gpio_set_pull_mode","@brief  Configure GPIO pull-up/pull-down resistors"],["gpio_sleep_sel_dis","@brief Disable SLP_SEL to change GPIO status automantically in lightsleep. @param gpio_num GPIO number of the pad."],["gpio_sleep_sel_en","@brief Enable SLP_SEL to change GPIO status automantically in lightsleep. @param gpio_num GPIO number of the pad."],["gpio_sleep_set_direction","@brief\t GPIO set direction at sleep"],["gpio_sleep_set_pull_mode","@brief  Configure GPIO pull-up/pull-down resistors at sleep"],["gpio_uninstall_isr_service","@brief Uninstall the driver’s GPIO ISR service, freeing related resources."],["gpio_wakeup_disable","@brief Disable GPIO wake-up function."],["gpio_wakeup_enable","@brief Enable GPIO wake-up function."],["heap_caps_aligned_alloc","@brief Allocate a aligned chunk of memory which has the given capabilities"],["heap_caps_aligned_calloc","@brief Allocate a aligned chunk of memory which has the given capabilities. The initialized value in the memory is set to zero."],["heap_caps_aligned_free","@brief Used to deallocate memory previously allocated with heap_caps_aligned_alloc"],["heap_caps_calloc","@brief Allocate a chunk of memory which has the given capabilities. The initialized value in the memory is set to zero."],["heap_caps_calloc_prefer","@brief Allocate a chunk of memory as preference in decreasing order."],["heap_caps_check_integrity","@brief Check integrity of all heaps with the given capabilities."],["heap_caps_check_integrity_addr","@brief Check integrity of heap memory around a given address."],["heap_caps_check_integrity_all","@brief Check integrity of all heap memory in the system."],["heap_caps_dump","@brief Dump the full structure of all heaps with matching capabilities."],["heap_caps_dump_all","@brief Dump the full structure of all heaps."],["heap_caps_free","@brief Free memory previously allocated via heap_caps_malloc() or heap_caps_realloc()."],["heap_caps_get_allocated_size","@brief Return the size that a particular pointer was allocated with."],["heap_caps_get_free_size","@brief Get the total free size of all the regions that have the given capabilities"],["heap_caps_get_info","@brief Get heap info for all regions with the given capabilities."],["heap_caps_get_largest_free_block","@brief Get the largest free block of memory able to be allocated with the given capabilities."],["heap_caps_get_minimum_free_size","@brief Get the total minimum free memory of all regions with the given capabilities"],["heap_caps_get_total_size","@brief Get the total size of all the regions that have the given capabilities"],["heap_caps_malloc","@brief Allocate a chunk of memory which has the given capabilities"],["heap_caps_malloc_extmem_enable","@brief Enable malloc() in external memory and set limit below which malloc() attempts are placed in internal memory."],["heap_caps_malloc_prefer","@brief Allocate a chunk of memory as preference in decreasing order."],["heap_caps_print_heap_info","@brief Print a summary of all memory with the given capabilities."],["heap_caps_realloc","@brief Reallocate memory previously allocated via heap_caps_malloc() or heap_caps_realloc()."],["heap_caps_realloc_prefer","@brief Allocate a chunk of memory as preference in decreasing order."],["heap_caps_register_failed_alloc_callback","@brief registers a callback function to be invoked if a memory allocation operation fails @param callback caller defined callback to be invoked @return ESP_OK if callback was registered."],["http_body_is_final",""],["http_errno_description",""],["http_errno_name",""],["http_method_str",""],["http_parser_execute",""],["http_parser_init",""],["http_parser_parse_url",""],["http_parser_pause",""],["http_parser_settings_init",""],["http_parser_url_init",""],["http_parser_version",""],["http_should_keep_alive",""],["httpd_get_client_list","@brief   Returns list of current socket descriptors of active sessions"],["httpd_get_global_transport_ctx","@brief   Get HTTPD global transport context (it was set in the server config struct)"],["httpd_get_global_user_ctx","@brief   Get HTTPD global user context (it was set in the server config struct)"],["httpd_query_key_value","@brief   Helper function to get a URL query tag from a query string of the type param1=val1&param2=val2"],["httpd_queue_work","@brief   Queue execution of a function in HTTPD’s context"],["httpd_register_err_handler","@brief  Function for registering HTTP error handlers"],["httpd_register_uri_handler","@brief   Registers a URI handler"],["httpd_req_get_hdr_value_len","@brief   Search for a field in request headers and return the string length of it’s value"],["httpd_req_get_hdr_value_str","@brief   Get the value string of a field from the request headers"],["httpd_req_get_url_query_len","@brief   Get Query string length from the request URL"],["httpd_req_get_url_query_str","@brief   Get Query string from the request URL"],["httpd_req_recv","@brief   API to read content data from the HTTP request"],["httpd_req_to_sockfd","@brief   Get the Socket Descriptor from the HTTP request"],["httpd_resp_send","@brief   API to send a complete HTTP response."],["httpd_resp_send_chunk","@brief   API to send one HTTP chunk"],["httpd_resp_send_err","@brief   For sending out error code in response to HTTP request."],["httpd_resp_set_hdr","@brief   API to append any additional headers"],["httpd_resp_set_status","@brief   API to set the HTTP status code"],["httpd_resp_set_type","@brief   API to set the HTTP content type"],["httpd_send","@brief   Raw HTTP send"],["httpd_sess_get_ctx","@brief   Get session context from socket descriptor"],["httpd_sess_get_transport_ctx","@brief   Get session ‘transport’ context by socket descriptor @see     httpd_sess_get_ctx()"],["httpd_sess_set_ctx","@brief   Set session context by socket descriptor"],["httpd_sess_set_pending_override","@brief   Override web server’s pending function (by session FD)"],["httpd_sess_set_recv_override","@brief   Override web server’s receive function (by session FD)"],["httpd_sess_set_send_override","@brief   Override web server’s send function (by session FD)"],["httpd_sess_set_transport_ctx","@brief   Set session ‘transport’ context by socket descriptor @see     httpd_sess_set_ctx()"],["httpd_sess_trigger_close","@brief   Trigger an httpd session close externally"],["httpd_sess_update_lru_counter","@brief   Update LRU counter for a given socket"],["httpd_socket_recv","A low level API to receive data from a given socket"],["httpd_socket_send","A low level API to send data on a given socket"],["httpd_start","@brief Starts the web server"],["httpd_stop","@brief Stops the web server"],["httpd_unregister_uri","@brief   Unregister all URI handlers with the specified uri string"],["httpd_unregister_uri_handler","@brief   Unregister a URI handler"],["httpd_uri_match_wildcard","@brief Test if a URI matches the given wildcard template."],["i2c_cmd_link_create","@brief Create and init I2C command link @note Before we build I2C command link, we need to call i2c_cmd_link_create() to create a command link. After we finish sending the commands, we need to call i2c_cmd_link_delete() to release and return the resources."],["i2c_cmd_link_delete","@brief Free I2C command link @note Before we build I2C command link, we need to call i2c_cmd_link_create() to create a command link. After we finish sending the commands, we need to call i2c_cmd_link_delete() to release and return the resources."],["i2c_driver_delete","@brief I2C driver delete"],["i2c_driver_install","@brief I2C driver install"],["i2c_filter_disable","@brief disable filter on I2C bus"],["i2c_filter_enable","@brief enable hardware filter on I2C bus Sometimes the I2C bus is disturbed by high frequency noise(about 20ns), or the rising edge of the SCL clock is very slow, these may cause the master state machine broken. enable hardware filter can filter out high frequency interference and make the master more stable. @note Enable filter will slow the SCL clock."],["i2c_get_data_mode","@brief get I2C data transfer mode"],["i2c_get_data_timing","@brief get I2C data signal timing"],["i2c_get_period","@brief get I2C master clock period"],["i2c_get_start_timing","@brief get I2C master start signal timing"],["i2c_get_stop_timing","@brief get I2C master stop signal timing"],["i2c_get_timeout","@brief get I2C timeout value @param i2c_num I2C port number @param timeout pointer to get timeout value @return - ESP_OK Success - ESP_ERR_INVALID_ARG Parameter error"],["i2c_isr_free","@brief to delete and free I2C isr."],["i2c_isr_register","@brief I2C isr handler register"],["i2c_master_cmd_begin","@brief I2C master send queued commands. This function will trigger sending all queued commands. The task will be blocked until all the commands have been sent out. The I2C APIs are not thread-safe, if you want to use one I2C port in different tasks, you need to take care of the multi-thread issue. @note Only call this function in I2C master mode"],["i2c_master_read","@brief Queue command for I2C master to read data from I2C bus @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_master_read_byte","@brief Queue command for I2C master to read one byte from I2C bus @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_master_start","@brief Queue command for I2C master to generate a start signal @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_master_stop","@brief Queue command for I2C master to generate a stop signal @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_master_write","@brief Queue command for I2C master to write buffer to I2C bus @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_master_write_byte","@brief Queue command for I2C master to write one byte to I2C bus @note Only call this function in I2C master mode Call i2c_master_cmd_begin() to send all queued commands"],["i2c_param_config","@brief I2C parameter initialization"],["i2c_reset_rx_fifo","@brief reset I2C rx fifo"],["i2c_reset_tx_fifo","@brief reset I2C tx hardware fifo"],["i2c_set_data_mode","@brief set I2C data transfer mode"],["i2c_set_data_timing","@brief set I2C data signal timing"],["i2c_set_period","@brief set I2C master clock period"],["i2c_set_pin","@brief Configure GPIO signal for I2C sck and sda"],["i2c_set_start_timing","@brief set I2C master start signal timing"],["i2c_set_stop_timing","@brief set I2C master stop signal timing"],["i2c_set_timeout","@brief set I2C timeout value @param i2c_num I2C port number @param timeout timeout value for I2C bus (unit: APB 80Mhz clock cycle) @return - ESP_OK Success - ESP_ERR_INVALID_ARG Parameter error"],["i2c_slave_read_buffer","@brief I2C slave read data from internal buffer. When I2C slave receive data, isr will copy received data from hardware rx fifo to internal ringbuffer. Then users can read from internal ringbuffer. @note Only call this function in I2C slave mode"],["i2c_slave_write_buffer","@brief I2C slave write data to internal ringbuffer, when tx fifo empty, isr will fill the hardware fifo from the internal ringbuffer @note Only call this function in I2C slave mode"],["i2s_driver_install","@brief Install and start I2S driver."],["i2s_driver_uninstall","@brief Uninstall I2S driver."],["i2s_get_clk","@brief get clock set on particular port number."],["i2s_hal_config_param","@brief Config I2S param"],["i2s_hal_enable_master_mode","@brief Enable I2S master mode"],["i2s_hal_enable_slave_mode","@brief Enable I2S slave mode"],["i2s_hal_init","@brief Init the I2S hal and set the I2S to the default configuration. This function should be called first before other hal layer function is called"],["i2s_hal_reset","@brief Reset I2S TX & RX module, including DMA and FIFO"],["i2s_hal_set_clk_div","@brief Set I2S clk div"],["i2s_hal_set_in_link","@brief Set I2S in link"],["i2s_hal_set_rx_bits_mod","@brief Set I2S rx bits mod"],["i2s_hal_set_rx_mode","@brief Set I2S rx mode"],["i2s_hal_set_tx_bits_mod","@brief Set I2S tx bits mod"],["i2s_hal_set_tx_mode","@brief Set I2S tx mode"],["i2s_hal_start_rx","@brief Start I2S rx"],["i2s_hal_start_tx","@brief Start I2S tx"],["i2s_hal_stop_rx","@brief Stop I2S rx"],["i2s_hal_stop_tx","@brief Stop I2S tx"],["i2s_read","@brief Read data from I2S DMA receive buffer"],["i2s_set_clk","@brief Set clock & bit width used for I2S RX and TX."],["i2s_set_dac_mode","@brief Set I2S dac mode, I2S built-in DAC is disabled by default"],["i2s_set_pin","@brief Set I2S pin number"],["i2s_set_sample_rates","@brief Set sample rate used for I2S RX and TX."],["i2s_start","@brief Start I2S driver"],["i2s_stop","@brief Stop I2S driver"],["i2s_write","@brief Write data to I2S DMA transmit buffer."],["i2s_write_expand","@brief Write data to I2S DMA transmit buffer while expanding the number of bits per sample. For example, expanding 16-bit PCM to 32-bit PCM."],["i2s_zero_dma_buffer","@brief Zero the contents of the TX DMA buffer."],["imaxabs",""],["imaxdiv",""],["index",""],["initstate",""],["intr_matrix_set","@brief  Attach an CPU interrupt to a hardware source. We have 4 steps to use an interrupt: 1.Attach hardware interrupt source to CPU.  intr_matrix_set(0, ETS_WIFI_MAC_INTR_SOURCE, ETS_WMAC_INUM); 2.Set interrupt handler.                    xt_set_interrupt_handler(ETS_WMAC_INUM, func, NULL); 3.Enable interrupt for CPU.                 xt_ints_on(1 << ETS_WMAC_INUM); 4.Enable interrupt in the module."],["ioctl",""],["ip4_addr_isbroadcast_u32",""],["ip4_addr_netmask_valid",""],["ip4addr_aton",""],["ip4addr_ntoa","returns ptr to static buffer; not reentrant!"],["ip4addr_ntoa_r",""],["ip6addr_aton",""],["ip6addr_ntoa","returns ptr to static buffer; not reentrant!"],["ip6addr_ntoa_r",""],["ipaddr_addr",""],["ipaddr_aton",""],["ipaddr_ntoa",""],["ipaddr_ntoa_r",""],["iprintf",""],["iruserok",""],["isalnum",""],["isalnum_l",""],["isalpha",""],["isalpha_l",""],["isascii",""],["isascii_l",""],["isatty",""],["isblank",""],["isblank_l",""],["iscanf",""],["iscntrl",""],["iscntrl_l",""],["isdigit",""],["isdigit_l",""],["isgraph",""],["isgraph_l",""],["islower",""],["islower_l",""],["isprint",""],["isprint_l",""],["ispunct",""],["ispunct_l",""],["issetugid",""],["isspace",""],["isspace_l",""],["isupper",""],["isupper_l",""],["isxdigit",""],["isxdigit_l",""],["itoa",""],["jrand48",""],["kill",""],["killpg",""],["l64a",""],["labs",""],["lchown",""],["lcong48",""],["ldiv",""],["ledc_bind_channel_timer","@brief Bind LEDC channel with the selected timer"],["ledc_channel_config","@brief LEDC channel configuration Configure LEDC channel with the given channel/output gpio_num/interrupt/source timer/frequency(Hz)/LEDC duty resolution"],["ledc_fade_func_install","@brief Install LEDC fade function. This function will occupy interrupt of LEDC module. @param intr_alloc_flags Flags used to allocate the interrupt. One or multiple (ORred) ESP_INTR_FLAG_* values. See esp_intr_alloc.h for more info."],["ledc_fade_func_uninstall","@brief Uninstall LEDC fade function."],["ledc_fade_start","@brief Start LEDC fading. @note  Call ledc_fade_func_install() once before calling this function. Call this API right after ledc_set_fade_with_time or ledc_set_fade_with_step before to start fading. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel number @param fade_mode Whether to block until fading done."],["ledc_get_duty","@brief LEDC get duty"],["ledc_get_freq","@brief      LEDC get channel frequency (Hz)"],["ledc_get_hpoint","@brief LEDC get hpoint value, the counter value when the output is set high level."],["ledc_isr_register","@brief Register LEDC interrupt handler, the handler is an ISR. The handler will be attached to the same CPU core that this function is running on."],["ledc_set_duty","@brief LEDC set duty This function do not change the hpoint value of this channel. if needed, please call ledc_set_duty_with_hpoint. only after calling ledc_update_duty will the duty update. @note  ledc_set_duty, ledc_set_duty_with_hpoint and ledc_update_duty are not thread-safe, do not call these functions to control one LEDC channel in different tasks at the same time. A thread-safe version of API is ledc_set_duty_and_update. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel (0-7), select from ledc_channel_t @param duty Set the LEDC duty, the range of duty setting is [0, (2**duty_resolution)]"],["ledc_set_duty_and_update","@brief A thread-safe API to set duty for LEDC channel and return when duty updated. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished."],["ledc_set_duty_with_hpoint","@brief LEDC set duty and hpoint value Only after calling ledc_update_duty will the duty update. @note  ledc_set_duty, ledc_set_duty_with_hpoint and ledc_update_duty are not thread-safe, do not call these functions to control one LEDC channel in different tasks at the same time. A thread-safe version of API is ledc_set_duty_and_update @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel (0-7), select from ledc_channel_t @param duty Set the LEDC duty, the range of duty setting is [0, (2**duty_resolution)] @param hpoint Set the LEDC hpoint value(max: 0xfffff)"],["ledc_set_fade","@brief LEDC set gradient Set LEDC gradient, After the function calls the ledc_update_duty function, the function can take effect. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel (0-7), select from ledc_channel_t @param duty Set the start of the gradient duty, the range of duty setting is [0, (2**duty_resolution)] @param fade_direction Set the direction of the gradient @param step_num Set the number of the gradient @param duty_cycle_num Set how many LEDC tick each time the gradient lasts @param duty_scale Set gradient change amplitude"],["ledc_set_fade_step_and_start","@brief A thread-safe API to set and start LEDC fade function. @note  Call ledc_fade_func_install() once before calling this function. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel index (0-7), select from ledc_channel_t @param target_duty Target duty of fading [0, (2**duty_resolution) - 1] @param scale Controls the increase or decrease step scale. @param cycle_num increase or decrease the duty every cycle_num cycles @param fade_mode choose blocking or non-blocking mode @return - ESP_ERR_INVALID_ARG Parameter error - ESP_OK Success - ESP_ERR_INVALID_STATE Fade function not installed. - ESP_FAIL Fade function init error"],["ledc_set_fade_time_and_start","@brief A thread-safe API to set and start LEDC fade function, with a limited time. @note  Call ledc_fade_func_install() once, before calling this function. @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel index (0-7), select from ledc_channel_t @param target_duty Target duty of fading.( 0 - (2 ** duty_resolution - 1))) @param max_fade_time_ms The maximum time of the fading ( ms ). @param fade_mode choose blocking or non-blocking mode @return - ESP_ERR_INVALID_ARG Parameter error - ESP_OK Success - ESP_ERR_INVALID_STATE Fade function not installed. - ESP_FAIL Fade function init error"],["ledc_set_fade_with_step","@brief Set LEDC fade function. @note  Call ledc_fade_func_install() once before calling this function. Call ledc_fade_start() after this to start fading. @note  ledc_set_fade_with_step, ledc_set_fade_with_time and ledc_fade_start are not thread-safe, do not call these functions to control one LEDC channel in different tasks at the same time. A thread-safe version of API is ledc_set_fade_step_and_start @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. , @param channel LEDC channel index (0-7), select from ledc_channel_t @param target_duty Target duty of fading [0, (2**duty_resolution) - 1] @param scale Controls the increase or decrease step scale. @param cycle_num increase or decrease the duty every cycle_num cycles"],["ledc_set_fade_with_time","@brief Set LEDC fade function, with a limited time. @note  Call ledc_fade_func_install() once before calling this function. Call ledc_fade_start() after this to start fading. @note  ledc_set_fade_with_step, ledc_set_fade_with_time and ledc_fade_start are not thread-safe, do not call these functions to control one LEDC channel in different tasks at the same time. A thread-safe version of API is ledc_set_fade_step_and_start @note  If a fade operation is running in progress on that channel, the driver would not allow it to be stopped. Other duty operations will have to wait until the fade operation has finished. @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. , @param channel LEDC channel index (0-7), select from ledc_channel_t @param target_duty Target duty of fading.( 0 - (2 ** duty_resolution - 1))) @param max_fade_time_ms The maximum time of the fading ( ms )."],["ledc_set_freq","@brief LEDC set channel frequency (Hz)"],["ledc_set_pin","@brief Set LEDC output gpio."],["ledc_stop","@brief LEDC stop. Disable LEDC output, and set idle level"],["ledc_timer_config","@brief LEDC timer configuration Configure LEDC timer with the given source timer/frequency(Hz)/duty_resolution"],["ledc_timer_pause","@brief Pause LEDC timer counter"],["ledc_timer_resume","@brief Resume LEDC timer"],["ledc_timer_rst","@brief Reset LEDC timer"],["ledc_timer_set","@brief Configure LEDC settings"],["ledc_update_duty","@brief LEDC update channel parameters @note  Call this function to activate the LEDC updated parameters. After ledc_set_duty, we need to call this function to update the settings. @note  ledc_set_duty, ledc_set_duty_with_hpoint and ledc_update_duty are not thread-safe, do not call these functions to control one LEDC channel in different tasks at the same time. A thread-safe version of API is ledc_set_duty_and_update @param speed_mode Select the LEDC channel group with specified speed mode. Note that not all targets support high speed mode. @param channel LEDC channel (0-7), select from ledc_channel_t"],["linenoise",""],["linenoiseAddCompletion",""],["linenoiseAllowEmpty",""],["linenoiseClearScreen",""],["linenoiseFree",""],["linenoiseHistoryAdd",""],["linenoiseHistoryFree",""],["linenoiseHistoryLoad",""],["linenoiseHistorySave",""],["linenoiseHistorySetMaxLen",""],["linenoiseIsDumbMode",""],["linenoisePrintKeyCodes",""],["linenoiseProbe",""],["linenoiseSetCompletionCallback",""],["linenoiseSetDumbMode",""],["linenoiseSetFreeHintsCallback",""],["linenoiseSetHintsCallback",""],["linenoiseSetMultiLine",""],["link",""],["link_patches","A hack to make sure that the rwlock implementation and the esp32c3 atomics are linked to the final executable Call this function once e.g. in the beginning of your main function"],["linkat",""],["llabs",""],["lldesc_build_chain",""],["lldesc_get_received_len","@brief Get the received length of a linked list, until end of the link or eof."],["lldesc_num2link",""],["lldesc_set_owner",""],["lldesc_setup_link","Generate a linked list pointing to a (huge) buffer in an descriptor array."],["lldiv",""],["localtime",""],["localtime_r",""],["lockf",""],["lrand48",""],["lseek",""],["lutimes",""],["lwip_accept",""],["lwip_bind",""],["lwip_close",""],["lwip_connect",""],["lwip_fcntl",""],["lwip_getpeername",""],["lwip_getsockname",""],["lwip_getsockopt",""],["lwip_htonl",""],["lwip_htons",""],["lwip_if_indextoname",""],["lwip_if_nametoindex",""],["lwip_inet_ntop",""],["lwip_inet_pton",""],["lwip_ioctl",""],["lwip_itoa",""],["lwip_listen",""],["lwip_poll",""],["lwip_read",""],["lwip_readv",""],["lwip_recv",""],["lwip_recvfrom",""],["lwip_recvmsg",""],["lwip_select",""],["lwip_send",""],["lwip_sendmsg",""],["lwip_sendto",""],["lwip_setsockopt",""],["lwip_shutdown",""],["lwip_socket",""],["lwip_socket_thread_cleanup",""],["lwip_socket_thread_init",""],["lwip_stricmp",""],["lwip_strnicmp",""],["lwip_strnstr",""],["lwip_write",""],["lwip_writev",""],["malloc",""],["mbedtls_aes_decrypt","\\brief           Deprecated internal AES block decryption function without return value."],["mbedtls_aes_encrypt","\\brief           Deprecated internal AES block encryption function without return value."],["mbedtls_aes_self_test","\\brief          Checkup routine."],["mbedtls_asn1_find_named_data","\\brief       Find a specific named_data entry in a sequence or list based on the OID."],["mbedtls_asn1_free_named_data","\\brief       Free a mbedtls_asn1_named_data entry"],["mbedtls_asn1_free_named_data_list","\\brief       Free all entries in a mbedtls_asn1_named_data list Head will be set to NULL"],["mbedtls_asn1_get_alg","\\brief       Retrieve an AlgorithmIdentifier ASN.1 sequence. Updates the pointer to immediately behind the full AlgorithmIdentifier."],["mbedtls_asn1_get_alg_null","\\brief       Retrieve an AlgorithmIdentifier ASN.1 sequence with NULL or no params. Updates the pointer to immediately behind the full AlgorithmIdentifier."],["mbedtls_asn1_get_bitstring","\\brief       Retrieve a bitstring ASN.1 tag and its value. Updates the pointer to immediately behind the full tag."],["mbedtls_asn1_get_bitstring_null","\\brief       Retrieve a bitstring ASN.1 tag without unused bits and its value. Updates the pointer to the beginning of the bit/octet string."],["mbedtls_asn1_get_bool","\\brief       Retrieve a boolean ASN.1 tag and its value. Updates the pointer to immediately behind the full tag."],["mbedtls_asn1_get_int","\\brief       Retrieve an integer ASN.1 tag and its value. Updates the pointer to immediately behind the full tag."],["mbedtls_asn1_get_len","\\brief       Get the length of an ASN.1 element. Updates the pointer to immediately behind the length."],["mbedtls_asn1_get_mpi","\\brief       Retrieve a MPI value from an integer ASN.1 tag. Updates the pointer to immediately behind the full tag."],["mbedtls_asn1_get_sequence_of","\\brief       Parses and splits an ASN.1 “SEQUENCE OF ” Updated the pointer to immediately behind the full sequence tag."],["mbedtls_asn1_get_tag","\\brief       Get the tag and length of the tag. Check for the requested tag. Updates the pointer to immediately behind the tag and length."],["mbedtls_calloc",""],["mbedtls_cipher_auth_decrypt","\\brief               The generic autenticated decryption (AEAD) function."],["mbedtls_cipher_auth_encrypt","\\brief               The generic autenticated encryption (AEAD) function."],["mbedtls_cipher_check_tag","\\brief               This function checks the tag for AEAD ciphers. Currently supported with GCM and ChaCha20+Poly1305. This must be called after mbedtls_cipher_finish()."],["mbedtls_cipher_crypt","\\brief               The generic all-in-one encryption/decryption function, for all ciphers except AEAD constructs."],["mbedtls_cipher_finish","\\brief               The generic cipher finalization function. If data still needs to be flushed from an incomplete block, the data contained in it is padded to the size of the last block, and written to the \\p output buffer."],["mbedtls_cipher_free","\\brief               This function frees and clears the cipher-specific context of \\p ctx. Freeing \\p ctx itself remains the responsibility of the caller."],["mbedtls_cipher_info_from_string","\\brief               This function retrieves the cipher-information structure associated with the given cipher name."],["mbedtls_cipher_info_from_type","\\brief               This function retrieves the cipher-information structure associated with the given cipher type."],["mbedtls_cipher_info_from_values","\\brief               This function retrieves the cipher-information structure associated with the given cipher ID, key size and mode."],["mbedtls_cipher_init","\\brief               This function initializes a \\p cipher_context as NONE."],["mbedtls_cipher_list","\\brief This function retrieves the list of ciphers supported by the generic cipher module."],["mbedtls_cipher_reset","\\brief         This function resets the cipher state."],["mbedtls_cipher_set_iv","\\brief           This function sets the initialization vector (IV) or nonce."],["mbedtls_cipher_set_padding_mode","\\brief               This function sets the padding mode, for cipher modes that use padding."],["mbedtls_cipher_setkey","\\brief               This function sets the key to use with the given context."],["mbedtls_cipher_setup","\\brief               This function initializes and fills the cipher-context structure with the appropriate values. It also clears the structure."],["mbedtls_cipher_update","\\brief               The generic cipher update function. It encrypts or decrypts using the given cipher context. Writes as many block-sized blocks of data as possible to output. Any data that cannot be written immediately is either added to the next block, or flushed when mbedtls_cipher_finish() is called. Exception: For MBEDTLS_MODE_ECB, expects a single block in size. For example, 16 Bytes for AES."],["mbedtls_cipher_update_ad","\\brief               This function adds additional data for AEAD ciphers. Currently supported with GCM and ChaCha20+Poly1305. This must be called exactly once, after mbedtls_cipher_reset()."],["mbedtls_cipher_write_tag","\\brief               This function writes a tag for AEAD ciphers. Currently supported with GCM and ChaCha20+Poly1305. This must be called after mbedtls_cipher_finish()."],["mbedtls_ctr_drbg_free","\\brief               This function resets CTR_DRBG context to the state immediately after initial call of mbedtls_ctr_drbg_init()."],["mbedtls_ctr_drbg_init","\\brief               This function initializes the CTR_DRBG context, and prepares it for mbedtls_ctr_drbg_seed() or mbedtls_ctr_drbg_free()."],["mbedtls_ctr_drbg_random","\\param p_rng         The CTR_DRBG context. This must be a pointer to a #mbedtls_ctr_drbg_context structure. \\param output        The buffer to fill. \\param output_len    The length of the buffer in bytes."],["mbedtls_ctr_drbg_random_with_add","\\brief   This function updates a CTR_DRBG instance with additional data and uses it to generate random data."],["mbedtls_ctr_drbg_reseed","\\brief               This function reseeds the CTR_DRBG context, that is extracts data from the entropy source."],["mbedtls_ctr_drbg_seed","\\param ctx           The CTR_DRBG context to seed. It must have been initialized with mbedtls_ctr_drbg_init(). After a successful call to mbedtls_ctr_drbg_seed(), you may not call mbedtls_ctr_drbg_seed() again on the same context unless you call mbedtls_ctr_drbg_free() and mbedtls_ctr_drbg_init() again first. After a failed call to mbedtls_ctr_drbg_seed(), you must call mbedtls_ctr_drbg_free(). \\param f_entropy     The entropy callback, taking as arguments the \\p p_entropy context, the buffer to fill, and the length of the buffer. \\p f_entropy is always called with a buffer size equal to the entropy length. \\param p_entropy     The entropy context to pass to \\p f_entropy. \\param custom        The personalization string. This can be \\c NULL, in which case the personalization string is empty regardless of the value of \\p len. \\param len           The length of the personalization string. This must be at most #MBEDTLS_CTR_DRBG_MAX_SEED_INPUT - #MBEDTLS_CTR_DRBG_ENTROPY_LEN."],["mbedtls_ctr_drbg_seed_entropy_len",""],["mbedtls_ctr_drbg_self_test","\\brief               The CTR_DRBG checkup routine."],["mbedtls_ctr_drbg_set_entropy_len","\\brief               This function sets the amount of entropy grabbed on each seed or reseed."],["mbedtls_ctr_drbg_set_prediction_resistance","\\brief               This function turns prediction resistance on or off. The default value is off."],["mbedtls_ctr_drbg_set_reseed_interval","\\brief               This function sets the reseed interval."],["mbedtls_ctr_drbg_update","\\brief              This function updates the state of the CTR_DRBG context."],["mbedtls_ctr_drbg_update_ret","\\brief              This function updates the state of the CTR_DRBG context."],["mbedtls_ctr_drbg_update_seed_file","\\brief               This function reads and updates a seed file. The seed is added to this instance."],["mbedtls_ctr_drbg_write_seed_file","\\brief               This function writes a seed file."],["mbedtls_dhm_calc_secret","\\brief          This function derives and exports the shared secret \\c (G^Y)^X mod \\c P."],["mbedtls_dhm_free","\\brief          This function frees and clears the components of a DHM context."],["mbedtls_dhm_init","\\brief          This function initializes the DHM context."],["mbedtls_dhm_make_params","\\brief          This function generates a DHM key pair and exports its public part together with the DHM parameters in the format used in a TLS ServerKeyExchange handshake message."],["mbedtls_dhm_make_public","\\brief          This function creates a DHM key pair and exports the raw public key in big-endian format."],["mbedtls_dhm_parse_dhm","\\ingroup x509_module */ \\brief             This function parses DHM parameters in PEM or DER format."],["mbedtls_dhm_parse_dhmfile","\\ingroup x509_module */ \\brief          This function loads and parses DHM parameters from a file."],["mbedtls_dhm_read_params","\\brief          This function parses the DHM parameters in a TLS ServerKeyExchange handshake message (DHM modulus, generator, and public key)."],["mbedtls_dhm_read_public","\\brief          This function imports the raw public value of the peer."],["mbedtls_dhm_self_test","\\brief          The DMH checkup routine."],["mbedtls_dhm_set_group","\\brief          This function sets the prime modulus and generator."],["mbedtls_ecdh_calc_secret","\\brief           This function derives and exports the shared secret."],["mbedtls_ecdh_compute_shared","\\brief           This function computes the shared secret."],["mbedtls_ecdh_free","\\brief           This function frees a context."],["mbedtls_ecdh_gen_public","\\brief           This function generates an ECDH keypair on an elliptic curve."],["mbedtls_ecdh_get_params","\\brief           This function sets up an ECDH context from an EC key."],["mbedtls_ecdh_init","\\brief           This function initializes an ECDH context."],["mbedtls_ecdh_make_params","\\brief           This function generates an EC key pair and exports its in the format used in a TLS ServerKeyExchange handshake message."],["mbedtls_ecdh_make_public","\\brief           This function generates a public key and exports it as a TLS ClientKeyExchange payload."],["mbedtls_ecdh_read_params","\\brief           This function parses the ECDHE parameters in a TLS ServerKeyExchange handshake message."],["mbedtls_ecdh_read_public","\\brief       This function parses and processes the ECDHE payload of a TLS ClientKeyExchange message."],["mbedtls_ecdh_setup","\\brief           This function sets up the ECDH context with the information given."],["mbedtls_ecdsa_free","\\brief           This function frees an ECDSA context."],["mbedtls_ecdsa_from_keypair","\\brief           This function sets up an ECDSA context from an EC key pair."],["mbedtls_ecdsa_genkey","\\brief          This function generates an ECDSA keypair on the given curve."],["mbedtls_ecdsa_init","\\brief           This function initializes an ECDSA context."],["mbedtls_ecdsa_read_signature","\\brief           This function reads and verifies an ECDSA signature."],["mbedtls_ecdsa_read_signature_restartable","\\brief           This function reads and verifies an ECDSA signature, in a restartable way."],["mbedtls_ecdsa_sign","\\brief           This function computes the ECDSA signature of a previously-hashed message."],["mbedtls_ecdsa_sign_det","\\brief           This function computes the ECDSA signature of a previously-hashed message, deterministic version."],["mbedtls_ecdsa_sign_det_ext","\\brief           This function computes the ECDSA signature of a previously-hashed message, deterministic version."],["mbedtls_ecdsa_verify","\\brief           This function verifies the ECDSA signature of a previously-hashed message."],["mbedtls_ecdsa_write_signature","\\brief           This function computes the ECDSA signature and writes it to a buffer, serialized as defined in RFC-4492: Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)."],["mbedtls_ecdsa_write_signature_det","\\brief           This function computes an ECDSA signature and writes it to a buffer, serialized as defined in RFC-4492: Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS)."],["mbedtls_ecdsa_write_signature_restartable","\\brief           This function computes the ECDSA signature and writes it to a buffer, in a restartable way."],["mbedtls_ecp_check_privkey","\\brief           This function checks that an \\p mbedtls_mpi is a valid private key for this curve."],["mbedtls_ecp_check_pub_priv","\\brief           This function checks that the keypair objects \\p pub and \\p prv have the same group and the same public point, and that the private key in \\p prv is consistent with the public key."],["mbedtls_ecp_check_pubkey","\\brief           This function checks that a point is a valid public key on this curve."],["mbedtls_ecp_copy","\\brief           This function copies the contents of point \\p Q into point \\p P."],["mbedtls_ecp_curve_info_from_grp_id","\\brief           This function retrieves curve information from an internal group identifier."],["mbedtls_ecp_curve_info_from_name","\\brief           This function retrieves curve information from a human-readable name."],["mbedtls_ecp_curve_info_from_tls_id","\\brief           This function retrieves curve information from a TLS NamedCurve value."],["mbedtls_ecp_curve_list","\\brief           This function retrieves the information defined in mbedtls_ecp_curve_info() for all supported curves in order of preference."],["mbedtls_ecp_gen_key","\\brief           This function generates an ECP key."],["mbedtls_ecp_gen_keypair","\\brief           This function generates an ECP keypair."],["mbedtls_ecp_gen_keypair_base","\\brief           This function generates a keypair with a configurable base point."],["mbedtls_ecp_gen_privkey","\\brief           This function generates a private key."],["mbedtls_ecp_group_copy","\\brief           This function copies the contents of group \\p src into group \\p dst."],["mbedtls_ecp_group_free","\\brief           This function frees the components of an ECP group."],["mbedtls_ecp_group_init","\\brief           This function initializes an ECP group context without loading any domain parameters."],["mbedtls_ecp_group_load","\\brief           This function sets up an ECP group context from a standardized set of domain parameters."],["mbedtls_ecp_grp_id_list","\\brief           This function retrieves the list of internal group identifiers of all supported curves in the order of preference."],["mbedtls_ecp_is_zero","\\brief           This function checks if a point is the point at infinity."],["mbedtls_ecp_keypair_free","\\brief           This function frees the components of a key pair."],["mbedtls_ecp_keypair_init","\\brief           This function initializes a key pair as an invalid one."],["mbedtls_ecp_mul","\\brief           This function performs a scalar multiplication of a point by an integer: \\p R = \\p m * \\p P."],["mbedtls_ecp_mul_restartable","\\brief           This function performs multiplication of a point by an integer: \\p R = \\p m * \\p P in a restartable way."],["mbedtls_ecp_muladd","\\brief           This function performs multiplication and addition of two points by integers: \\p R = \\p m * \\p P + \\p n * \\p Q"],["mbedtls_ecp_muladd_restartable","\\brief           This function performs multiplication and addition of two points by integers: \\p R = \\p m * \\p P + \\p n * \\p Q in a restartable way."],["mbedtls_ecp_point_cmp","\\brief           This function compares two points."],["mbedtls_ecp_point_free","\\brief           This function frees the components of a point."],["mbedtls_ecp_point_init","\\brief           This function initializes a point as zero."],["mbedtls_ecp_point_read_binary","\\brief           This function imports a point from unsigned binary data."],["mbedtls_ecp_point_read_string","\\brief           This function imports a non-zero point from two ASCII strings."],["mbedtls_ecp_point_write_binary","\\brief           This function exports a point into unsigned binary data."],["mbedtls_ecp_self_test","\\brief          The ECP checkup routine."],["mbedtls_ecp_set_zero","\\brief           This function sets a point to the point at infinity."],["mbedtls_ecp_tls_read_group","\\brief           This function sets up an ECP group context from a TLS ECParameters record as defined in RFC 4492, Section 5.4."],["mbedtls_ecp_tls_read_group_id","\\brief           This function extracts an elliptic curve group ID from a TLS ECParameters record as defined in RFC 4492, Section 5.4."],["mbedtls_ecp_tls_read_point","\\brief           This function imports a point from a TLS ECPoint record."],["mbedtls_ecp_tls_write_group","\\brief           This function exports an elliptic curve as a TLS ECParameters record as defined in RFC 4492, Section 5.4."],["mbedtls_ecp_tls_write_point","\\brief           This function exports a point as a TLS ECPoint record defined in RFC 4492, Section 5.4."],["mbedtls_entropy_add_source","\\brief           Adds an entropy source to poll (Thread-safe if MBEDTLS_THREADING_C is enabled)"],["mbedtls_entropy_free","\\brief           Free the data in the context"],["mbedtls_entropy_func","\\brief           Retrieve entropy from the accumulator (Maximum length: MBEDTLS_ENTROPY_BLOCK_SIZE) (Thread-safe if MBEDTLS_THREADING_C is enabled)"],["mbedtls_entropy_gather","\\brief           Trigger an extra gather poll for the accumulator (Thread-safe if MBEDTLS_THREADING_C is enabled)"],["mbedtls_entropy_init","\\brief           Initialize the context"],["mbedtls_entropy_self_test","\\brief          Checkup routine"],["mbedtls_entropy_source_self_test","\\brief          Checkup routine"],["mbedtls_entropy_update_manual","\\brief           Add data to the accumulator manually (Thread-safe if MBEDTLS_THREADING_C is enabled)"],["mbedtls_entropy_update_seed_file","\\brief               Read and update a seed file. Seed is added to this instance. No more than MBEDTLS_ENTROPY_MAX_SEED_SIZE bytes are read from the seed file. The rest is ignored."],["mbedtls_entropy_write_seed_file","\\brief               Write a seed file"],["mbedtls_free",""],["mbedtls_internal_sha512_process","\\brief          This function processes a single data block within the ongoing SHA-512 computation. This function is for internal use only."],["mbedtls_md","\\brief          This function calculates the message-digest of a buffer, with respect to a configurable message-digest algorithm in a single call."],["mbedtls_md_clone","\\brief           This function clones the state of an message-digest context."],["mbedtls_md_file","\\brief          This function calculates the message-digest checksum result of the contents of the provided file."],["mbedtls_md_finish","\\brief           This function finishes the digest operation, and writes the result to the output buffer."],["mbedtls_md_free","\\brief           This function clears the internal structure of \\p ctx and frees any embedded internal structure, but does not free \\p ctx itself."],["mbedtls_md_get_name","\\brief           This function extracts the message-digest name from the message-digest information structure."],["mbedtls_md_get_size","\\brief           This function extracts the message-digest size from the message-digest information structure."],["mbedtls_md_get_type","\\brief           This function extracts the message-digest type from the message-digest information structure."],["mbedtls_md_hmac","\\brief          This function calculates the full generic HMAC on the input buffer with the provided key."],["mbedtls_md_hmac_finish","\\brief           This function finishes the HMAC operation, and writes the result to the output buffer."],["mbedtls_md_hmac_reset","\\brief           This function prepares to authenticate a new message with the same key as the previous HMAC operation."],["mbedtls_md_hmac_starts","\\brief           This function sets the HMAC key and prepares to authenticate a new message."],["mbedtls_md_hmac_update","\\brief           This function feeds an input buffer into an ongoing HMAC computation."],["mbedtls_md_info_from_string","\\brief           This function returns the message-digest information associated with the given digest name."],["mbedtls_md_info_from_type","\\brief           This function returns the message-digest information associated with the given digest type."],["mbedtls_md_init","\\brief           This function initializes a message-digest context without binding it to a particular message-digest algorithm."],["mbedtls_md_init_ctx","\\brief           This function selects the message digest algorithm to use, and allocates internal structures."],["mbedtls_md_list","\\brief           This function returns the list of digests supported by the generic digest module."],["mbedtls_md_process",""],["mbedtls_md_setup","\\brief           This function selects the message digest algorithm to use, and allocates internal structures."],["mbedtls_md_starts","\\brief           This function starts a message-digest computation."],["mbedtls_md_update","\\brief           This function feeds an input buffer into an ongoing message-digest computation."],["mbedtls_mpi_add_abs","\\brief          Perform an unsigned addition of MPIs: X = |A| + |B|"],["mbedtls_mpi_add_int","\\brief          Perform a signed addition of an MPI and an integer: X = A + b"],["mbedtls_mpi_add_mpi","\\brief          Perform a signed addition of MPIs: X = A + B"],["mbedtls_mpi_bitlen","\\brief          Return the number of bits up to and including the most significant bit of value \\c 1."],["mbedtls_mpi_cmp_abs","\\brief          Compare the absolute values of two MPIs."],["mbedtls_mpi_cmp_int","\\brief          Compare an MPI with an integer."],["mbedtls_mpi_cmp_mpi","\\brief          Compare two MPIs."],["mbedtls_mpi_copy","\\brief          Make a copy of an MPI."],["mbedtls_mpi_div_int","\\brief          Perform a division with remainder of an MPI by an integer: A = Q * b + R"],["mbedtls_mpi_div_mpi","\\brief          Perform a division with remainder of two MPIs: A = Q * B + R"],["mbedtls_mpi_exp_mod","\\brief          Perform a sliding-window exponentiation: X = A^E mod N"],["mbedtls_mpi_fill_random","\\brief          Fill an MPI with a number of random bytes."],["mbedtls_mpi_free","\\brief          This function frees the components of an MPI context."],["mbedtls_mpi_gcd","\\brief          Compute the greatest common divisor: G = gcd(A, B)"],["mbedtls_mpi_gen_prime","\\brief          Generate a prime number."],["mbedtls_mpi_get_bit","\\brief          Get a specific bit from an MPI."],["mbedtls_mpi_grow","\\brief          Enlarge an MPI to the specified number of limbs."],["mbedtls_mpi_init","\\brief           Initialize an MPI context."],["mbedtls_mpi_inv_mod","\\brief          Compute the modular inverse: X = A^-1 mod N"],["mbedtls_mpi_is_prime","\\brief          Perform a Miller-Rabin primality test with error probability of 2-80."],["mbedtls_mpi_is_prime_ext","\\brief          Miller-Rabin primality test."],["mbedtls_mpi_lsb","\\brief          Return the number of bits of value \\c 0 before the least significant bit of value \\c 1."],["mbedtls_mpi_lset","\\brief          Store integer value in MPI."],["mbedtls_mpi_lt_mpi_ct","\\brief          Check if an MPI is less than the other in constant time."],["mbedtls_mpi_mod_int","\\brief          Perform a modular reduction with respect to an integer. r = A mod b"],["mbedtls_mpi_mod_mpi","\\brief          Perform a modular reduction. R = A mod B"],["mbedtls_mpi_mul_int","\\brief          Perform a multiplication of an MPI with an unsigned integer: X = A * b"],["mbedtls_mpi_mul_mpi","\\brief          Perform a multiplication of two MPIs: X = A * B"],["mbedtls_mpi_read_binary","\\brief          Import an MPI from unsigned big endian binary data."],["mbedtls_mpi_read_file","\\brief          Read an MPI from a line in an opened file."],["mbedtls_mpi_read_string","\\brief          Import an MPI from an ASCII string."],["mbedtls_mpi_safe_cond_assign","\\brief          Perform a safe conditional copy of MPI which doesn’t reveal whether the condition was true or not."],["mbedtls_mpi_safe_cond_swap","\\brief          Perform a safe conditional swap which doesn’t reveal whether the condition was true or not."],["mbedtls_mpi_self_test","\\brief          Checkup routine"],["mbedtls_mpi_set_bit","\\brief          Modify a specific bit in an MPI."],["mbedtls_mpi_shift_l","\\brief          Perform a left-shift on an MPI: X <<= count"],["mbedtls_mpi_shift_r","\\brief          Perform a right-shift on an MPI: X >>= count"],["mbedtls_mpi_shrink","\\brief          This function resizes an MPI downwards, keeping at least the specified number of limbs."],["mbedtls_mpi_size","\\brief          Return the total size of an MPI value in bytes."],["mbedtls_mpi_sub_abs","\\brief          Perform an unsigned subtraction of MPIs: X = |A| - |B|"],["mbedtls_mpi_sub_int","\\brief          Perform a signed subtraction of an MPI and an integer: X = A - b"],["mbedtls_mpi_sub_mpi","\\brief          Perform a signed subtraction of MPIs: X = A - B"],["mbedtls_mpi_swap","\\brief          Swap the contents of two MPIs."],["mbedtls_mpi_write_binary","\\brief          Export an MPI into unsigned big endian binary data of fixed size."],["mbedtls_mpi_write_file","\\brief          Export an MPI into an opened file."],["mbedtls_mpi_write_string","\\brief          Export an MPI to an ASCII string."],["mbedtls_net_accept","\\brief           Accept a connection from a remote client"],["mbedtls_net_bind","\\brief          Create a receiving socket on bind_ip:port in the chosen protocol. If bind_ip == NULL, all interfaces are bound."],["mbedtls_net_connect","\\brief          Initiate a connection with host:port in the given protocol"],["mbedtls_net_free","\\brief          Gracefully shutdown the connection and free associated data"],["mbedtls_net_init","\\brief          Initialize a context Just makes the context ready to be used or freed safely."],["mbedtls_net_poll","\\brief          Check and wait for the context to be ready for read/write"],["mbedtls_net_recv","\\brief          Read at most ‘len’ characters. If no error occurs, the actual amount read is returned."],["mbedtls_net_recv_timeout","\\brief          Read at most ‘len’ characters, blocking for at most ‘timeout’ seconds. If no error occurs, the actual amount read is returned."],["mbedtls_net_send","\\brief          Write at most ‘len’ characters. If no error occurs, the actual amount read is returned."],["mbedtls_net_set_block","\\brief          Set the socket blocking"],["mbedtls_net_set_nonblock","\\brief          Set the socket non-blocking"],["mbedtls_net_usleep","\\brief          Portable usleep helper"],["mbedtls_pk_can_do","\\brief           Tell if a context can do the operation given by type"],["mbedtls_pk_check_pair","\\brief           Check if a public-private pair of keys matches."],["mbedtls_pk_debug","\\brief           Export debug information"],["mbedtls_pk_decrypt","\\brief           Decrypt message (including padding if relevant)."],["mbedtls_pk_encrypt","\\brief           Encrypt message (including padding if relevant)."],["mbedtls_pk_free","\\brief           Free the components of a #mbedtls_pk_context."],["mbedtls_pk_get_bitlen","\\brief           Get the size in bits of the underlying key"],["mbedtls_pk_get_name","\\brief           Access the type name"],["mbedtls_pk_get_type","\\brief           Get the key type"],["mbedtls_pk_info_from_type","\\brief           Return information associated with the given PK type"],["mbedtls_pk_init","\\brief           Initialize a #mbedtls_pk_context (as NONE)."],["mbedtls_pk_load_file",""],["mbedtls_pk_parse_key","\\ingroup pk_module */ \\brief           Parse a private key in PEM or DER format"],["mbedtls_pk_parse_keyfile","\\ingroup pk_module */ \\brief           Load and parse a private key"],["mbedtls_pk_parse_public_key","\\ingroup pk_module */ \\brief           Parse a public key in PEM or DER format"],["mbedtls_pk_parse_public_keyfile","\\ingroup pk_module */ \\brief           Load and parse a public key"],["mbedtls_pk_parse_subpubkey","\\brief           Parse a SubjectPublicKeyInfo DER structure"],["mbedtls_pk_setup","\\brief           Initialize a PK context with the information given and allocates the type-specific PK subcontext."],["mbedtls_pk_setup_rsa_alt","\\brief           Initialize an RSA-alt context"],["mbedtls_pk_sign","\\brief           Make signature, including padding if relevant."],["mbedtls_pk_sign_restartable","\\brief           Restartable version of \\c mbedtls_pk_sign()"],["mbedtls_pk_verify","\\brief           Verify signature (including padding if relevant)."],["mbedtls_pk_verify_ext","\\brief           Verify signature, with options. (Includes verification of the padding depending on type.)"],["mbedtls_pk_verify_restartable","\\brief           Restartable version of \\c mbedtls_pk_verify()"],["mbedtls_pk_write_key_der","\\brief           Write a private key to a PKCS#1 or SEC1 DER structure Note: data is written at the end of the buffer! Use the return value to determine where you should start using the buffer"],["mbedtls_pk_write_key_pem","\\brief           Write a private key to a PKCS#1 or SEC1 PEM string"],["mbedtls_pk_write_pubkey","\\brief           Write a subjectPublicKey to ASN.1 data Note: function works backwards in data buffer"],["mbedtls_pk_write_pubkey_der","\\brief           Write a public key to a SubjectPublicKeyInfo DER structure Note: data is written at the end of the buffer! Use the return value to determine where you should start using the buffer"],["mbedtls_pk_write_pubkey_pem","\\brief           Write a public key to a PEM string"],["mbedtls_platform_set_calloc_free","\\brief               This function dynamically sets the memory-management functions used by the library, during runtime."],["mbedtls_platform_setup","\\brief   This function performs any platform-specific initialization operations."],["mbedtls_platform_teardown","\\brief   This function performs any platform teardown operations."],["mbedtls_platform_zeroize","\\brief       Securely zeroize a buffer"],["mbedtls_rsa_check_privkey","\\brief      This function checks if a context contains an RSA private key and perform basic consistency checks."],["mbedtls_rsa_check_pub_priv","\\brief          This function checks a public-private RSA key pair."],["mbedtls_rsa_check_pubkey","\\brief          This function checks if a context contains at least an RSA public key."],["mbedtls_rsa_complete","\\brief          This function completes an RSA context from a set of imported core parameters."],["mbedtls_rsa_copy","\\brief          This function copies the components of an RSA context."],["mbedtls_rsa_export","\\brief          This function exports the core parameters of an RSA key."],["mbedtls_rsa_export_crt","\\brief          This function exports CRT parameters of a private RSA key."],["mbedtls_rsa_export_raw","\\brief          This function exports core parameters of an RSA key in raw big-endian binary format."],["mbedtls_rsa_free","\\brief          This function frees the components of an RSA key."],["mbedtls_rsa_gen_key","\\brief          This function generates an RSA keypair."],["mbedtls_rsa_get_len","\\brief          This function retrieves the length of RSA modulus in Bytes."],["mbedtls_rsa_import","\\brief          This function imports a set of core parameters into an RSA context."],["mbedtls_rsa_import_raw","\\brief          This function imports core RSA parameters, in raw big-endian binary format, into an RSA context."],["mbedtls_rsa_init","\\brief          This function initializes an RSA context."],["mbedtls_rsa_pkcs1_decrypt","\\brief          This function performs an RSA operation, then removes the message padding."],["mbedtls_rsa_pkcs1_encrypt","\\brief          This function adds the message padding, then performs an RSA operation."],["mbedtls_rsa_pkcs1_sign","\\brief          This function performs a private RSA operation to sign a message digest using PKCS#1."],["mbedtls_rsa_pkcs1_verify","\\brief          This function performs a public RSA operation and checks the message digest."],["mbedtls_rsa_private","\\brief          This function performs an RSA private key operation."],["mbedtls_rsa_public","\\brief          This function performs an RSA public key operation."],["mbedtls_rsa_rsaes_oaep_decrypt","\\brief            This function performs a PKCS#1 v2.1 OAEP decryption operation (RSAES-OAEP-DECRYPT)."],["mbedtls_rsa_rsaes_oaep_encrypt","\\brief            This function performs a PKCS#1 v2.1 OAEP encryption operation (RSAES-OAEP-ENCRYPT)."],["mbedtls_rsa_rsaes_pkcs1_v15_decrypt","\\brief          This function performs a PKCS#1 v1.5 decryption operation (RSAES-PKCS1-v1_5-DECRYPT)."],["mbedtls_rsa_rsaes_pkcs1_v15_encrypt","\\brief          This function performs a PKCS#1 v1.5 encryption operation (RSAES-PKCS1-v1_5-ENCRYPT)."],["mbedtls_rsa_rsassa_pkcs1_v15_sign","\\brief          This function performs a PKCS#1 v1.5 signature operation (RSASSA-PKCS1-v1_5-SIGN)."],["mbedtls_rsa_rsassa_pkcs1_v15_verify","\\brief          This function performs a PKCS#1 v1.5 verification operation (RSASSA-PKCS1-v1_5-VERIFY)."],["mbedtls_rsa_rsassa_pss_sign","\\brief          This function performs a PKCS#1 v2.1 PSS signature operation (RSASSA-PSS-SIGN)."],["mbedtls_rsa_rsassa_pss_verify","\\brief          This function performs a PKCS#1 v2.1 PSS verification operation (RSASSA-PSS-VERIFY)."],["mbedtls_rsa_rsassa_pss_verify_ext","\\brief          This function performs a PKCS#1 v2.1 PSS verification operation (RSASSA-PSS-VERIFY)."],["mbedtls_rsa_self_test","\\brief          The RSA checkup routine."],["mbedtls_rsa_set_padding","\\brief          This function sets padding for an already initialized RSA context. See mbedtls_rsa_init() for details."],["mbedtls_sha512","\\brief          This function calculates the SHA-512 or SHA-384 checksum of a buffer."],["mbedtls_sha512_clone","\\brief          This function clones the state of a SHA-512 context."],["mbedtls_sha512_finish","\\brief          This function finishes the SHA-512 operation, and writes the result to the output buffer."],["mbedtls_sha512_finish_ret","\\brief          This function finishes the SHA-512 operation, and writes the result to the output buffer."],["mbedtls_sha512_free","\\brief          This function clears a SHA-512 context."],["mbedtls_sha512_init","\\brief          This function initializes a SHA-512 context."],["mbedtls_sha512_process","\\brief          This function processes a single data block within the ongoing SHA-512 computation. This function is for internal use only."],["mbedtls_sha512_ret","\\brief          This function calculates the SHA-512 or SHA-384 checksum of a buffer."],["mbedtls_sha512_self_test","\\brief          The SHA-384 or SHA-512 checkup routine."],["mbedtls_sha512_starts","\\brief          This function starts a SHA-384 or SHA-512 checksum calculation."],["mbedtls_sha512_starts_ret","\\brief          This function starts a SHA-384 or SHA-512 checksum calculation."],["mbedtls_sha512_update","\\brief          This function feeds an input buffer into an ongoing SHA-512 checksum calculation."],["mbedtls_sha512_update_ret","\\brief          This function feeds an input buffer into an ongoing SHA-512 checksum calculation."],["mbedtls_ssl_check_pending","\\brief          Check if there is data already read from the underlying transport but not yet processed."],["mbedtls_ssl_ciphersuite_from_id",""],["mbedtls_ssl_ciphersuite_from_string",""],["mbedtls_ssl_ciphersuite_uses_ec",""],["mbedtls_ssl_ciphersuite_uses_psk",""],["mbedtls_ssl_close_notify","\\brief          Notify the peer that the connection is being closed"],["mbedtls_ssl_conf_alpn_protocols","\\brief          Set the supported Application Layer Protocols."],["mbedtls_ssl_conf_authmode","\\brief          Set the certificate verification mode Default: NONE on server, REQUIRED on client"],["mbedtls_ssl_conf_ca_chain","\\brief          Set the data required to verify peer certificate"],["mbedtls_ssl_conf_cbc_record_splitting","\\brief          Enable / Disable 1/n-1 record splitting (Default: MBEDTLS_SSL_CBC_RECORD_SPLITTING_ENABLED)"],["mbedtls_ssl_conf_cert_profile","\\brief          Set the X.509 security profile used for verification"],["mbedtls_ssl_conf_cert_req_ca_list","\\brief          Whether to send a list of acceptable CAs in CertificateRequest messages. (Default: do send)"],["mbedtls_ssl_conf_ciphersuites","\\brief               Set the list of allowed ciphersuites and the preference order. First in the list has the highest preference. (Overrides all version-specific lists)"],["mbedtls_ssl_conf_ciphersuites_for_version","\\brief               Set the list of allowed ciphersuites and the preference order for a specific version of the protocol. (Only useful on the server side)"],["mbedtls_ssl_conf_curves","\\brief          Set the allowed curves in order of preference. (Default: all defined curves in order of decreasing size.)"],["mbedtls_ssl_conf_dbg","\\brief          Set the debug callback"],["mbedtls_ssl_conf_dh_param","\\brief          Set the Diffie-Hellman public P and G values, read as hexadecimal strings (server-side only) (Default values: MBEDTLS_DHM_RFC3526_MODP_2048_[PG])"],["mbedtls_ssl_conf_dh_param_bin","\\brief          Set the Diffie-Hellman public P and G values from big-endian binary presentations. (Default values: MBEDTLS_DHM_RFC3526_MODP_2048_[PG]_BIN)"],["mbedtls_ssl_conf_dh_param_ctx","\\brief          Set the Diffie-Hellman public P and G values, read from existing context (server-side only)"],["mbedtls_ssl_conf_dhm_min_bitlen","\\brief          Set the minimum length for Diffie-Hellman parameters. (Client-side only.) (Default: 1024 bits.)"],["mbedtls_ssl_conf_encrypt_then_mac","\\brief           Enable or disable Encrypt-then-MAC (Default: MBEDTLS_SSL_ETM_ENABLED)"],["mbedtls_ssl_conf_endpoint","\\brief          Set the current endpoint type"],["mbedtls_ssl_conf_export_keys_cb","\\brief           Configure key export callback. (Default: none.)"],["mbedtls_ssl_conf_extended_master_secret","\\brief           Enable or disable Extended Master Secret negotiation. (Default: MBEDTLS_SSL_EXTENDED_MS_ENABLED)"],["mbedtls_ssl_conf_fallback","\\brief          Set the fallback flag (client-side only). (Default: MBEDTLS_SSL_IS_NOT_FALLBACK)."],["mbedtls_ssl_conf_legacy_renegotiation","\\brief          Prevent or allow legacy renegotiation. (Default: MBEDTLS_SSL_LEGACY_NO_RENEGOTIATION)"],["mbedtls_ssl_conf_max_frag_len","\\brief          Set the maximum fragment length to emit and/or negotiate. (Typical: the smaller of #MBEDTLS_SSL_IN_CONTENT_LEN and #MBEDTLS_SSL_OUT_CONTENT_LEN, usually `2^14` bytes) (Server: set maximum fragment length to emit, usually negotiated by the client during handshake) (Client: set maximum fragment length to emit and negotiate with the server during handshake) (Default: #MBEDTLS_SSL_MAX_FRAG_LEN_NONE)"],["mbedtls_ssl_conf_max_version","\\brief          Set the maximum supported version sent from the client side and/or accepted at the server side (Default: MBEDTLS_SSL_MAX_MAJOR_VERSION, MBEDTLS_SSL_MAX_MINOR_VERSION)"],["mbedtls_ssl_conf_min_version","\\brief          Set the minimum accepted SSL/TLS protocol version (Default: TLS 1.0)"],["mbedtls_ssl_conf_own_cert","\\brief          Set own certificate chain and private key"],["mbedtls_ssl_conf_read_timeout","\\brief          Set the timeout period for mbedtls_ssl_read() (Default: no timeout.)"],["mbedtls_ssl_conf_renegotiation","\\brief          Enable / Disable renegotiation support for connection when initiated by peer (Default: MBEDTLS_SSL_RENEGOTIATION_DISABLED)"],["mbedtls_ssl_conf_renegotiation_enforced","\\brief          Enforce renegotiation requests. (Default: enforced, max_records = 16)"],["mbedtls_ssl_conf_renegotiation_period","\\brief          Set record counter threshold for periodic renegotiation. (Default: 2^48 - 1)"],["mbedtls_ssl_conf_rng","\\brief          Set the random number generator callback"],["mbedtls_ssl_conf_session_cache","\\brief          Set the session cache callbacks (server-side only) If not set, no session resuming is done (except if session tickets are enabled too)."],["mbedtls_ssl_conf_session_tickets","\\brief          Enable / Disable session tickets (client only). (Default: MBEDTLS_SSL_SESSION_TICKETS_ENABLED.)"],["mbedtls_ssl_conf_session_tickets_cb","\\brief           Configure SSL session ticket callbacks (server only). (Default: none.)"],["mbedtls_ssl_conf_sig_hashes","\\brief          Set the allowed hashes for signatures during the handshake. (Default: all SHA-2 hashes, largest first. Also SHA-1 if the compile-time option `MBEDTLS_TLS_DEFAULT_ALLOW_SHA1_IN_KEY_EXCHANGE` is enabled.)"],["mbedtls_ssl_conf_sni","\\brief          Set server side ServerName TLS extension callback (optional, server-side only)."],["mbedtls_ssl_conf_transport","\\brief           Set the transport type (TLS or DTLS). Default: TLS"],["mbedtls_ssl_conf_truncated_hmac","\\brief          Activate negotiation of truncated HMAC (Default: MBEDTLS_SSL_TRUNC_HMAC_DISABLED)"],["mbedtls_ssl_conf_verify","\\brief          Set the verification callback (Optional)."],["mbedtls_ssl_config_defaults","\\brief          Load reasonnable default SSL configuration values. (You need to call mbedtls_ssl_config_init() first.)"],["mbedtls_ssl_config_free","\\brief          Free an SSL configuration context"],["mbedtls_ssl_config_init","\\brief          Initialize an SSL configuration context Just makes the context ready for mbedtls_ssl_config_defaults() or mbedtls_ssl_config_free()."],["mbedtls_ssl_free","\\brief          Free referenced items in an SSL context and clear memory"],["mbedtls_ssl_get_alpn_protocol","\\brief          Get the name of the negotiated Application Layer Protocol. This function should be called after the handshake is completed."],["mbedtls_ssl_get_bytes_avail","\\brief          Return the number of application data bytes remaining to be read from the current record."],["mbedtls_ssl_get_ciphersuite","\\brief          Return the name of the current ciphersuite"],["mbedtls_ssl_get_ciphersuite_id","\\brief               Return the ID of the ciphersuite associated with the given name"],["mbedtls_ssl_get_ciphersuite_name","\\brief               Return the name of the ciphersuite associated with the given ID"],["mbedtls_ssl_get_ciphersuite_sig_alg",""],["mbedtls_ssl_get_ciphersuite_sig_pk_alg",""],["mbedtls_ssl_get_max_frag_len","\\brief          Return the maximum fragment length (payload, in bytes). This is the value negotiated with peer if any, or the locally configured value."],["mbedtls_ssl_get_max_out_record_payload","\\brief          Return the current maximum outgoing record payload in bytes. This takes into account the config.h setting \\c MBEDTLS_SSL_OUT_CONTENT_LEN, the configured and negotiated max fragment length extension if used, and for DTLS the path MTU as configured and current record expansion."],["mbedtls_ssl_get_peer_cert","\\brief          Return the peer certificate from the current connection"],["mbedtls_ssl_get_record_expansion","\\brief          Return the (maximum) number of bytes added by the record layer: header + encryption/MAC overhead (inc. padding)"],["mbedtls_ssl_get_session","\\brief          Save session in order to resume it later (client-side only) Session data is copied to presented session structure."],["mbedtls_ssl_get_verify_result","\\brief          Return the result of the certificate verification"],["mbedtls_ssl_get_version","\\brief          Return the current SSL version (SSLv3/TLSv1/etc)"],["mbedtls_ssl_handshake","\\brief          Perform the SSL handshake"],["mbedtls_ssl_handshake_step","\\brief          Perform a single step of the SSL handshake"],["mbedtls_ssl_init","\\brief          Initialize an SSL context Just makes the context ready for mbedtls_ssl_setup() or mbedtls_ssl_free()"],["mbedtls_ssl_list_ciphersuites",""],["mbedtls_ssl_read","\\brief          Read at most ‘len’ application data bytes"],["mbedtls_ssl_renegotiate","\\brief          Initiate an SSL renegotiation on the running connection. Client: perform the renegotiation right now. Server: request renegotiation, which will be performed during the next call to mbedtls_ssl_read() if honored by client."],["mbedtls_ssl_send_alert_message","\\brief           Send an alert message"],["mbedtls_ssl_session_free","\\brief          Free referenced items in an SSL session including the peer certificate and clear memory"],["mbedtls_ssl_session_init","\\brief          Initialize SSL session structure"],["mbedtls_ssl_session_reset","\\brief          Reset an already initialized SSL context for re-use while retaining application-set variables, function pointers and data."],["mbedtls_ssl_set_bio","\\brief          Set the underlying BIO callbacks for write, read and read-with-timeout."],["mbedtls_ssl_set_hostname","\\brief          Set or reset the hostname to check against the received server certificate. It sets the ServerName TLS extension, too, if that extension is enabled. (client-side only)"],["mbedtls_ssl_set_hs_authmode","\\brief          Set authmode for the current handshake."],["mbedtls_ssl_set_hs_ca_chain","\\brief          Set the data required to verify peer certificate for the current handshake"],["mbedtls_ssl_set_hs_own_cert","\\brief          Set own certificate and key for the current handshake"],["mbedtls_ssl_set_session","\\brief          Request resumption of session (client-side only) Session data is copied from presented session structure."],["mbedtls_ssl_set_timer_cb","\\brief          Set the timer callbacks (Mandatory for DTLS.)"],["mbedtls_ssl_setup","\\brief          Set up an SSL context for use"],["mbedtls_ssl_write","\\brief          Try to write exactly ‘len’ application data bytes"],["mbedtls_strerror","\\brief Translate a mbed TLS error code into a string representation, Result is truncated if necessary and always includes a terminating null byte."],["mbedtls_x509_crl_free","\\brief          Unallocate all CRL data"],["mbedtls_x509_crl_info","\\brief          Returns an informational string about the CRL."],["mbedtls_x509_crl_init","\\brief          Initialize a CRL (chain)"],["mbedtls_x509_crl_parse","\\brief          Parse one or more CRLs and append them to the chained list"],["mbedtls_x509_crl_parse_der","\\brief          Parse a DER-encoded CRL and append it to the chained list"],["mbedtls_x509_crl_parse_file","\\brief          Load one or more CRLs and append them to the chained list"],["mbedtls_x509_crt_check_extended_key_usage","\\brief           Check usage of certificate against extendedKeyUsage."],["mbedtls_x509_crt_check_key_usage","\\brief          Check usage of certificate against keyUsage extension."],["mbedtls_x509_crt_free","\\brief          Unallocate all certificate data"],["mbedtls_x509_crt_info","\\brief          Returns an informational string about the certificate."],["mbedtls_x509_crt_init","\\brief          Initialize a certificate (chain)"],["mbedtls_x509_crt_is_revoked","\\brief          Verify the certificate revocation status"],["mbedtls_x509_crt_parse","\\brief          Parse one DER-encoded or one or more concatenated PEM-encoded certificates and add them to the chained list."],["mbedtls_x509_crt_parse_der","\\brief          Parse a single DER formatted certificate and add it to the chained list."],["mbedtls_x509_crt_parse_file","\\brief          Load one or more certificates and add them to the chained list. Parses permissively. If some certificates can be parsed, the result is the number of failed certificates it encountered. If none complete correctly, the first error is returned."],["mbedtls_x509_crt_parse_path","\\brief          Load one or more certificate files from a path and add them to the chained list. Parses permissively. If some certificates can be parsed, the result is the number of failed certificates it encountered. If none complete correctly, the first error is returned."],["mbedtls_x509_crt_verify","\\brief          Verify the certificate signature"],["mbedtls_x509_crt_verify_info","\\brief          Returns an informational string about the verification status of a certificate."],["mbedtls_x509_crt_verify_restartable","\\brief          Restartable version of \\c mbedtls_crt_verify_with_profile()"],["mbedtls_x509_crt_verify_with_profile","\\brief          Verify the certificate signature according to profile"],["mbedtls_x509_dn_gets","\\brief          Store the certificate DN in printable form into buf; no more than size characters will be written."],["mbedtls_x509_get_alg",""],["mbedtls_x509_get_alg_null",""],["mbedtls_x509_get_ext",""],["mbedtls_x509_get_name",""],["mbedtls_x509_get_rsassa_pss_params",""],["mbedtls_x509_get_serial",""],["mbedtls_x509_get_sig",""],["mbedtls_x509_get_sig_alg",""],["mbedtls_x509_get_time",""],["mbedtls_x509_key_size_helper",""],["mbedtls_x509_self_test","\\brief          Checkup routine"],["mbedtls_x509_serial_gets","\\brief          Store the certificate serial in printable form into buf; no more than size characters will be written."],["mbedtls_x509_set_extension",""],["mbedtls_x509_sig_alg_gets",""],["mbedtls_x509_string_to_names",""],["mbedtls_x509_time_is_future","\\brief          Check a given mbedtls_x509_time against the system time and tell if it’s in the future."],["mbedtls_x509_time_is_past","\\brief          Check a given mbedtls_x509_time against the system time and tell if it’s in the past."],["mbedtls_x509_write_extensions",""],["mbedtls_x509_write_names",""],["mbedtls_x509_write_sig",""],["mbedtls_x509write_crt_der","\\brief           Write a built up certificate to a X509 DER structure Note: data is written at the end of the buffer! Use the return value to determine where you should start using the buffer"],["mbedtls_x509write_crt_free","\\brief           Free the contents of a CRT write context"],["mbedtls_x509write_crt_init","\\brief           Initialize a CRT writing context"],["mbedtls_x509write_crt_pem","\\brief           Write a built up certificate to a X509 PEM string"],["mbedtls_x509write_crt_set_authority_key_identifier","\\brief           Set the authorityKeyIdentifier extension for a CRT Requires that mbedtls_x509write_crt_set_issuer_key() has been called before"],["mbedtls_x509write_crt_set_basic_constraints","\\brief           Set the basicConstraints extension for a CRT"],["mbedtls_x509write_crt_set_extension","\\brief           Generic function to add to or replace an extension in the CRT"],["mbedtls_x509write_crt_set_issuer_key","\\brief           Set the issuer key used for signing the certificate"],["mbedtls_x509write_crt_set_issuer_name","\\brief           Set the issuer name for a Certificate Issuer names should contain a comma-separated list of OID types and values: e.g. “C=UK,O=ARM,CN=mbed TLS CA”"],["mbedtls_x509write_crt_set_key_usage","\\brief           Set the Key Usage Extension flags (e.g. MBEDTLS_X509_KU_DIGITAL_SIGNATURE | MBEDTLS_X509_KU_KEY_CERT_SIGN)"],["mbedtls_x509write_crt_set_md_alg","\\brief           Set the MD algorithm to use for the signature (e.g. MBEDTLS_MD_SHA1)"],["mbedtls_x509write_crt_set_ns_cert_type","\\brief           Set the Netscape Cert Type flags (e.g. MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT | MBEDTLS_X509_NS_CERT_TYPE_EMAIL)"],["mbedtls_x509write_crt_set_serial","\\brief           Set the serial number for a Certificate."],["mbedtls_x509write_crt_set_subject_key","\\brief           Set the subject public key for the certificate"],["mbedtls_x509write_crt_set_subject_key_identifier","\\brief           Set the subjectKeyIdentifier extension for a CRT Requires that mbedtls_x509write_crt_set_subject_key() has been called before"],["mbedtls_x509write_crt_set_subject_name","\\brief           Set the subject name for a Certificate Subject names should contain a comma-separated list of OID types and values: e.g. “C=UK,O=ARM,CN=mbed TLS Server 1”"],["mbedtls_x509write_crt_set_validity","\\brief           Set the validity period for a Certificate Timestamps should be in string format for UTC timezone i.e. “YYYYMMDDhhmmss” e.g. “20131231235959” for December 31st 2013 at 23:59:59"],["mbedtls_x509write_crt_set_version","\\brief           Set the verion for a Certificate Default: MBEDTLS_X509_CRT_VERSION_3"],["mblen",""],["mbstowcs",""],["mbtowc",""],["mdns_free","@brief  Stop and free mDNS server"],["mdns_handle_system_event","@brief   System event handler This method controls the service state on all active interfaces and applications are required to call it from the system event handler for normal operation of mDNS service."],["mdns_hostname_set","@brief  Set the hostname for mDNS server required if you want to advertise services"],["mdns_init","@brief  Initialize mDNS on given interface"],["mdns_instance_name_set","@brief  Set the default instance name for mDNS server"],["mdns_query","@brief  Query mDNS for host or service All following query methods are derived from this one"],["mdns_query_a","@brief  Query mDNS for A record"],["mdns_query_aaaa","@brief  Query mDNS for A record"],["mdns_query_ptr","@brief  Query mDNS for service"],["mdns_query_results_free","@brief  Free query results"],["mdns_query_srv","@brief  Query mDNS for SRV record"],["mdns_query_txt","@brief  Query mDNS for TXT record"],["mdns_service_add","@brief  Add service to mDNS server"],["mdns_service_instance_name_set","@brief  Set instance name for service"],["mdns_service_port_set","@brief  Set service port"],["mdns_service_remove","@brief  Remove service from mDNS server"],["mdns_service_remove_all","@brief  Remove and free all services from mDNS server"],["mdns_service_txt_item_remove","@brief  Remove TXT item for service TXT record"],["mdns_service_txt_item_set","@brief  Set/Add TXT item for service TXT record"],["mdns_service_txt_set","@brief  Replace all TXT items for service"],["mem_calloc",""],["mem_free",""],["mem_init",""],["mem_malloc",""],["mem_trim",""],["memccpy",""],["memchr",""],["memcmp",""],["memcpy",""],["memmove",""],["memp_free",""],["memp_free_pool",""],["memp_init",""],["memp_init_pool",""],["memp_malloc",""],["memp_malloc_pool",""],["memset",""],["mkdir",""],["mkdirat",""],["mkdtemp",""],["mkfifo",""],["mkfifoat",""],["mknodat",""],["mkstemp",""],["mkstemps",""],["mktemp",""],["mktime",""],["mrand48",""],["multi_heap_aligned_alloc","@brief allocate a chunk of memory with specific alignment"],["multi_heap_aligned_free","@brief free() a buffer aligned in a given heap."],["multi_heap_check","@brief Check heap integrity"],["multi_heap_dump","@brief Dump heap information to stdout"],["multi_heap_free","@brief free() a buffer in a given heap."],["multi_heap_free_size","@brief Return free heap size"],["multi_heap_get_allocated_size","@brief Return the size that a particular pointer was allocated with."],["multi_heap_get_info","@brief Return metadata about a given heap"],["multi_heap_malloc","@brief malloc() a buffer in a given heap"],["multi_heap_minimum_free_size","@brief Return the lifetime minimum free heap size"],["multi_heap_realloc","@brief realloc() a buffer in a given heap."],["multi_heap_register","@brief Register a new heap for use"],["multi_heap_set_lock","@brief Associate a private lock pointer with a heap"],["nanosleep",""],["netif_add",""],["netif_add_ip6_address",""],["netif_add_noaddr",""],["netif_create_ip6_linklocal_address",""],["netif_find",""],["netif_get_by_index",""],["netif_get_ip6_addr_match",""],["netif_index_to_name",""],["netif_init",""],["netif_input",""],["netif_ip6_addr_set",""],["netif_ip6_addr_set_parts",""],["netif_ip6_addr_set_state",""],["netif_loop_output",""],["netif_name_to_index",""],["netif_poll",""],["netif_remove",""],["netif_set_addr",""],["netif_set_default",""],["netif_set_down",""],["netif_set_garp_flag",""],["netif_set_gw",""],["netif_set_ipaddr",""],["netif_set_link_down",""],["netif_set_link_up",""],["netif_set_netmask",""],["netif_set_up",""],["nice",""],["nrand48",""],["nvs_close","@brief      Close the storage handle and free any allocated resources"],["nvs_commit","@brief      Write any pending changes to non-volatile storage"],["nvs_entry_find","@brief       Create an iterator to enumerate NVS entries based on one or more parameters"],["nvs_entry_info","@brief       Fills nvs_entry_info_t structure with information about entry pointed to by the iterator."],["nvs_entry_next","@brief       Returns next item matching the iterator criteria, NULL if no such item exists."],["nvs_erase_all","@brief      Erase all key-value pairs in a namespace"],["nvs_erase_key","@brief      Erase key-value pair with given key name."],["nvs_flash_deinit","@brief Deinitialize NVS storage for the default NVS partition"],["nvs_flash_deinit_partition","@brief Deinitialize NVS storage for the given NVS partition"],["nvs_flash_erase","@brief Erase the default NVS partition"],["nvs_flash_erase_partition","@brief Erase specified NVS partition"],["nvs_flash_erase_partition_ptr","@brief Erase custom partition."],["nvs_flash_generate_keys","@brief Generate and store NVS keys in the provided esp partition"],["nvs_flash_init","@brief Initialize the default NVS partition."],["nvs_flash_init_partition","@brief Initialize NVS flash storage for the specified partition."],["nvs_flash_init_partition_ptr","@brief Initialize NVS flash storage for the partition specified by partition pointer."],["nvs_flash_read_security_cfg","@brief Read NVS security configuration from a partition."],["nvs_flash_secure_init","@brief Initialize the default NVS partition."],["nvs_flash_secure_init_partition","@brief Initialize NVS flash storage for the specified partition."],["nvs_get_blob","@brief      get blob value for given key"],["nvs_get_i16","@brief      get int16_t value for given key"],["nvs_get_i32","@brief      get int32_t value for given key"],["nvs_get_i64","@brief      get int64_t value for given key"],["nvs_get_i8","@{*/ @brief      get int8_t value for given key"],["nvs_get_stats","@brief      Fill structure nvs_stats_t. It provides info about used memory the partition."],["nvs_get_str","@{*/ @brief      get string value for given key"],["nvs_get_u16","@brief      get uint16_t value for given key"],["nvs_get_u32","@brief      get uint32_t value for given key"],["nvs_get_u64","@brief      get uint64_t value for given key"],["nvs_get_u8","@brief      get uint8_t value for given key"],["nvs_get_used_entry_count","@brief      Calculate all entries in a namespace."],["nvs_open","@brief      Open non-volatile storage with a given namespace from the default NVS partition"],["nvs_open_from_partition","@brief      Open non-volatile storage with a given namespace from specified partition"],["nvs_release_iterator","@brief       Release iterator"],["nvs_set_blob","@brief       set variable length binary value for given key"],["nvs_set_i16","@brief      set int16_t value for given key"],["nvs_set_i32","@brief      set int32_t value for given key"],["nvs_set_i64","@brief      set int64_t value for given key"],["nvs_set_i8","@{*/ @brief      set int8_t value for given key"],["nvs_set_str","@brief      set string for given key"],["nvs_set_u16","@brief      set uint16_t value for given key"],["nvs_set_u32","@brief      set uint32_t value for given key"],["nvs_set_u64","@brief      set uint64_t value for given key"],["nvs_set_u8","@brief      set uint8_t value for given key"],["on_exit",""],["open",""],["open_memstream",""],["openat",""],["opendir",""],["panic_abort",""],["panic_arch_fill_info",""],["panic_get_address",""],["panic_get_cause",""],["panic_print_backtrace",""],["panic_print_char",""],["panic_print_dec",""],["panic_print_hex",""],["panic_print_registers",""],["panic_print_str",""],["panic_set_address",""],["panic_soc_fill_info",""],["pathconf",""],["pause",""],["pbuf_add_header",""],["pbuf_add_header_force",""],["pbuf_alloc",""],["pbuf_alloc_reference",""],["pbuf_alloced_custom",""],["pbuf_cat",""],["pbuf_chain",""],["pbuf_clen",""],["pbuf_clone",""],["pbuf_coalesce",""],["pbuf_copy",""],["pbuf_copy_partial",""],["pbuf_dechain",""],["pbuf_free",""],["pbuf_free_header",""],["pbuf_get_at",""],["pbuf_get_contiguous",""],["pbuf_header",""],["pbuf_header_force",""],["pbuf_memcmp",""],["pbuf_memfind",""],["pbuf_put_at",""],["pbuf_realloc",""],["pbuf_ref",""],["pbuf_remove_header",""],["pbuf_skip",""],["pbuf_strstr",""],["pbuf_take",""],["pbuf_take_at",""],["pbuf_try_get_at",""],["pcTaskGetName","Get task name"],["pclose",""],["periph_module_disable","@brief      disable peripheral module"],["periph_module_enable","@brief      enable peripheral module"],["periph_module_reset","@brief      reset peripheral module"],["perror",""],["pipe",""],["poll",""],["popen",""],["posix_memalign",""],["pread",""],["printf",""],["protocomm_add_endpoint","@brief   Add endpoint request handler for a protocomm instance"],["protocomm_ble_start","@brief   Start Bluetooth Low Energy based transport layer for provisioning"],["protocomm_ble_stop","@brief   Stop Bluetooth Low Energy based transport layer for provisioning"],["protocomm_close_session","@brief   Frees internal resources used by a transport session"],["protocomm_delete","@brief   Delete a protocomm instance"],["protocomm_httpd_start","@brief   Start HTTPD protocomm transport"],["protocomm_httpd_stop","@brief   Stop HTTPD protocomm transport"],["protocomm_new","@brief   Create a new protocomm instance"],["protocomm_open_session","@brief   Allocates internal resources for new transport session"],["protocomm_remove_endpoint","@brief   Remove endpoint request handler for a protocomm instance"],["protocomm_req_handle","@brief   Calls the registered handler of an endpoint session for processing incoming data and generating the response"],["protocomm_set_security","@brief   Add endpoint security for a protocomm instance"],["protocomm_set_version","@brief   Set endpoint for version verification"],["protocomm_unset_security","@brief   Remove endpoint security for a protocomm instance"],["protocomm_unset_version","@brief   Remove version verification endpoint from a protocomm instance"],["pselect",""],["psignal",""],["pthread_atfork",""],["pthread_attr_destroy",""],["pthread_attr_getdetachstate",""],["pthread_attr_getguardsize",""],["pthread_attr_getschedparam",""],["pthread_attr_getstack",""],["pthread_attr_getstackaddr",""],["pthread_attr_getstacksize",""],["pthread_attr_init",""],["pthread_attr_setdetachstate",""],["pthread_attr_setguardsize",""],["pthread_attr_setschedparam",""],["pthread_attr_setstack",""],["pthread_attr_setstackaddr",""],["pthread_attr_setstacksize",""],["pthread_cancel",""],["pthread_cond_broadcast",""],["pthread_cond_destroy",""],["pthread_cond_init",""],["pthread_cond_signal",""],["pthread_cond_timedwait",""],["pthread_cond_wait",""],["pthread_condattr_destroy",""],["pthread_condattr_getclock",""],["pthread_condattr_getpshared",""],["pthread_condattr_init",""],["pthread_condattr_setclock",""],["pthread_condattr_setpshared",""],["pthread_create",""],["pthread_detach",""],["pthread_equal",""],["pthread_exit",""],["pthread_getconcurrency",""],["pthread_getcpuclockid",""],["pthread_getspecific",""],["pthread_join",""],["pthread_key_create",""],["pthread_key_delete",""],["pthread_kill",""],["pthread_mutex_destroy",""],["pthread_mutex_init",""],["pthread_mutex_lock",""],["pthread_mutex_timedlock",""],["pthread_mutex_trylock",""],["pthread_mutex_unlock",""],["pthread_mutexattr_destroy",""],["pthread_mutexattr_getpshared",""],["pthread_mutexattr_gettype",""],["pthread_mutexattr_init",""],["pthread_mutexattr_setpshared",""],["pthread_mutexattr_settype",""],["pthread_once",""],["pthread_self",""],["pthread_setcancelstate",""],["pthread_setcanceltype",""],["pthread_setconcurrency",""],["pthread_setspecific",""],["pthread_sigmask",""],["pthread_testcancel",""],["pthread_yield",""],["putc",""],["putc_unlocked",""],["putchar",""],["putchar_unlocked",""],["putenv",""],["puts",""],["putw",""],["pvTaskGetThreadLocalStoragePointer","Get local storage pointer specific to the given task."],["pvTaskIncrementMutexHeldCount",""],["pwrite",""],["pxPortInitialiseStack",""],["pxTaskGetNext",""],["pxTaskGetStackStart","Returns the start of the stack associated with xTask."],["qsort",""],["qsort_r",""],["quick_exit",""],["raise",""],["rand",""],["rand_r",""],["random",""],["read",""],["readdir",""],["readdir_r",""],["readlink",""],["readlinkat",""],["realloc",""],["reallocarray",""],["reallocf",""],["realpath",""],["remove",""],["rename",""],["renameat",""],["revoke",""],["rewind",""],["rewinddir",""],["rindex",""],["rmdir",""],["rmt_add_channel_to_group","@brief Add channel into a group (channels in the same group will transmit simultaneously)"],["rmt_clr_intr_enable_mask","@brief Clear mask value to RMT interrupt enable register."],["rmt_config","@brief Configure RMT parameters"],["rmt_driver_install","@brief Initialize RMT driver"],["rmt_driver_uninstall","@brief Uninstall RMT driver."],["rmt_fill_tx_items","@brief Fill memory data of channel with given RMT items."],["rmt_get_channel_status","@brief Get the current status of eight channels."],["rmt_get_clk_div","@brief Get RMT clock divider, channel clock is divided from source clock."],["rmt_get_counter_clock","@brief Get speed of channel’s internal counter clock."],["rmt_get_idle_level","@brief Get RMT idle output level for transmitter"],["rmt_get_mem_block_num","@brief Get RMT memory block number"],["rmt_get_mem_pd","@brief Get RMT memory low power mode."],["rmt_get_memory_owner","@brief Get RMT memory owner."],["rmt_get_ringbuf_handle","@brief Get ringbuffer from RMT."],["rmt_get_rx_idle_thresh","@brief Get RMT idle threshold value."],["rmt_get_source_clk","@brief Get RMT source clock"],["rmt_get_status","@brief Get RMT status"],["rmt_get_tx_loop_mode","@brief Get RMT tx loop mode."],["rmt_isr_deregister","@brief   Deregister previously registered RMT interrupt handler"],["rmt_isr_register","@brief Register RMT interrupt handler, the handler is an ISR."],["rmt_memory_rw_rst","@brief Reset RMT TX/RX memory index."],["rmt_register_tx_end_callback","@brief Registers a callback that will be called when transmission ends."],["rmt_remove_channel_from_group","@brief Remove channel out of a group"],["rmt_rx_memory_reset","@brief Reset RMT RX memory"],["rmt_rx_start","@brief Set RMT start receiving data."],["rmt_rx_stop","@brief Set RMT stop receiving data."],["rmt_set_clk_div","@brief Set RMT clock divider, channel clock is divided from source clock."],["rmt_set_err_intr_en","@brief Set RMT RX error interrupt enable"],["rmt_set_idle_level","@brief Set RMT idle output level for transmitter"],["rmt_set_intr_enable_mask","@brief Set mask value to RMT interrupt enable register."],["rmt_set_mem_block_num","@brief Set RMT memory block number for RMT channel"],["rmt_set_mem_pd","@brief Set RMT memory in low power mode."],["rmt_set_memory_owner","@brief Set RMT memory owner."],["rmt_set_pin","@brief Set RMT pin"],["rmt_set_rx_filter","@brief Set RMT RX filter."],["rmt_set_rx_idle_thresh","@brief Set RMT RX idle threshold value"],["rmt_set_rx_intr_en","@brief Set RMT RX interrupt enable"],["rmt_set_rx_thr_intr_en","@brief Set RMT RX threshold event interrupt enable"],["rmt_set_source_clk","@brief Set RMT source clock"],["rmt_set_tx_carrier","@brief Configure RMT carrier for TX signal."],["rmt_set_tx_intr_en","@brief Set RMT TX interrupt enable"],["rmt_set_tx_loop_count","@brief Set loop count for RMT TX channel"],["rmt_set_tx_loop_mode","@brief Set RMT tx loop mode."],["rmt_set_tx_thr_intr_en","@brief Set RMT TX threshold event interrupt enable"],["rmt_translator_get_context","@brief Get the user context set by ‘rmt_translator_set_context’"],["rmt_translator_init","@brief Init rmt translator and register user callback. The callback will convert the raw data that needs to be sent to rmt format. If a channel is initialized more than once, tha user callback will be replaced by the later."],["rmt_translator_set_context","@brief Set user context for the translator of specific channel"],["rmt_tx_memory_reset","@brief Reset RMT TX memory"],["rmt_tx_start","@brief Set RMT start sending data from memory."],["rmt_tx_stop","@brief Set RMT stop sending."],["rmt_wait_tx_done","@brief Wait RMT TX finished."],["rmt_write_items","@brief RMT send waveform from rmt_item array."],["rmt_write_sample","@brief Translate uint8_t type of data into rmt format and send it out. Requires rmt_translator_init to init the translator first."],["rpmatch",""],["rresvport",""],["rtc_clk_32k_bootstrap","@brief Enable 32k oscillator, configuring it for fast startup time. Note: to achieve higher frequency stability, rtc_clk_32k_enable function must be called one the 32k XTAL oscillator has started up. This function will initially disable the 32k XTAL oscillator, so it should not be called when the system is using 32k XTAL as RTC_SLOW_CLK."],["rtc_clk_32k_enable","@brief Enable or disable 32 kHz XTAL oscillator @param en  true to enable, false to disable"],["rtc_clk_32k_enable_external","@brief Configure 32 kHz XTAL oscillator to accept external clock signal"],["rtc_clk_32k_enabled","@brief Get the state of 32k XTAL oscillator @return true if 32k XTAL oscillator has been enabled"],["rtc_clk_8m_divider_set",""],["rtc_clk_8m_enable","@brief Enable or disable 8 MHz internal oscillator"],["rtc_clk_8m_enabled","@brief Get the state of 8 MHz internal oscillator @return true if the oscillator is enabled"],["rtc_clk_8md256_enabled","@brief Get the state of /256 divider which is applied to 8MHz clock @return true if the divided output is enabled"],["rtc_clk_apb_freq_get","@brief Get the current stored APB frequency. @return The APB frequency value as last set via rtc_clk_apb_freq_update(), in Hz."],["rtc_clk_apb_freq_update","@brief Store new APB frequency value into RTC_APB_FREQ_REG"],["rtc_clk_apll_enable","@brief Enable or disable APLL"],["rtc_clk_cal","@brief Measure RTC slow clock’s period, based on main XTAL frequency"],["rtc_clk_cal_internal",""],["rtc_clk_cal_ratio","@brief Measure ratio between XTAL frequency and RTC slow clock frequency @param cal_clk slow clock to be measured @param slow_clk_cycles number of slow clock cycles to average @return average ratio between XTAL frequency and slow clock frequency, Q13.19 fixed point format, or 0 if calibration has timed out."],["rtc_clk_cpu_freq_get_config","@brief Get the currently used CPU frequency configuration @param[out] out_config  Output, CPU frequency configuration structure"],["rtc_clk_cpu_freq_mhz_to_config","@brief Get CPU frequency config for a given frequency @param freq_mhz  Frequency in MHz @param[out] out_config Output, CPU frequency configuration structure @return true if frequency can be obtained, false otherwise"],["rtc_clk_cpu_freq_set_config","@brief Switch CPU frequency"],["rtc_clk_cpu_freq_set_config_fast","@brief Switch CPU frequency (optimized for speed)"],["rtc_clk_cpu_freq_set_xtal","@brief Switch CPU clock source to XTAL"],["rtc_clk_divider_set",""],["rtc_clk_fast_freq_get","@brief Get the RTC_FAST_CLK source @return currently selected clock source (one of rtc_fast_freq_t values)"],["rtc_clk_fast_freq_set","@brief Select source for RTC_FAST_CLK @param fast_freq clock source (one of rtc_fast_freq_t values)"],["rtc_clk_freq_cal","@brief Calculate the real clock value after the clock calibration"],["rtc_clk_init","Initialize clocks and set CPU frequency"],["rtc_clk_slow_freq_get","@brief Get the RTC_SLOW_CLK source @return currently selected clock source (one of rtc_slow_freq_t values)"],["rtc_clk_slow_freq_get_hz","@brief Get the approximate frequency of RTC_SLOW_CLK, in Hz"],["rtc_clk_slow_freq_set","@brief Select source for RTC_SLOW_CLK @param slow_freq clock source (one of rtc_slow_freq_t values)"],["rtc_clk_wait_for_slow_cycle","@brief Busy loop until next RTC_SLOW_CLK cycle"],["rtc_clk_xtal_freq_get","@brief Get main XTAL frequency"],["rtc_clk_xtal_freq_update","@brief Update XTAL frequency"],["rtc_deep_sleep_start","@brief Enter deep sleep mode"],["rtc_deep_slp_time_get",""],["rtc_dig_clk8m_disable","@brief Disable the rtc digital 8M clock"],["rtc_dig_clk8m_enable","@brief Enable the rtc digital 8M clock"],["rtc_init","Initialize RTC clock and power control related functions @param cfg configuration options as rtc_config_t"],["rtc_isr_deregister","@brief Deregister the handler previously registered using rtc_isr_register @param handler  handler function to call (as passed to rtc_isr_register) @param handler_arg  argument of the handler (as passed to rtc_isr_register) @return - ESP_OK on success - ESP_ERR_INVALID_STATE if a handler matching both handler and handler_arg isn’t registered"],["rtc_isr_register","@brief Register a handler for specific RTC_CNTL interrupts"],["rtc_light_slp_time_get",""],["rtc_sleep_init","@brief Prepare the chip to enter sleep mode"],["rtc_sleep_low_init","@brief Low level initialize for rtc state machine waiting cycles after waking up"],["rtc_sleep_pu",""],["rtc_sleep_set_wakeup_time","@brief Set target value of RTC counter for RTC_TIMER_TRIG_EN wakeup source @param t value of RTC counter at which wakeup from sleep will happen; only the lower 48 bits are used"],["rtc_sleep_start","@brief Enter deep or light sleep mode"],["rtc_time_get","@brief Get current value of RTC counter"],["rtc_time_slowclk_to_us","@brief Convert time interval from RTC_SLOW_CLK to microseconds @param time_in_us Time interval in RTC_SLOW_CLK cycles @param slow_clk_period  Period of slow clock in microseconds, Q13.19 fixed point format (as returned by rtc_slowck_cali). @return time interval in microseconds"],["rtc_time_us_to_slowclk","@brief Convert time interval from microseconds to RTC_SLOW_CLK cycles @param time_in_us Time interval in microseconds @param slow_clk_period  Period of slow clock in microseconds, Q13.19 fixed point format (as returned by rtc_slowck_cali). @return number of slow clock cycles"],["rtc_vddsdio_get_config","Get current VDDSDIO configuration If VDDSDIO configuration is overridden by RTC, get values from RTC Otherwise, if VDDSDIO is configured by EFUSE, get values from EFUSE Otherwise, use default values and the level of MTDI bootstrapping pin. @return currently used VDDSDIO configuration"],["rtc_vddsdio_set_config","Set new VDDSDIO configuration using RTC registers. If config.force == 1, this overrides configuration done using bootstrapping pins and EFUSE."],["ruserok",""],["sbrk",""],["scanf",""],["sched_yield",""],["sdmmc_card_init","Probe and initialize SD/MMC card using given host"],["sdmmc_card_print_info","@brief Print information about the card to a stream @param stream  stream obtained using fopen or fdopen @param card  card information structure initialized using sdmmc_card_init"],["sdmmc_io_enable_int","Enable SDIO interrupt in the SDMMC host"],["sdmmc_io_get_cis_data","Get the data of CIS region of a SDIO card."],["sdmmc_io_print_cis_info","Parse and print the CIS information of a SDIO card."],["sdmmc_io_read_blocks","Read blocks of data from an SDIO card using IO_RW_EXTENDED (CMD53)"],["sdmmc_io_read_byte","Read one byte from an SDIO card using IO_RW_DIRECT (CMD52)"],["sdmmc_io_read_bytes","Read multiple bytes from an SDIO card using IO_RW_EXTENDED (CMD53)"],["sdmmc_io_wait_int","Block until an SDIO interrupt is received"],["sdmmc_io_write_blocks","Write blocks of data to an SDIO card using IO_RW_EXTENDED (CMD53)"],["sdmmc_io_write_byte","Write one byte to an SDIO card using IO_RW_DIRECT (CMD52)"],["sdmmc_io_write_bytes","Write multiple bytes to an SDIO card using IO_RW_EXTENDED (CMD53)"],["sdmmc_read_sectors","Read given number of sectors from the SD/MMC card"],["sdmmc_write_sectors","Write given number of sectors to SD/MMC card"],["sdspi_host_deinit","@brief Release resources allocated using sdspi_host_init"],["sdspi_host_do_transaction","@brief Send command to the card and get response"],["sdspi_host_init","@brief Initialize SD SPI driver"],["sdspi_host_init_device","@brief Attach and initialize an SD SPI device on the specific SPI bus"],["sdspi_host_init_slot","@brief Initialize SD SPI driver for the specific SPI controller"],["sdspi_host_io_int_enable","@brief Enable SDIO interrupt."],["sdspi_host_io_int_wait","@brief Wait for SDIO interrupt until timeout."],["sdspi_host_remove_device","@brief Remove an SD SPI device"],["sdspi_host_set_card_clk","@brief Set card clock frequency"],["seed48",""],["seekdir",""],["select",""],["setbuf",""],["setbuffer",""],["setdtablesize",""],["setegid",""],["setenv",""],["seteuid",""],["setgid",""],["setgroups",""],["sethostname",""],["setitimer",""],["setlinebuf",""],["setpgid",""],["setpgrp",""],["setregid",""],["setreuid",""],["setsid",""],["setstate",""],["settimeofday",""],["setuid",""],["setusershell",""],["setvbuf",""],["sigaction",""],["sigaddset",""],["sigaltstack",""],["sigdelset",""],["sigemptyset",""],["sigfillset",""],["sigismember",""],["sigmadelta_config","@brief Configure Sigma-delta channel"],["sigmadelta_set_duty","@brief Set Sigma-delta channel duty."],["sigmadelta_set_pin","@brief Set Sigma-delta signal output pin"],["sigmadelta_set_prescale","@brief Set Sigma-delta channel’s clock pre-scale value. The source clock is APP_CLK, 80MHz. The clock frequency of the sigma-delta channel is APP_CLK / pre_scale"],["signal",""],["sigpause",""],["sigpending",""],["sigprocmask",""],["sigqueue",""],["sigsuspend",""],["sigtimedwait",""],["sigwait",""],["sigwaitinfo",""],["siprintf",""],["siscanf",""],["sleep",""],["sniprintf",""],["snprintf",""],["sntp_enabled",""],["sntp_get_sync_interval","@brief Get the sync interval of SNTP operation"],["sntp_get_sync_mode","@brief Get set sync mode"],["sntp_get_sync_status","@brief Get status of time sync"],["sntp_get_system_time","@brief system time getter used in the sntp module @note The lwip sntp uses u32_t types for sec and us arguments"],["sntp_getoperatingmode",""],["sntp_getreachability",""],["sntp_getserver",""],["sntp_getservername",""],["sntp_init",""],["sntp_restart","@brief Restart SNTP"],["sntp_set_sync_interval","@brief Set the sync interval of SNTP operation"],["sntp_set_sync_mode","@brief Set the sync mode"],["sntp_set_sync_status","@brief Set status of time sync"],["sntp_set_system_time","@brief system time setter used in the sntp module @note The lwip sntp uses u32_t types for sec and us arguments"],["sntp_set_time_sync_notification_cb","@brief Set a callback function for time synchronization notification"],["sntp_setoperatingmode",""],["sntp_setserver",""],["sntp_setservername",""],["sntp_stop",""],["sntp_sync_time","@brief This function updates the system time."],["soc_get_available_memory_region_max_count",""],["soc_get_available_memory_regions",""],["spi_bus_add_device","@brief Allocate a device on a SPI bus"],["spi_bus_free","@brief Free a SPI bus"],["spi_bus_initialize","@brief Initialize a SPI bus"],["spi_bus_remove_device","@brief Remove a device from the SPI bus"],["spi_cal_clock","@brief Calculate the working frequency that is most close to desired frequency, and also the register value."],["spi_device_acquire_bus","@brief Occupy the SPI bus for a device to do continuous transactions."],["spi_device_get_trans_result","@brief Get the result of a SPI transaction queued earlier by `spi_device_queue_trans`."],["spi_device_polling_end","@brief Poll until the polling transaction ends."],["spi_device_polling_start","@brief Immediately start a polling transaction."],["spi_device_polling_transmit","@brief Send a polling transaction, wait for it to complete, and return the result"],["spi_device_queue_trans","@brief Queue a SPI transaction for interrupt transaction execution. Get the result by `spi_device_get_trans_result`."],["spi_device_release_bus","@brief Release the SPI bus occupied by the device. All other devices can start sending transactions."],["spi_device_transmit","@brief Send a SPI transaction, wait for it to complete, and return the result"],["spi_flash_cache2phys","@brief Given a memory address where flash is mapped, return the corresponding physical flash offset."],["spi_flash_cache_enabled","@brief Check at runtime if flash cache is enabled on both CPUs"],["spi_flash_enable_cache","@brief Re-enable cache for the core defined as cpuid parameter."],["spi_flash_erase_range","@brief  Erase a range of flash sectors"],["spi_flash_erase_sector","@brief  Erase the Flash sector."],["spi_flash_get_chip_size","@brief  Get flash chip size, as set in binary image header"],["spi_flash_guard_get","@brief Get the guard functions used for flash access"],["spi_flash_guard_set","@brief  Sets guard functions to access flash."],["spi_flash_init","@brief  Initialize SPI flash access driver"],["spi_flash_mmap","@brief Map region of flash memory into data or instruction address space"],["spi_flash_mmap_dump","@brief Display information about mapped regions"],["spi_flash_mmap_get_free_pages","@brief get free pages number which can be mmap"],["spi_flash_mmap_pages","@brief Map sequences of pages of flash memory into data or instruction address space"],["spi_flash_munmap","@brief Release region previously obtained using spi_flash_mmap"],["spi_flash_phys2cache","@brief Given a physical offset in flash, return the address where it is mapped in the memory space."],["spi_flash_read","@brief  Read data from Flash."],["spi_flash_read_encrypted","@brief  Read data from Encrypted Flash."],["spi_flash_wrap_set","@brief set wrap mode of flash"],["spi_flash_write","@brief  Write data to Flash."],["spi_flash_write_encrypted","@brief  Write data encrypted to Flash."],["spi_get_actual_clock","@brief Calculate the working frequency that is most close to desired frequency."],["spi_get_freq_limit","@brief Get the frequency limit of current configurations. SPI master working at this limit is OK, while above the limit, full duplex mode and DMA will not work, and dummy bits will be aplied in the half duplex mode."],["spi_get_timing","@brief Calculate the timing settings of specified frequency and settings."],["spi_slave_free","@brief Free a SPI bus claimed as a SPI slave interface"],["spi_slave_get_trans_result","@brief Get the result of a SPI transaction queued earlier"],["spi_slave_initialize","@brief Initialize a SPI bus as a slave interface"],["spi_slave_queue_trans","@brief Queue a SPI transaction for execution"],["spi_slave_transmit","@brief Do a SPI transaction"],["sprintf",""],["srand",""],["srand48",""],["srandom",""],["sscanf",""],["stat",""],["stpcpy",""],["stpncpy",""],["strcasecmp",""],["strcasecmp_l",""],["strcat",""],["strchr",""],["strcmp",""],["strcoll",""],["strcoll_l",""],["strcpy",""],["strcspn",""],["strdup",""],["strerror",""],["strerror_l",""],["strerror_r",""],["strftime",""],["strftime_l",""],["strlcat",""],["strlcpy",""],["strlen",""],["strlwr",""],["strncasecmp",""],["strncasecmp_l",""],["strncat",""],["strncmp",""],["strncpy",""],["strndup",""],["strnlen",""],["strnstr",""],["strpbrk",""],["strrchr",""],["strsep",""],["strsignal",""],["strspn",""],["strstr",""],["strtod",""],["strtof",""],["strtoimax",""],["strtoimax_l",""],["strtok",""],["strtok_r",""],["strtol",""],["strtoll",""],["strtoul",""],["strtoull",""],["strtoumax",""],["strtoumax_l",""],["strupr",""],["strxfrm",""],["strxfrm_l",""],["symlink",""],["symlinkat",""],["sync",""],["sys_delay_ms",""],["sys_thread_sem_deinit",""],["sys_thread_sem_get",""],["sys_thread_sem_init",""],["sysconf",""],["system",""],["tcdrain","@brief Wait for transmission of output"],["tcflow","@brief Suspend or restart the transmission or reception of data"],["tcflush","@brief Flush non-transmitted output data and non-read input data"],["tcgetattr","@brief Gets the parameters of the terminal"],["tcgetpgrp",""],["tcgetsid","@brief Get process group ID for session leader for controlling terminal"],["tcpip_adapter_ap_input","@brief Compatible version of network stack input function. Translates to esp_netif_receive()"],["tcpip_adapter_ap_start","@brief Compatible version of former tcpip_adapter API of esp_netif_action_start for default softAP"],["tcpip_adapter_clear_default_eth_handlers","@brief Compatible version of former tcpip_adapter API to clear default ethernet handlers @return ESP_OK on success"],["tcpip_adapter_clear_default_wifi_handlers","@brief Compatible version of former tcpip_adapter API to clear default WIFI handlers @return ESP_OK on success"],["tcpip_adapter_create_ip6_linklocal","@brief Translates to esp_netif_create_ip6_linklocal @param tcpip_if Interface type corresponding to appropriate instance of esp-netif @return see esp_netif_create_ip6_linklocal"],["tcpip_adapter_dhcpc_get_status","@brief`Translates to esp_netif_dhcpc_get_status @param tcpip_if Interface type corresponding to appropriate instance of esp-netif @param status @return See esp_netif_dhcpc_get_status"],["tcpip_adapter_dhcpc_option","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcpc_option"],["tcpip_adapter_dhcpc_start","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcpc_start"],["tcpip_adapter_dhcpc_stop","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcpc_stop"],["tcpip_adapter_dhcps_get_status","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcps_get_status"],["tcpip_adapter_dhcps_option","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcps_option"],["tcpip_adapter_dhcps_start","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcps_start"],["tcpip_adapter_dhcps_stop","@brief Compatible version of former tcpip_adapter API of esp_netif_dhcps_stop"],["tcpip_adapter_down","@brief Compatible version of former tcpip_adapter API of esp_netif_down"],["tcpip_adapter_eth_input","@brief Compatible version of network stack input function. Translates to esp_netif_receive()"],["tcpip_adapter_eth_start","@brief Compatible version of former tcpip_adapter API of esp_netif_action_start for default ethernet"],["tcpip_adapter_get_dns_info","@brief Compatible version of former tcpip_adapter API of esp_netif_get_dns_info"],["tcpip_adapter_get_esp_if","@brief Compatible version of former tcpip_adapter API of esp_netif_get_handle_from_netif_impl"],["tcpip_adapter_get_hostname","@brief Compatible version of former tcpip_adapter API of esp_netif_get_hostname"],["tcpip_adapter_get_ip6_global","@brief Translates to esp_netif_get_ip6_global"],["tcpip_adapter_get_ip6_linklocal","@brief Translates to esp_netif_get_ip6_linklocal"],["tcpip_adapter_get_ip_info","@brief Translates to esp_netif_get_ip_info"],["tcpip_adapter_get_netif","@brief Translates to esp_netif_get_netif @param tcpip_if Interface type corresponding to appropriate instance of esp-netif @param netif @return see esp_netif_get_netif"],["tcpip_adapter_get_netif_index","@brief Compatible version of former tcpip_adapter API of esp_netif_get_netif_impl_index"],["tcpip_adapter_get_old_ip_info","@brief Compatible version of former tcpip_adapter API of esp_netif_get_old_ip_info"],["tcpip_adapter_get_sta_list","@brief Compatible version of former tcpip_adapter API of esp_netif_get_sta_list"],["tcpip_adapter_if_from_esp_netif","@brief Compatiblity mode: convert the esp-netif handle to tcpip_adapter legacy interface enum"],["tcpip_adapter_init","@brief tcpip adapter legacy init. It is used only to set the compatibility mode of esp-netif, which will enable backward compatibility of esp-netif."],["tcpip_adapter_is_netif_up","@brief Translates to esp_netif_is_netif_up @param tcpip_if Interface type corresponding to appropriate instance of esp-netif @return see esp_netif_is_netif_up"],["tcpip_adapter_set_default_eth_handlers","@brief Compatible version of setting ethernet default handlers @note Compatible version of wifi handlers are provided in a separate header, as this used to be called privately from wifi_init() @return ESP_OK on success"],["tcpip_adapter_set_default_wifi_handlers","@brief This function is called from wifi_init to assure backward compatibility mode of tcpip_adapter. In case of legacy use, default instances of ap and sta are created and handlers are registered"],["tcpip_adapter_set_dns_info","@brief Compatible version of former tcpip_adapter API of esp_netif_set_dns_info"],["tcpip_adapter_set_hostname","@brief Compatible version of former tcpip_adapter API of esp_netif_set_hostname"],["tcpip_adapter_set_ip_info","@brief Compatible version of former tcpip_adapter API of esp_netif_set_ip_info"],["tcpip_adapter_set_old_ip_info","@brief Compatible version of former tcpip_adapter API of esp_netif_set_old_ip_info"],["tcpip_adapter_sta_input","@brief Compatible version of network stack input function. Translates to esp_netif_receive()"],["tcpip_adapter_sta_start","@brief Compatible version of former tcpip_adapter API of esp_netif_action_start for default station"],["tcpip_adapter_stop","@brief Compatible version of former tcpip_adapter API of esp_netif_action_stop"],["tcpip_adapter_up","@brief Compatible version of former tcpip_adapter API of esp_netif_up"],["tcsendbreak","@brief Send a break for a specific duration"],["tcsetattr","@brief Sets the parameters of the terminal"],["tcsetpgrp",""],["telldir",""],["tempnam",""],["time",""],["timer_create",""],["timer_deinit","@brief Deinitializes the timer."],["timer_delete",""],["timer_disable_intr","@brief Disable timer interrupt"],["timer_enable_intr","@brief Enable timer interrupt"],["timer_get_alarm_value","@brief Get timer alarm value."],["timer_get_config","@brief Get timer configure value."],["timer_get_counter_time_sec","@brief Read the counter value of hardware timer, in unit of a given scale."],["timer_get_counter_value","@brief Read the counter value of hardware timer."],["timer_getoverrun",""],["timer_gettime",""],["timer_group_clr_intr_sta_in_isr","@brief Clear the masked interrupt status, just used in ISR"],["timer_group_clr_intr_status_in_isr","@brief Clear timer interrupt status, just used in ISR"],["timer_group_enable_alarm_in_isr","@brief Enable alarm interrupt, just used in ISR"],["timer_group_get_auto_reload_in_isr","@brief Get auto reload enable status, just used in ISR"],["timer_group_get_counter_value_in_isr","@brief Get the current counter value, just used in ISR"],["timer_group_get_intr_status_in_isr","@brief Get interrupt status, just used in ISR"],["timer_group_intr_clr_in_isr","@brief Clear timer interrupt status, just used in ISR"],["timer_group_intr_disable","@brief Disable timer group interrupt, by disable mask"],["timer_group_intr_enable","@brief Enable timer group interrupt, by enable mask"],["timer_group_intr_get_in_isr","@brief Get the masked interrupt status, just used in ISR"],["timer_group_set_alarm_value_in_isr","@brief Set the alarm threshold for the timer, just used in ISR"],["timer_group_set_counter_enable_in_isr","@brief Enable/disable a counter, just used in ISR"],["timer_init","@brief Initializes and configure the timer."],["timer_isr_callback_add","@brief Add ISR handle callback for the corresponding timer."],["timer_isr_callback_remove","@brief Remove ISR handle callback for the corresponding timer."],["timer_isr_register","@brief Register Timer interrupt handler, the handler is an ISR. The handler will be attached to the same CPU core that this function is running on."],["timer_pause","@brief Pause the counter of hardware timer."],["timer_set_alarm","@brief Enable or disable generation of timer alarm events."],["timer_set_alarm_value","@brief Set timer alarm value."],["timer_set_auto_reload","@brief Enable or disable counter reload function when alarm event occurs."],["timer_set_counter_mode","@brief Set counting mode for hardware timer."],["timer_set_counter_value","@brief Set counter value to hardware timer."],["timer_set_divider","@brief Set hardware timer source clock divider. Timer groups clock are divider from APB clock."],["timer_settime",""],["timer_spinlock_give","@brief Give timer spinlock to exit critical protect"],["timer_spinlock_take","@brief Take timer spinlock to enter critical protect"],["timer_start","@brief Start the counter of hardware timer."],["timingsafe_bcmp",""],["timingsafe_memcmp",""],["tmpfile",""],["tmpnam",""],["toascii",""],["toascii_l",""],["tolower",""],["tolower_l",""],["toupper",""],["toupper_l",""],["truncate",""],["ttyname",""],["ttyname_r",""],["twai_clear_receive_queue","@brief   Clear the receive queue"],["twai_clear_transmit_queue","@brief   Clear the transmit queue"],["twai_driver_install","@brief   Install TWAI driver"],["twai_driver_uninstall","@brief   Uninstall the TWAI driver"],["twai_get_status_info","@brief   Get current status information of the TWAI driver"],["twai_initiate_recovery","@brief   Start the bus recovery process"],["twai_read_alerts","@brief   Read TWAI driver alerts"],["twai_receive","@brief   Receive a TWAI message"],["twai_reconfigure_alerts","@brief   Reconfigure which alerts are enabled"],["twai_start","@brief   Start the TWAI driver"],["twai_stop","@brief   Stop the TWAI driver"],["twai_transmit","@brief   Transmit a TWAI message"],["tzset",""],["ualarm",""],["uart_clear_intr_status","@brief Clear UART interrupt status"],["uart_disable_intr_mask","@brief Clear UART interrupt enable bits"],["uart_disable_pattern_det_intr","@brief   UART disable pattern detect function. Designed for applications like ‘AT commands’. When the hardware detects a series of one same character, the interrupt will be triggered."],["uart_disable_rx_intr","@brief Disable UART RX interrupt (RX_FULL & RX_TIMEOUT INTERRUPT)"],["uart_disable_tx_intr","@brief Disable UART TX interrupt (TX_FULL & TX_TIMEOUT INTERRUPT)"],["uart_driver_delete","@brief Uninstall UART driver."],["uart_driver_install","@brief Install UART driver and set the UART to the default configuration."],["uart_enable_intr_mask","@brief Set UART interrupt enable"],["uart_enable_pattern_det_baud_intr","@brief UART enable pattern detect function. Designed for applications like ‘AT commands’. When the hardware detect a series of one same character, the interrupt will be triggered."],["uart_enable_rx_intr","@brief Enable UART RX interrupt (RX_FULL & RX_TIMEOUT INTERRUPT)"],["uart_enable_tx_intr","@brief Enable UART TX interrupt (TX_FULL & TX_TIMEOUT INTERRUPT)"],["uart_flush","@brief Alias of uart_flush_input. UART ring buffer flush. This will discard all data in the UART RX buffer. @note  Instead of waiting the data sent out, this function will clear UART rx buffer. In order to send all the data in tx FIFO, we can use uart_wait_tx_done function. @param uart_num UART port number, the max port number is (UART_NUM_MAX -1)."],["uart_flush_input","@brief Clear input buffer, discard all the data is in the ring-buffer. @note  In order to send all the data in tx FIFO, we can use uart_wait_tx_done function. @param uart_num UART port number, the max port number is (UART_NUM_MAX -1)."],["uart_get_baudrate","@brief Get the UART baud rate configuration."],["uart_get_buffered_data_len","@brief   UART get RX ring buffer cached data length"],["uart_get_collision_flag","@brief Returns collision detection flag for RS485 mode Function returns the collision detection flag into variable pointed by collision_flag. *collision_flag = true, if collision detected else it is equal to false. This function should be executed when actual transmission is completed (after uart_write_bytes())."],["uart_get_hw_flow_ctrl","@brief Get the UART hardware flow control configuration."],["uart_get_parity","@brief Get the UART parity mode configuration."],["uart_get_selectlock","@brief Get mutex guarding select() notifications"],["uart_get_stop_bits","@brief Get the UART stop bit configuration."],["uart_get_wakeup_threshold","@brief Get the number of RX pin signal edges for light sleep wakeup."],["uart_get_word_length","@brief Get the UART data bit configuration."],["uart_intr_config","@brief Configure UART interrupts."],["uart_is_driver_installed","@brief Checks whether the driver is installed or not"],["uart_isr_free","@brief Free UART interrupt handler registered by uart_isr_register. Must be called on the same core as uart_isr_register was called."],["uart_isr_register","@brief Register UART interrupt handler (ISR)."],["uart_param_config","@brief Set UART configuration parameters."],["uart_pattern_get_pos","@brief Return the nearest detected pattern position in buffer. The positions of the detected pattern are saved in a queue, This function do nothing to the queue. @note  If the RX buffer is full and flow control is not enabled, the detected pattern may not be found in the rx buffer due to overflow."],["uart_pattern_pop_pos","@brief Return the nearest detected pattern position in buffer. The positions of the detected pattern are saved in a queue, this function will dequeue the first pattern position and move the pointer to next pattern position. @note  If the RX buffer is full and flow control is not enabled, the detected pattern may not be found in the rx buffer due to overflow."],["uart_pattern_queue_reset","@brief Allocate a new memory with the given length to save record the detected pattern position in rx buffer."],["uart_read_bytes","@brief UART read bytes from UART buffer"],["uart_set_always_rx_timeout","@brief Configure behavior of UART RX timeout interrupt."],["uart_set_baudrate","@brief Set UART baud rate."],["uart_set_dtr","@brief Manually set the UART DTR pin level."],["uart_set_hw_flow_ctrl","@brief Set hardware flow control."],["uart_set_line_inverse","@brief Set UART line inverse mode"],["uart_set_loop_back","@brief Configure TX signal loop back to RX module, just for the test usage."],["uart_set_mode","@brief UART set communication mode"],["uart_set_parity","@brief Set UART parity mode."],["uart_set_pin","@brief Set UART pin number"],["uart_set_rts","@brief Manually set the UART RTS pin level. @note  UART must be configured with hardware flow control disabled."],["uart_set_rx_full_threshold","@brief Set uart threshold value for RX fifo full @note If application is using higher baudrate and it is observed that bytes in hardware RX fifo are overwritten then this threshold can be reduced"],["uart_set_rx_timeout","@brief UART set threshold timeout for TOUT feature"],["uart_set_select_notif_callback","@brief Set notification callback function for select() events @param uart_num UART port number @param uart_select_notif_callback callback function"],["uart_set_stop_bits","@brief Set UART stop bits."],["uart_set_sw_flow_ctrl","@brief Set software flow control."],["uart_set_tx_empty_threshold","@brief Set uart threshold values for TX fifo empty"],["uart_set_tx_idle_num","@brief Set UART idle interval after tx FIFO is empty"],["uart_set_wakeup_threshold","@brief Set the number of RX pin signal edges for light sleep wakeup"],["uart_set_word_length","@brief Set UART data bits."],["uart_tx_chars","@brief Send data to the UART port from a given buffer and length."],["uart_wait_tx_done","@brief Wait until UART TX FIFO is empty."],["uart_wait_tx_idle_polling","@brief Wait until UART tx memory empty and the last char send ok (polling mode)."],["uart_write_bytes","@brief Send data to the UART port from a given buffer and length,"],["uart_write_bytes_with_break","@brief Send data to the UART port from a given buffer and length,"],["ucQueueGetQueueType",""],["ulTaskGetIdleRunTimeCounter","configGENERATE_RUN_TIME_STATS and configUSE_STATS_FORMATTING_FUNCTIONS must both be defined as 1 for this function to be available.  The application must also then provide definitions for portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() and portGET_RUN_TIME_COUNTER_VALUE() to configure a peripheral timer/counter and return the timers current count value respectively.  The counter should be at least 10 times the frequency of the tick count."],["ulTaskNotifyTake","Simplified macro for receiving task notification."],["umask",""],["ungetc",""],["unlink",""],["unlinkat",""],["unsetenv",""],["usleep",""],["utime",""],["utimensat",""],["utimes",""],["utoa",""],["uxListRemove",""],["uxQueueGetQueueNumber",""],["uxQueueMessagesWaiting","Return the number of messages stored in a queue."],["uxQueueMessagesWaitingFromISR",""],["uxQueueSpacesAvailable","Return the number of free spaces available in a queue.  This is equal to the number of items that can be sent to the queue before the queue becomes full if no items are removed."],["uxTaskGetNumberOfTasks","Get current number of tasks"],["uxTaskGetSnapshotAll",""],["uxTaskGetStackHighWaterMark","Returns the high water mark of the stack associated with xTask."],["uxTaskGetStackHighWaterMark2","Returns the start of the stack associated with xTask."],["uxTaskGetSystemState","configUSE_TRACE_FACILITY must be defined as 1 in FreeRTOSConfig.h for uxTaskGetSystemState() to be available."],["uxTaskGetTaskNumber",""],["uxTaskPriorityGet","Obtain the priority of any task."],["uxTaskPriorityGetFromISR","A version of uxTaskPriorityGet() that can be used from an ISR."],["uxTaskResetEventItemValue",""],["vApplicationSleep",""],["vListInitialise",""],["vListInitialiseItem",""],["vListInsert",""],["vListInsertEnd",""],["vPortCPUAcquireMutex",""],["vPortCPUAcquireMutexTimeout",""],["vPortCPUInitializeMutex",""],["vPortCPUReleaseMutex",""],["vPortClearInterruptMask",""],["vPortEndScheduler",""],["vPortEnterCritical",""],["vPortExitCritical",""],["vPortSetInterruptMask",""],["vPortSetStackWatchpoint",""],["vPortYield",""],["vPortYieldFromISR",""],["vPortYieldOtherCore",""],["vQueueDelete","Delete a queue - freeing all the memory allocated for storing of items placed on the queue."],["vQueueSetQueueNumber",""],["vQueueWaitForMessageRestricted","@cond"],["vRingbufferDelete","@brief   Delete a ring buffer"],["vRingbufferGetInfo","@brief   Get information about ring buffer status"],["vRingbufferReturnItem","@brief   Return a previously-retrieved item to the ring buffer"],["vRingbufferReturnItemFromISR","@brief   Return a previously-retrieved item to the ring buffer from an ISR"],["vTaskAllocateMPURegions",""],["vTaskDelay","Delay a task for a given number of ticks."],["vTaskDelayUntil","Delay a task until a specified time."],["vTaskDelete","Remove a task from the RTOS real time kernel’s management.  The task being deleted will be removed from all ready, blocked, suspended and event lists."],["vTaskEndScheduler","Stops the real time kernel tick."],["vTaskGetInfo","Populates a TaskStatus_t structure with information about a task."],["vTaskGetRunTimeStats","Get the state of running tasks as a string"],["vTaskGetSnapshot",""],["vTaskInternalSetTimeOutState",""],["vTaskList","List all the current tasks."],["vTaskMissedYield",""],["vTaskNotifyGiveFromISR","Simplified macro for sending task notification from ISR."],["vTaskPlaceOnEventList",""],["vTaskPlaceOnEventListRestricted",""],["vTaskPlaceOnUnorderedEventList",""],["vTaskPriorityDisinheritAfterTimeout",""],["vTaskPrioritySet","Set the priority of any task."],["vTaskResume","Resumes a suspended task."],["vTaskSetTaskNumber",""],["vTaskSetThreadLocalStoragePointer","Set local storage pointer specific to the given task."],["vTaskSetThreadLocalStoragePointerAndDelCallback","Set local storage pointer and deletion callback."],["vTaskSetTimeOutState",""],["vTaskStartScheduler","@cond */ Starts the real time kernel tick processing."],["vTaskStepTick",""],["vTaskSuspend","Suspend a task."],["vTaskSuspendAll","Suspends the scheduler without disabling interrupts."],["vTaskSwitchContext",""],["vfork",""],["vhangup",""],["wcstoimax",""],["wcstoimax_l",""],["wcstombs",""],["wcstoumax",""],["wcstoumax_l",""],["wctomb",""],["wifi_bt_common_module_disable","@brief      disable wifi bt common module"],["wifi_bt_common_module_enable","@brief      enable wifi bt common module"],["wifi_module_disable","@brief      disable wifi module"],["wifi_module_enable","@brief      enable wifi module"],["wifi_prov_config_data_handler","@brief   Handler for receiving and responding to requests from master"],["wifi_prov_mgr_configure_sta","@brief   Runs Wi-Fi as Station with the supplied configuration"],["wifi_prov_mgr_deinit","@brief   Stop provisioning (if running) and release resource used by the manager"],["wifi_prov_mgr_disable_auto_stop","@brief   Disable auto stopping of provisioning service upon completion"],["wifi_prov_mgr_endpoint_create","@brief   Create an additional endpoint and allocate internal resources for it"],["wifi_prov_mgr_endpoint_register","@brief   Register a handler for the previously created endpoint"],["wifi_prov_mgr_endpoint_unregister","@brief   Unregister the handler for an endpoint"],["wifi_prov_mgr_event_handler","@brief   Event handler for provisioning manager"],["wifi_prov_mgr_get_wifi_disconnect_reason","@brief   Get reason code in case of Wi-Fi station disconnection during provisioning"],["wifi_prov_mgr_get_wifi_state","@brief   Get state of Wi-Fi Station during provisioning"],["wifi_prov_mgr_init","@brief   Initialize provisioning manager instance"],["wifi_prov_mgr_is_provisioned","@brief   Checks if device is provisioned"],["wifi_prov_mgr_reset_sm_state_on_failure","@brief   Reset internal state machine and clear provisioned credentials."],["wifi_prov_mgr_set_app_info","@brief   Set application version and capabilities in the JSON data returned by proto-ver endpoint"],["wifi_prov_mgr_start_provisioning","@brief   Start provisioning service"],["wifi_prov_mgr_stop_provisioning","@brief   Stop provisioning service"],["wifi_prov_mgr_wait","@brief   Wait for provisioning service to finish"],["wifi_prov_scheme_ble_event_cb_free_ble",""],["wifi_prov_scheme_ble_event_cb_free_bt",""],["wifi_prov_scheme_ble_event_cb_free_btdm",""],["wifi_prov_scheme_ble_set_mfg_data","@brief   Set manufacturer specific data in scan response"],["wifi_prov_scheme_ble_set_service_uuid","@brief   Set the 128 bit GATT service UUID used for provisioning"],["wifi_prov_scheme_softap_set_httpd_handle","@brief Provide HTTPD Server handle externally."],["wl_erase_range","@brief Erase part of the WL storage"],["wl_mount","@brief Mount WL for defined partition"],["wl_read","@brief Read data from the WL storage"],["wl_sector_size","@brief Get sector size of the WL instance"],["wl_size","@brief Get size of the WL storage"],["wl_unmount","@brief Unmount WL for defined partition"],["wl_write","@brief Write data to the WL storage"],["write",""],["xPortGetTickRateHz",""],["xPortInIsrContext",""],["xPortInterruptedFromISRContext",""],["xPortStartScheduler",""],["xQueueAddToSet","Adds a queue or semaphore to a queue set that was previously created by a call to xQueueCreateSet()."],["xQueueCRReceive",""],["xQueueCRReceiveFromISR",""],["xQueueCRSend",""],["xQueueCRSendFromISR","@cond */ The functions defined above are for passing data to and from tasks.  The functions below are the equivalents for passing data to and from co-routines."],["xQueueCreateCountingSemaphore",""],["xQueueCreateCountingSemaphoreStatic",""],["xQueueCreateMutex","For internal use only.  Use xSemaphoreCreateMutex(), xSemaphoreCreateCounting() or xSemaphoreGetMutexHolder() instead of calling these functions directly."],["xQueueCreateMutexStatic",""],["xQueueCreateSet","Queue sets provide a mechanism to allow a task to block (pend) on a read operation from multiple queues or semaphores simultaneously."],["xQueueGenericCreate",""],["xQueueGenericCreateStatic",""],["xQueueGenericReset",""],["xQueueGenericSend","It is preferred that the macros xQueueSend(), xQueueSendToFront() and xQueueSendToBack() are used in place of calling this function directly."],["xQueueGenericSendFromISR","@{*/ It is preferred that the macros xQueueSendFromISR(), xQueueSendToFrontFromISR() and xQueueSendToBackFromISR() be used in place of calling this function directly.  xQueueGiveFromISR() is an equivalent for use by semaphores that don’t actually copy any data."],["xQueueGetMutexHolder",""],["xQueueGetMutexHolderFromISR",""],["xQueueGiveFromISR",""],["xQueueGiveMutexRecursive",""],["xQueueIsQueueEmptyFromISR",""],["xQueueIsQueueFullFromISR",""],["xQueuePeek","Receive an item from a queue without removing the item from the queue. The item is received by copy so a buffer of adequate size must be provided.  The number of bytes copied into the buffer was defined when the queue was created."],["xQueuePeekFromISR","A version of xQueuePeek() that can be called from an interrupt service routine (ISR)."],["xQueueReceive","Receive an item from a queue.  The item is received by copy so a buffer of adequate size must be provided.  The number of bytes copied into the buffer was defined when the queue was created."],["xQueueReceiveFromISR","Receive an item from a queue.  It is safe to use this function from within an interrupt service routine."],["xQueueRemoveFromSet","Removes a queue or semaphore from a queue set.  A queue or semaphore can only be removed from a set if the queue or semaphore is empty."],["xQueueSelectFromSet","xQueueSelectFromSet() selects from the members of a queue set a queue or semaphore that either contains data (in the case of a queue) or is available to take (in the case of a semaphore).  xQueueSelectFromSet() effectively allows a task to block (pend) on a read operation on all the queues and semaphores in a queue set simultaneously."],["xQueueSelectFromSetFromISR","A version of xQueueSelectFromSet() that can be used from an ISR."],["xQueueSemaphoreTake",""],["xQueueTakeMutexRecursive","For internal use only.  Use xSemaphoreTakeMutexRecursive() or xSemaphoreGiveMutexRecursive() instead of calling these functions directly."],["xRingbufferAddToQueueSetRead","@brief   Add the ring buffer’s read semaphore to a queue set."],["xRingbufferCanRead","@brief   Check if the selected queue set member is the ring buffer’s read semaphore"],["xRingbufferCreate","@brief       Create a ring buffer"],["xRingbufferCreateNoSplit","@brief Create a ring buffer of type RINGBUF_TYPE_NOSPLIT for a fixed item_size"],["xRingbufferCreateStatic",""],["xRingbufferGetCurFreeSize","@brief   Get current free size available for an item/data in the buffer"],["xRingbufferGetMaxItemSize","@brief   Get maximum size of an item that can be placed in the ring buffer"],["xRingbufferPrintInfo","@brief   Debugging function to print the internal pointers in the ring buffer"],["xRingbufferReceive","@brief   Retrieve an item from the ring buffer"],["xRingbufferReceiveFromISR","@brief   Retrieve an item from the ring buffer in an ISR"],["xRingbufferReceiveSplit","@brief   Retrieve a split item from an allow-split ring buffer"],["xRingbufferReceiveSplitFromISR","@brief   Retrieve a split item from an allow-split ring buffer in an ISR"],["xRingbufferReceiveUpTo","@brief   Retrieve bytes from a byte buffer, specifying the maximum amount of bytes to retrieve"],["xRingbufferReceiveUpToFromISR","@brief   Retrieve bytes from a byte buffer, specifying the maximum amount of bytes to retrieve. Call this from an ISR."],["xRingbufferRemoveFromQueueSetRead","@brief   Remove the ring buffer’s read semaphore from a queue set."],["xRingbufferSend","@brief       Insert an item into the ring buffer"],["xRingbufferSendAcquire","@brief Acquire memory from the ring buffer to be written to by an external source and to be sent later."],["xRingbufferSendComplete","@brief       Actually send an item into the ring buffer allocated before by `xRingbufferSendAcquire`."],["xRingbufferSendFromISR","@brief       Insert an item into the ring buffer in an ISR"],["xTaskAbortDelay","INCLUDE_xTaskAbortDelay must be defined as 1 in FreeRTOSConfig.h for this function to be available."],["xTaskCallApplicationTaskHook","Calls the hook function associated with xTask. Passing xTask as NULL has the effect of calling the Running tasks (the calling task) hook function."],["xTaskCatchUpTicks",""],["xTaskCheckForTimeOut",""],["xTaskCreatePinnedToCore",""],["xTaskCreateStaticPinnedToCore",""],["xTaskGenericNotify","configUSE_TASK_NOTIFICATIONS must be undefined or defined as 1 for this function to be available."],["xTaskGenericNotifyFromISR","Send task notification from an ISR."],["xTaskGetAffinity",""],["xTaskGetCurrentTaskHandle",""],["xTaskGetCurrentTaskHandleForCPU","@cond"],["xTaskGetHandle","@note This function takes a relatively long time to complete and should be used sparingly."],["xTaskGetIdleTaskHandle","xTaskGetIdleTaskHandle() is only available if INCLUDE_xTaskGetIdleTaskHandle is set to 1 in FreeRTOSConfig.h."],["xTaskGetIdleTaskHandleForCPU","Get the handle of idle task for the given CPU."],["xTaskGetSchedulerState",""],["xTaskGetTickCount","Get tick count"],["xTaskGetTickCountFromISR","Get tick count from ISR"],["xTaskIncrementTick",""],["xTaskNotifyStateClear","If the notification state of the task referenced by the handle xTask is eNotified, then set the task’s notification state to eNotWaitingNotification. The task’s notification value is not altered.  Set xTask to NULL to clear the notification state of the calling task."],["xTaskNotifyWait","Wait for task notification"],["xTaskPriorityDisinherit",""],["xTaskPriorityInherit",""],["xTaskRemoveFromEventList",""],["xTaskRemoveFromUnorderedEventList",""],["xTaskResumeAll","Resumes scheduler activity after it was suspended by a call to vTaskSuspendAll()."],["xTaskResumeFromISR","An implementation of vTaskResume() that can be called from within an ISR."]],"macro":[["esp",""],["esp_nofail",""],["esp_result",""]],"mod":[["c_types",""]],"static":[["ETH_EVENT",""],["GPIO",""],["GPIO_HOLD_MASK",""],["GPIO_PIN_MUX_REG",""],["GPSPI2",""],["I2S0",""],["IP_EVENT",""],["RMT",""],["RMTMEM",""],["RTCCNTL",""],["SIGMADELTA",""],["SPIMEM0",""],["SPIMEM1",""],["TIMERG0",""],["TIMERG1",""],["VolToPart",""],["WIFI_EVENT",""],["WIFI_PROV_EVENT",""],["__sf_fake_stderr",""],["__sf_fake_stdin",""],["__sf_fake_stdout",""],["_ctype_",""],["_daylight",""],["_g_esp_netif_inherent_ap_config",""],["_g_esp_netif_inherent_eth_config",""],["_g_esp_netif_inherent_ppp_config",""],["_g_esp_netif_inherent_slip_config",""],["_g_esp_netif_inherent_sta_config",""],["_g_esp_netif_netstack_default_eth",""],["_g_esp_netif_netstack_default_ppp",""],["_g_esp_netif_netstack_default_slip",""],["_g_esp_netif_netstack_default_wifi_ap",""],["_g_esp_netif_netstack_default_wifi_sta",""],["_g_esp_netif_soft_ap_ip",""],["_global_impure_ptr",""],["_sys_errlist",""],["_sys_nerr",""],["_timezone",""],["_tzname",""],["environ",""],["esp_flash_default_chip","@brief Pointer to the “default” SPI flash chip, ie the main chip attached to the MCU."],["exc_cause_table","@addtogroup ets_apis @{"],["g_exc_frames",""],["g_flash_guard_default_ops","@brief Default OS-aware flash access guard functions"],["g_flash_guard_no_os_ops","@brief Non-OS flash access guard functions"],["g_panic_abort",""],["g_wifi_default_wpa_crypto_funcs",""],["g_wifi_feature_caps",""],["g_wifi_osi_funcs",""],["i2s_periph_signal",""],["in6addr_any","This variable is initialized by the system to contain the wildcard IPv6 address."],["ip6_addr_any",""],["ip_addr_any",""],["ip_addr_any_type",""],["ip_addr_broadcast",""],["mbedtls_test_ca_crt",""],["mbedtls_test_ca_crt_ec",""],["mbedtls_test_ca_crt_ec_der",""],["mbedtls_test_ca_crt_ec_der_len",""],["mbedtls_test_ca_crt_ec_len",""],["mbedtls_test_ca_crt_ec_pem",""],["mbedtls_test_ca_crt_ec_pem_len",""],["mbedtls_test_ca_crt_len",""],["mbedtls_test_ca_crt_rsa",""],["mbedtls_test_ca_crt_rsa_len",""],["mbedtls_test_ca_crt_rsa_sha1",""],["mbedtls_test_ca_crt_rsa_sha1_der",""],["mbedtls_test_ca_crt_rsa_sha1_der_len",""],["mbedtls_test_ca_crt_rsa_sha1_len",""],["mbedtls_test_ca_crt_rsa_sha1_pem",""],["mbedtls_test_ca_crt_rsa_sha1_pem_len",""],["mbedtls_test_ca_crt_rsa_sha256",""],["mbedtls_test_ca_crt_rsa_sha256_der",""],["mbedtls_test_ca_crt_rsa_sha256_der_len",""],["mbedtls_test_ca_crt_rsa_sha256_len",""],["mbedtls_test_ca_crt_rsa_sha256_pem",""],["mbedtls_test_ca_crt_rsa_sha256_pem_len",""],["mbedtls_test_ca_key",""],["mbedtls_test_ca_key_ec",""],["mbedtls_test_ca_key_ec_der",""],["mbedtls_test_ca_key_ec_der_len",""],["mbedtls_test_ca_key_ec_len",""],["mbedtls_test_ca_key_ec_pem",""],["mbedtls_test_ca_key_ec_pem_len",""],["mbedtls_test_ca_key_len",""],["mbedtls_test_ca_key_rsa",""],["mbedtls_test_ca_key_rsa_der",""],["mbedtls_test_ca_key_rsa_der_len",""],["mbedtls_test_ca_key_rsa_len",""],["mbedtls_test_ca_key_rsa_pem",""],["mbedtls_test_ca_key_rsa_pem_len",""],["mbedtls_test_ca_pwd",""],["mbedtls_test_ca_pwd_ec",""],["mbedtls_test_ca_pwd_ec_der_len",""],["mbedtls_test_ca_pwd_ec_len",""],["mbedtls_test_ca_pwd_ec_pem",""],["mbedtls_test_ca_pwd_ec_pem_len",""],["mbedtls_test_ca_pwd_len",""],["mbedtls_test_ca_pwd_rsa",""],["mbedtls_test_ca_pwd_rsa_der_len",""],["mbedtls_test_ca_pwd_rsa_len",""],["mbedtls_test_ca_pwd_rsa_pem",""],["mbedtls_test_ca_pwd_rsa_pem_len",""],["mbedtls_test_cas",""],["mbedtls_test_cas_der",""],["mbedtls_test_cas_der_len",""],["mbedtls_test_cas_len",""],["mbedtls_test_cas_pem",""],["mbedtls_test_cas_pem_len",""],["mbedtls_test_cli_crt",""],["mbedtls_test_cli_crt_ec",""],["mbedtls_test_cli_crt_ec_der",""],["mbedtls_test_cli_crt_ec_der_len",""],["mbedtls_test_cli_crt_ec_len",""],["mbedtls_test_cli_crt_ec_pem",""],["mbedtls_test_cli_crt_ec_pem_len",""],["mbedtls_test_cli_crt_len",""],["mbedtls_test_cli_crt_rsa",""],["mbedtls_test_cli_crt_rsa_der",""],["mbedtls_test_cli_crt_rsa_der_len",""],["mbedtls_test_cli_crt_rsa_len",""],["mbedtls_test_cli_crt_rsa_pem",""],["mbedtls_test_cli_crt_rsa_pem_len",""],["mbedtls_test_cli_key",""],["mbedtls_test_cli_key_ec",""],["mbedtls_test_cli_key_ec_der",""],["mbedtls_test_cli_key_ec_der_len",""],["mbedtls_test_cli_key_ec_len",""],["mbedtls_test_cli_key_ec_pem",""],["mbedtls_test_cli_key_ec_pem_len",""],["mbedtls_test_cli_key_len",""],["mbedtls_test_cli_key_rsa",""],["mbedtls_test_cli_key_rsa_der",""],["mbedtls_test_cli_key_rsa_der_len",""],["mbedtls_test_cli_key_rsa_len",""],["mbedtls_test_cli_key_rsa_pem",""],["mbedtls_test_cli_key_rsa_pem_len",""],["mbedtls_test_cli_pwd",""],["mbedtls_test_cli_pwd_ec",""],["mbedtls_test_cli_pwd_ec_len",""],["mbedtls_test_cli_pwd_ec_pem",""],["mbedtls_test_cli_pwd_ec_pem_len",""],["mbedtls_test_cli_pwd_len",""],["mbedtls_test_cli_pwd_rsa",""],["mbedtls_test_cli_pwd_rsa_len",""],["mbedtls_test_cli_pwd_rsa_pem",""],["mbedtls_test_cli_pwd_rsa_pem_len",""],["mbedtls_test_srv_crt",""],["mbedtls_test_srv_crt_ec",""],["mbedtls_test_srv_crt_ec_der",""],["mbedtls_test_srv_crt_ec_der_len",""],["mbedtls_test_srv_crt_ec_len",""],["mbedtls_test_srv_crt_ec_pem",""],["mbedtls_test_srv_crt_ec_pem_len",""],["mbedtls_test_srv_crt_len",""],["mbedtls_test_srv_crt_rsa",""],["mbedtls_test_srv_crt_rsa_len",""],["mbedtls_test_srv_crt_rsa_sha1",""],["mbedtls_test_srv_crt_rsa_sha1_der",""],["mbedtls_test_srv_crt_rsa_sha1_der_len",""],["mbedtls_test_srv_crt_rsa_sha1_len",""],["mbedtls_test_srv_crt_rsa_sha1_pem",""],["mbedtls_test_srv_crt_rsa_sha1_pem_len",""],["mbedtls_test_srv_crt_rsa_sha256",""],["mbedtls_test_srv_crt_rsa_sha256_der",""],["mbedtls_test_srv_crt_rsa_sha256_der_len",""],["mbedtls_test_srv_crt_rsa_sha256_len",""],["mbedtls_test_srv_crt_rsa_sha256_pem",""],["mbedtls_test_srv_crt_rsa_sha256_pem_len",""],["mbedtls_test_srv_key",""],["mbedtls_test_srv_key_ec",""],["mbedtls_test_srv_key_ec_der",""],["mbedtls_test_srv_key_ec_der_len",""],["mbedtls_test_srv_key_ec_len",""],["mbedtls_test_srv_key_ec_pem",""],["mbedtls_test_srv_key_ec_pem_len",""],["mbedtls_test_srv_key_len",""],["mbedtls_test_srv_key_rsa",""],["mbedtls_test_srv_key_rsa_der",""],["mbedtls_test_srv_key_rsa_der_len",""],["mbedtls_test_srv_key_rsa_len",""],["mbedtls_test_srv_key_rsa_pem",""],["mbedtls_test_srv_key_rsa_pem_len",""],["mbedtls_test_srv_pwd",""],["mbedtls_test_srv_pwd_ec",""],["mbedtls_test_srv_pwd_ec_der_len",""],["mbedtls_test_srv_pwd_ec_len",""],["mbedtls_test_srv_pwd_ec_pem",""],["mbedtls_test_srv_pwd_ec_pem_len",""],["mbedtls_test_srv_pwd_len",""],["mbedtls_test_srv_pwd_rsa",""],["mbedtls_test_srv_pwd_rsa_der_len",""],["mbedtls_test_srv_pwd_rsa_len",""],["mbedtls_test_srv_pwd_rsa_pem",""],["mbedtls_test_srv_pwd_rsa_pem_len",""],["mbedtls_x509_crt_profile_default","Default security profile. Should provide a good balance between security and compatibility with current deployments."],["mbedtls_x509_crt_profile_next","Expected next default profile. Recommended for new deployments. Currently targets a 128-bit security level, except for allowing RSA-2048."],["mbedtls_x509_crt_profile_suiteb","NSA Suite B profile."],["memp_pools",""],["netif_default","The default network interface."],["netif_list","The list of network interfaces."],["optarg",""],["opterr",""],["optind",""],["optopt",""],["optreset",""],["sigma_delta_periph_signals",""],["soc_memory_region_count",""],["soc_memory_regions",""],["soc_memory_type_count",""],["soc_memory_types",""],["spi_periph_signal",""],["suboptarg",""],["timer_group_periph_signals",""],["wifi_prov_scheme_ble","@brief   Scheme that can be used by manager for provisioning over BLE transport with GATT server"],["wifi_prov_scheme_softap","@brief   Scheme that can be used by manager for provisioning over SoftAP transport with HTTP server"]],"struct":[["DIR","@brief Opaque directory structure"],["ETSEventTag",""],["EspError",""],["FATFS",""],["FFOBJID",""],["FF_DIR",""],["FIL",""],["FILINFO",""],["PARTITION",""],["PatchesRef",""],["QueueDefinition","Type by which queues are referenced.  For example, a call to xQueueCreate() returns an QueueHandle_t variable that can then be used as a parameter to xQueueSend(), xQueueReceive(), etc."],["_Bigint",""],["_ETSTIMER_",""],["__BindgenBitfieldUnit",""],["__IncompleteArrayField",""],["__locale_t",""],["__lock",""],["__sFILE",""],["__sFILE_fake",""],["__sbuf",""],["__tm",""],["__tzinfo_struct",""],["__tzrule_struct",""],["_atexit",""],["_glue",""],["_ip_addr",""],["_mbstate_t",""],["_misc_reent",""],["_mprec",""],["_on_exit_args",""],["_pthread_cleanup_context",""],["_rand48",""],["_reent",""],["_types_fd_set",""],["adc_arbiter_t","@brief ADC arbiter work mode and priority setting."],["adc_digi_clk_t","@brief ADC digital controller (DMA mode) clock system setting. Calculation formula: controller_clk = (`APLL` or `APB`) / (div_num + div_a / div_b + 1)."],["adc_digi_config_t","@brief ADC digital controller (DMA mode) configuration parameters."],["adc_digi_filter_t","@brief ADC digital controller (DMA mode) filter configuration."],["adc_digi_init_config_s","@brief Digital ADC DMA configuration"],["adc_digi_monitor_t","@brief ADC digital controller (DMA mode) monitor configuration."],["adc_digi_output_data_t","@brief ADC digital controller (DMA mode) output data format. Used to analyze the acquired ADC (DMA) data."],["adc_digi_output_data_t__bindgen_ty_1__bindgen_ty_1",""],["adc_digi_pattern_table_t","@brief ADC digital controller (DMA mode) conversion rules setting."],["adc_digi_pattern_table_t__bindgen_ty_1__bindgen_ty_1",""],["arg_date",""],["arg_dbl",""],["arg_end",""],["arg_file",""],["arg_hdr",""],["arg_int",""],["arg_key",""],["arg_lit",""],["arg_rem",""],["arg_rex",""],["arg_str",""],["bintime",""],["cmsghdr",""],["crypto_cipher",""],["crypto_hash",""],["dhcps_lease_t",""],["dhcps_msg",""],["dhcps_options_t",""],["dhcps_pool",""],["dhcps_state",""],["dirent","@brief Directory entry structure"],["div_t",""],["eflock",""],["esp_adc_cal_characteristics_t","@brief Structure storing characteristics of an ADC"],["esp_aes_context","\\brief          AES context structure"],["esp_aes_xts_context","\\brief The AES XTS context-type definition."],["esp_app_desc_t","@brief Description about application."],["esp_backtrace_frame_t",""],["esp_chip_info_t","@brief The structure represents information about the chip"],["esp_console_cmd_t","@brief Console command description"],["esp_console_config_t","@brief Parameters for console initialization"],["esp_console_dev_uart_config_t","@brief Parameters for console device: UART"],["esp_console_dev_usb_cdc_config_t","@brief Parameters for console device: USB CDC"],["esp_console_repl_config_t","@brief Parameters for console REPL (Read Eval Print Loop)"],["esp_console_repl_s","@brief Console REPL base structure"],["esp_efuse_desc_t","@brief Type definition for an eFuse field"],["esp_eth_config_t","@brief Configuration of Ethernet driver"],["esp_eth_mac_s","@brief Ethernet MAC"],["esp_eth_mediator_s","@brief Ethernet mediator"],["esp_eth_phy_s","@brief Ethernet PHY"],["esp_event_loop_args_t","Configuration for creating event loops"],["esp_flash_os_functions_t","@brief OS-level integration hooks for accessing flash chips inside a running OS"],["esp_flash_region_t","@brief Structure for describing a region of flash"],["esp_flash_t","@brief Structure to describe a SPI flash chip connected to the system."],["esp_http_client",""],["esp_http_client_config_t","@brief HTTP configuration"],["esp_http_client_event","@brief      HTTP Client events data"],["esp_image_flash_mapping_t",""],["esp_image_header_t","@brief Main header of binary image"],["esp_image_metadata_t",""],["esp_image_segment_header_t","@brief Header of binary image segment"],["esp_ip4_addr",""],["esp_ip6_addr",""],["esp_mqtt_client",""],["esp_mqtt_client_config_t","MQTT client configuration structure"],["esp_mqtt_error_codes","@brief MQTT error code structure to be passed as a contextual information into ERROR event"],["esp_mqtt_event_t","MQTT event configuration structure"],["esp_netif_config","@brief  Generic esp_netif configuration"],["esp_netif_dns_info_t","@brief DNS server info"],["esp_netif_driver_base_s",""],["esp_netif_driver_ifconfig","@brief  Specific IO driver configuration"],["esp_netif_inherent_config",""],["esp_netif_ip6_info_t","@brief IPV6 IP address information"],["esp_netif_ip_info_t","Event structure for IP_EVENT_STA_GOT_IP, IP_EVENT_ETH_GOT_IP events"],["esp_netif_netstack_config",""],["esp_netif_obj","@brief Type of esp_netif_object server"],["esp_netif_sta_info_t","@brief station list info element"],["esp_netif_sta_list_t","@brief station list structure"],["esp_now_peer_info","@brief ESPNOW peer information parameters."],["esp_now_peer_num","@brief Number of ESPNOW peers which exist currently."],["esp_ota_select_entry_t",""],["esp_partition_info_t",""],["esp_partition_iterator_opaque_",""],["esp_partition_pos_t",""],["esp_partition_t","@brief partition information structure"],["esp_ping_callbacks_t","@brief Type of “ping” callback functions"],["esp_ping_config_t","@brief Type of “ping” configuration"],["esp_pm_config_esp32c3_t","@brief Power management config for ESP32C3"],["esp_pm_lock",""],["esp_pthread_cfg_t","pthread configuration structure that influences pthread creation"],["esp_timer",""],["esp_timer_create_args_t","@brief Timer configuration passed to esp_timer_create"],["esp_tls","@brief      ESP-TLS Connection Handle"],["esp_tls_cfg","@brief      ESP-TLS configuration parameters"],["esp_tls_last_error","@brief Error structure containing relevant errors in case tls error occurred"],["esp_vfs_fat_mount_config_t","@brief Configuration arguments for esp_vfs_fat_sdmmc_mount and esp_vfs_fat_spiflash_mount functions"],["esp_vfs_select_sem_t","@brief VFS semaphore type for select()"],["esp_vfs_spiffs_conf_t","@brief Configuration structure for esp_vfs_spiffs_register"],["esp_vfs_t","@brief VFS definition structure"],["essl_dev_t",""],["essl_sdio_config_t","Configuration for the essl SDIO device"],["eth_mac_config_t","@brief Configuration of Ethernet MAC object"],["eth_phy_config_t","@brief Ethernet PHY configuration"],["ff_diskio_impl_t","Structure of pointers to disk IO driver functions."],["flock",""],["gpio_config_t","@brief Configuration parameters of GPIO pad for gpio_config function"],["gpio_dev_s",""],["gpio_dev_s__bindgen_ty_10__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_11__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_12__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_13__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_14__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_15__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_16__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_17__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_18__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_19__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_1__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_20__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_21__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_2__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_3__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_4__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_5__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_6__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_7__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_8__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_9__bindgen_ty_1",""],["gpio_sd_dev_s",""],["gpio_sd_dev_s__bindgen_ty_1__bindgen_ty_1",""],["gpio_sd_dev_s__bindgen_ty_2__bindgen_ty_1",""],["gpio_sd_dev_s__bindgen_ty_3__bindgen_ty_1",""],["gpio_sd_dev_s__bindgen_ty_4__bindgen_ty_1",""],["http_parser",""],["http_parser_settings",""],["http_parser_url",""],["http_parser_url__bindgen_ty_1",""],["httpd_config","@brief   HTTP Server Configuration Structure"],["httpd_req","@brief HTTP Request Data Structure"],["httpd_uri","@brief Structure for URI handler"],["i2c_config_t","@brief I2C initialization parameters"],["i2c_config_t__bindgen_ty_1__bindgen_ty_1",""],["i2c_config_t__bindgen_ty_1__bindgen_ty_2",""],["i2s_config_t","@brief I2S configuration parameters for i2s_param_config function"],["i2s_dev_s",""],["i2s_dev_s__bindgen_ty_10__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_11__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_12__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_13__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_14__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_15__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_16__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_17__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_18__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_19__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_1__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_20__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_21__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_22__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_2__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_3__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_4__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_5__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_6__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_7__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_8__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_9__bindgen_ty_1",""],["i2s_event_t","@brief Event structure used in I2S event queue"],["i2s_hal_context_t","Context that should be maintained by both the driver and the HAL"],["i2s_pin_config_t","@brief I2S pin number for i2s_set_pin"],["i2s_signal_conn_t",""],["ifreq",""],["imaxdiv_t",""],["in6_addr",""],["in_addr",""],["in_pktinfo",""],["intr_handle_data_t",""],["iovec",""],["ip4_addr","This is the aligned version of ip4_addr_t, used as local variable, on the stack, etc."],["ip6_addr","This is the aligned version of ip6_addr_t, used as local variable, on the stack, etc."],["ip_addr","@ingroup ipaddr A union struct for both IP version’s addresses. ATTENTION: watch out for its size when adding IPv6 address scope!"],["ip_event_ap_staipassigned_t","Event structure for IP_EVENT_AP_STAIPASSIGNED event"],["ip_event_got_ip6_t","Event structure for IP_EVENT_GOT_IP6 event"],["ip_event_got_ip_t",""],["ip_mreq",""],["ipv6_mreq",""],["itimerspec",""],["itimerval",""],["ldiv_t",""],["ledc_channel_config_t","@brief Configuration parameters of LEDC channel for ledc_channel_config function"],["ledc_timer_config_t","@brief Configuration parameters of LEDC Timer timer for ledc_timer_config function"],["linenoiseCompletions",""],["linger",""],["lldesc_chain_s",""],["lldesc_s",""],["lldesc_s__bindgen_ty_1__bindgen_ty_1",""],["lldiv_t",""],["max_align_t",""],["mbedtls_asn1_bitstring","Container for ASN1 bit strings."],["mbedtls_asn1_buf","Type-length-value structure that allows for ASN1 using DER."],["mbedtls_asn1_named_data","Container for a sequence or list of ‘named’ ASN.1 data items"],["mbedtls_asn1_sequence","Container for a sequence of ASN.1 items"],["mbedtls_cipher_base_t",""],["mbedtls_cipher_context_t","Generic cipher context."],["mbedtls_cipher_info_t","Cipher information. Allows calling cipher functions in a generic way."],["mbedtls_cmac_context_t",""],["mbedtls_ctr_drbg_context","\\brief          The CTR_DRBG context structure."],["mbedtls_dhm_context","\\brief          The DHM context structure."],["mbedtls_ecdh_context","\\warning         Performing multiple operations concurrently on the same ECDSA context is not supported; objects of this type should not be shared between multiple threads. \\brief           The ECDH context structure."],["mbedtls_ecp_curve_info","Curve information, for use by other modules."],["mbedtls_ecp_group","\\brief           The ECP group structure."],["mbedtls_ecp_keypair","\\brief    The ECP key-pair structure."],["mbedtls_ecp_point","\\brief           The ECP point structure, in Jacobian coordinates."],["mbedtls_entropy_context","\\brief           Entropy context structure"],["mbedtls_entropy_source_state","\\brief           Entropy source state"],["mbedtls_md_context_t","The generic message-digest context."],["mbedtls_md_info_t",""],["mbedtls_mpi","\\brief          MPI structure"],["mbedtls_net_context","Wrapper type for sockets."],["mbedtls_pk_context","\\brief           Public key container"],["mbedtls_pk_debug_item","\\brief           Item to send to the debug module"],["mbedtls_pk_info_t",""],["mbedtls_pk_rsassa_pss_options","\\brief           Options for RSASSA-PSS signature verification. See \\c mbedtls_rsa_rsassa_pss_verify_ext()"],["mbedtls_platform_context","\\brief   The platform context structure."],["mbedtls_rsa_context","\\brief   The RSA context structure."],["mbedtls_sha512_context","\\brief          The SHA-512 context structure."],["mbedtls_ssl_ciphersuite_t","\\brief   This structure is used for storing ciphersuite information"],["mbedtls_ssl_config","SSL/TLS configuration to be shared between mbedtls_ssl_context structures."],["mbedtls_ssl_context",""],["mbedtls_ssl_handshake_params",""],["mbedtls_ssl_key_cert",""],["mbedtls_ssl_session",""],["mbedtls_ssl_sig_hash_set_t",""],["mbedtls_ssl_transform",""],["mbedtls_x509_crl","Certificate revocation list structure. Every CRL may have multiple entries."],["mbedtls_x509_crl_entry","Certificate revocation list entry. Contains the CA-specific serial numbers and revocation dates."],["mbedtls_x509_crt","Container for an X.509 certificate. The certificate may be chained."],["mbedtls_x509_crt_profile","Security profile for certificate verification."],["mbedtls_x509_crt_verify_chain","Verification chain as built by \\c mbedtls_crt_verify_chain()"],["mbedtls_x509_crt_verify_chain_item","Item in a verification chain: cert and flags for it"],["mbedtls_x509_time","Container for date and time (precision in seconds)."],["mbedtls_x509write_cert","Container for writing a certificate (CRT)"],["mdns_ip_addr_s","@brief   mDNS query linked list IP item"],["mdns_result_s","@brief   mDNS query result structure"],["mdns_txt_item_t","@brief   mDNS basic text item structure Used in mdns_service_add()"],["memp_desc","Memory pool descriptor"],["mesh_crypto_funcs_t","@brief The crypto callback function structure used in mesh vendor IE encryption. The structure can be set as software crypto or the crypto optimized by ESP32 hardware."],["msghdr",""],["multi_heap_info",""],["multi_heap_info_t","@brief Structure to access heap metadata via multi_heap_get_info"],["name_uuid","@brief   This structure maps handler required by protocomm layer to UUIDs which are used to uniquely identify BLE characteristics from a smartphone or a similar client device."],["netif","Generic data structure used for all lwIP network interfaces. The following fields should be filled in by the initialization function for the device driver: hwaddr_len, hwaddr[], mtu, flags"],["netif_ext_callback_args_t_ipv4_changed_s","Args to LWIP_NSC_IPV4_ADDRESS_CHANGED|LWIP_NSC_IPV4_GATEWAY_CHANGED|LWIP_NSC_IPV4_NETMASK_CHANGED|LWIP_NSC_IPV4_SETTINGS_CHANGED callback"],["netif_ext_callback_args_t_ipv6_addr_state_changed_s","Args to LWIP_NSC_IPV6_ADDR_STATE_CHANGED callback"],["netif_ext_callback_args_t_ipv6_set_s","Args to LWIP_NSC_IPV6_SET callback"],["netif_ext_callback_args_t_link_changed_s","Args to LWIP_NSC_LINK_CHANGED callback"],["netif_ext_callback_args_t_status_changed_s","Args to LWIP_NSC_STATUS_CHANGED callback"],["nvs_entry_info_t","@brief information about entry obtained from nvs_entry_info function"],["nvs_opaque_iterator_t",""],["nvs_sec_cfg_t","@brief Key for encryption and decryption"],["nvs_stats_t","@note Info about storage space NVS."],["panic_info_t",""],["pbuf","Main packet buffer struct"],["pbuf_custom","A custom pbuf: like a pbuf, but following a function pointer to free it."],["pbuf_rom","Helper struct for const-correctness only. The only meaning of this one is to provide a const payload pointer for PBUF_ROM type."],["pollfd",""],["portMUX_TYPE",""],["protocomm",""],["protocomm_ble_config","@brief   Config parameters for protocomm BLE service"],["protocomm_http_server_config_t","@brief   Config parameters for protocomm HTTP server"],["protocomm_httpd_config_t","@brief   Config parameters for protocomm HTTP server"],["protocomm_security","@brief   Protocomm security object structure."],["protocomm_security_pop","@brief   Proof Of Possession for authenticating a secure session"],["psk_key_hint","@brief ESP-TLS preshared key and hint structure"],["pthread_attr_t",""],["pthread_condattr_t",""],["pthread_mutexattr_t",""],["pthread_once_t",""],["rmt_channel_status_result_t","@brief Data struct of RMT channel status"],["rmt_config_t","@brief Data struct of RMT configure parameters"],["rmt_dev_s",""],["rmt_dev_s__bindgen_ty_10__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_11__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_12__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_13__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_14__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_15__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_16__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_1__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_2",""],["rmt_dev_s__bindgen_ty_2__bindgen_ty_1__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_2__bindgen_ty_2__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_3__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_4__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_5__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_6__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_7__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_8__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_9__bindgen_ty_1",""],["rmt_item32_t",""],["rmt_item32_t__bindgen_ty_1__bindgen_ty_1",""],["rmt_mem_s",""],["rmt_mem_s__bindgen_ty_1",""],["rmt_rx_config_t","@brief Data struct of RMT RX configure parameters"],["rmt_tx_config_t","@brief Data struct of RMT TX configure parameters"],["rmt_tx_end_callback_t","@brief Structure encapsulating a RMT TX end callback"],["rtc_clk_config_t","Initialization parameters for rtc_clk_init"],["rtc_cntl_dev_s",""],["rtc_cntl_dev_s__bindgen_ty_10__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_11__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_12__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_13__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_14__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_15__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_16__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_17__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_18__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_19__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_1__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_20__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_21__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_22__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_23__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_24__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_25__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_26__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_27__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_28__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_29__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_2__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_30__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_31__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_32__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_33__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_34__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_35__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_36__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_37__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_38__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_39__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_3__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_40__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_41__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_42__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_43__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_44__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_45__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_46__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_47__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_48__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_49__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_4__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_50__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_51__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_52__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_53__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_54__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_55__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_5__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_6__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_7__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_8__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_9__bindgen_ty_1",""],["rtc_config_t","RTC power and clock control initialization settings"],["rtc_cpu_freq_config_s","@brief CPU clock configuration structure"],["rtc_init_config_t",""],["rtc_retain_mem_t",""],["rtc_sleep_config_t","@brief sleep configuration for rtc_sleep_init function"],["rtc_sleep_pu_config_t","@brief Power down flags for rtc_sleep_pd function"],["rtc_vddsdio_config_t","Structure describing vddsdio configuration"],["sched_param",""],["sdmmc_card_t","SD/MMC card information structure"],["sdmmc_cid_t","Decoded values from SD card Card IDentification register"],["sdmmc_command_t","SD/MMC command information"],["sdmmc_csd_t","Decoded values from SD card Card Specific Data register"],["sdmmc_ext_csd_t","Decoded values of Extended Card Specific Data"],["sdmmc_host_t","SD/MMC Host description"],["sdmmc_scr_t","Decoded values from SD Configuration Register"],["sdmmc_switch_func_rsp_t","SD SWITCH_FUNC response buffer"],["sdspi_device_config_t","Extra configuration for SD SPI device."],["sdspi_slot_config_t","Extra configuration for SPI host."],["sigaction",""],["sigaltstack",""],["sigevent",""],["siginfo_t",""],["sigma_delta_signal_conn_t",""],["sigma_delta_signal_conn_t__bindgen_ty_1",""],["sigmadelta_config_t","@brief Sigma-delta configure struct"],["soc_memory_region_t",""],["soc_memory_type_desc_t",""],["soc_reserved_region_t",""],["sockaddr",""],["sockaddr_in",""],["sockaddr_in6",""],["sockaddr_storage",""],["spi_bus_config_t","@brief This is a configuration structure for a SPI bus."],["spi_dev_s",""],["spi_dev_s__bindgen_ty_10__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_11__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_12__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_13__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_14__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_15__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_16__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_17__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_18__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_19__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_1__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_20__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_2__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_3__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_4__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_5__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_6__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_7__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_8__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_9__bindgen_ty_1",""],["spi_device_interface_config_t","@brief This is a configuration for a SPI slave device that is connected to one of the SPI buses."],["spi_device_t",""],["spi_flash_chip_t",""],["spi_flash_guard_funcs_t","Structure holding SPI flash access critical sections management functions."],["spi_flash_host_driver_s","Host driver configuration and context structure."],["spi_flash_host_inst_t","SPI Flash Host driver instance"],["spi_flash_sus_cmd_conf","Configuration structure for the flash chip suspend feature."],["spi_flash_sus_cmd_conf__bindgen_ty_1",""],["spi_flash_trans_t","Definition of a common transaction. Also holds the return value."],["spi_mem_dev_s",""],["spi_mem_dev_s__bindgen_ty_10__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_11__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_12__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_13__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_14__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_15__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_16__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_17__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_18__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_19__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_1__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_20__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_21__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_22__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_23__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_24__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_25__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_26__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_27__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_28__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_29__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_2__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_3__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_4__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_5__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_6__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_7__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_8__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_9__bindgen_ty_1",""],["spi_signal_conn_t",""],["spi_slave_interface_config_t","@brief This is a configuration for a SPI host acting as a slave device."],["spi_slave_transaction_t","This structure describes one SPI transaction"],["spi_transaction_ext_t","This struct is for SPI transactions which may change their address and command length. Please do set the flags in base to `SPI_TRANS_VARIABLE_CMD_ADR` to use the bit length here."],["spi_transaction_t","This structure describes one SPI transaction. The descriptor should not be modified until the transaction finishes."],["spinlock_t",""],["stat",""],["sys_mbox_s",""],["system_event_t","Event, as a tagged enum"],["tcpip_adapter_ip_info_t","@brief legacy ip_info type"],["termios",""],["timer_config_t","@brief Data structure with timer’s configuration settings"],["timer_group_signal_conn_t",""],["timer_group_signal_conn_t__bindgen_ty_1",""],["timespec",""],["timeval",""],["timezone",""],["timg_dev_s",""],["timg_dev_s__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_10__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_11__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_12__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_2__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_3__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_4__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_5__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_2__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_3__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_4__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_5__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_6__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_7__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_8__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_9__bindgen_ty_1",""],["tls_keep_alive_cfg","@brief Keep alive parameters structure"],["tm",""],["tms",""],["touch_filter_config","Touch sensor filter configuration"],["touch_pad_denoise","Touch sensor denoise configuration"],["touch_pad_sleep_channel_t","Touch sensor channel sleep configuration"],["touch_pad_waterproof","Touch sensor waterproof configuration"],["tskTaskControlBlock","Type by which tasks are referenced.  For example, a call to xTaskCreate returns (via a pointer parameter) an TaskHandle_t variable that can then be used as a parameter to vTaskDelete to delete the task."],["twai_filter_config_t","@brief   Structure for acceptance filter configuration of the TWAI driver (see documentation)"],["twai_general_config_t","@brief   Structure for general configuration of the TWAI driver"],["twai_message_t","@brief   Structure to store a TWAI message"],["twai_message_t__bindgen_ty_1__bindgen_ty_1",""],["twai_status_info_t","@brief   Structure to store status information of TWAI driver"],["twai_timing_config_t","@brief   Structure for bit timing configuration of the TWAI driver"],["tx_ampdu_entry_s",""],["uart_at_cmd_t","@brief UART AT cmd char configuration parameters Note that this function may different on different chip. Please refer to the TRM at confirguration."],["uart_config_t","@brief UART configuration parameters for uart_param_config function"],["uart_event_t","@brief Event structure used in UART event queue"],["uart_intr_config_t","@brief UART interrupt configuration parameters for uart_intr_config function"],["uart_sw_flowctrl_t","@brief UART software flow control configuration parameters"],["udp_pcb",""],["utimbuf",""],["vendor_ie_data_t","@brief Vendor Information Element header"],["wifi_action_tx_req_t","@brief Action Frame Tx Request"],["wifi_active_scan_time_t","@brief Range of active scan times per channel"],["wifi_ant_config_t","@brief WiFi antenna configuration"],["wifi_ant_gpio_config_t","@brief WiFi GPIOs configuration for antenna selection"],["wifi_ant_gpio_t","@brief WiFi GPIO configuration for antenna selection"],["wifi_ap_config_t","@brief Soft-AP configuration settings for the ESP32"],["wifi_ap_record_t","@brief Description of a WiFi AP"],["wifi_country_t","@brief Structure describing WiFi country-based regional restrictions."],["wifi_csi_config_t","@brief Channel state information(CSI) configuration type"],["wifi_csi_info_t","@brief CSI data type"],["wifi_event_action_tx_status_t","Argument structure for WIFI_EVENT_ACTION_TX_STATUS event"],["wifi_event_ap_probe_req_rx_t","Argument structure for WIFI_EVENT_AP_PROBEREQRECVED event"],["wifi_event_ap_staconnected_t","Argument structure for WIFI_EVENT_AP_STACONNECTED event"],["wifi_event_ap_stadisconnected_t","Argument structure for WIFI_EVENT_AP_STADISCONNECTED event"],["wifi_event_bss_rssi_low_t","Argument structure for WIFI_EVENT_STA_BSS_RSSI_LOW event"],["wifi_event_ftm_report_t","Argument structure for WIFI_EVENT_FTM_REPORT event"],["wifi_event_roc_done_t","Argument structure for WIFI_EVENT_ROC_DONE event"],["wifi_event_sta_authmode_change_t","Argument structure for WIFI_EVENT_STA_AUTHMODE_CHANGE event"],["wifi_event_sta_connected_t","Argument structure for WIFI_EVENT_STA_CONNECTED event"],["wifi_event_sta_disconnected_t","Argument structure for WIFI_EVENT_STA_DISCONNECTED event"],["wifi_event_sta_scan_done_t","Argument structure for WIFI_EVENT_SCAN_DONE event"],["wifi_event_sta_wps_er_pin_t","Argument structure for WIFI_EVENT_STA_WPS_ER_PIN event"],["wifi_event_sta_wps_er_success_t","Argument structure for WIFI_EVENT_STA_WPS_ER_SUCCESS event"],["wifi_event_sta_wps_er_success_t__bindgen_ty_1",""],["wifi_ftm_initiator_cfg_t","@brief FTM Initiator configuration"],["wifi_ftm_report_entry_t","Argument structure for"],["wifi_init_config_t","@brief WiFi stack configuration parameters passed to esp_wifi_init call."],["wifi_netif_driver",""],["wifi_osi_funcs_t",""],["wifi_pkt_rx_ctrl_t","@brief Received packet radio metadata header, this is the common header at the beginning of all promiscuous mode RX callback buffers"],["wifi_pmf_config_t","Configuration structure for Protected Management Frame"],["wifi_promiscuous_filter_t","@brief Mask for filtering different packet types in promiscuous mode."],["wifi_promiscuous_pkt_t","@brief Payload passed to ‘buf’ parameter of promiscuous mode RX callback."],["wifi_prov_config_get_data_t","@brief   WiFi status data to be sent in response to `get_status` request from master"],["wifi_prov_config_handlers","@brief   Internal handlers for receiving and responding to protocomm requests from master"],["wifi_prov_config_set_data_t","@brief   WiFi config data received by slave during `set_config` request from master"],["wifi_prov_ctx",""],["wifi_prov_event_handler_t","@brief   Event handler that is used by the manager while provisioning service is active"],["wifi_prov_mgr_config_t","@brief   Structure for specifying the manager configuration"],["wifi_prov_scheme","@brief   Structure for specifying the provisioning scheme to be followed by the manager"],["wifi_prov_sta_conn_info_t","@brief   WiFi STA connected status information"],["wifi_scan_config_t","@brief Parameters for an SSID scan."],["wifi_scan_threshold_t","@brief Structure describing parameters for a WiFi fast scan"],["wifi_scan_time_t","@brief Aggregate of active & passive scan time per channel"],["wifi_sta_config_t","@brief STA configuration settings for the ESP32"],["wifi_sta_info_t","@brief Description of STA associated with AP"],["wifi_sta_list_t","@brief List of stations associated with the ESP32 Soft-AP"],["wpa_crypto_funcs_t","@brief The crypto callback function structure used when do station security connect. The structure can be set as software crypto or the crypto optimized by ESP32 hardware."],["x32k_config_t",""],["xLIST",""],["xLIST_ITEM",""],["xMEMORY_REGION","Defines the memory ranges allocated to the task when an MPU is used."],["xMINI_LIST_ITEM",""],["xSTATIC_EVENT_GROUP",""],["xSTATIC_LIST",""],["xSTATIC_LIST_ITEM",""],["xSTATIC_MINI_LIST_ITEM",""],["xSTATIC_QUEUE",""],["xSTATIC_RINGBUFFER",""],["xSTATIC_STREAM_BUFFER",""],["xSTATIC_TCB",""],["xSTATIC_TIMER",""],["xTASK_PARAMETERS",""],["xTASK_SNAPSHOT","Used with the uxTaskGetSnapshotAll() function to save memory snapshot of each task in the system. We need this struct because TCB_t is defined (hidden) in tasks.c."],["xTASK_STATUS",""],["xTIME_OUT","@cond */ Used internally only."]],"type":[["BYTE",""],["BaseType_t",""],["DRESULT",""],["DSTATUS",""],["DWORD",""],["ETSEvent",""],["ETSParam",""],["ETSSignal",""],["ETSTask",""],["ETSTimer",""],["ETSTimerFunc","@addtogroup ets_timer_apis @{"],["ETS_STATUS","@addtogroup ets_apis @{"],["FILE",""],["FRESULT",""],["FSIZE_t",""],["GPIO_INT_TYPE",""],["HttpStatus_Code","Enum for the HTTP status codes."],["ListItem_t",""],["List_t",""],["MemoryRegion_t","Defines the memory ranges allocated to the task when an MPU is used."],["MiniListItem_t",""],["QWORD",""],["QueueHandle_t",""],["QueueSetHandle_t","Type by which queue sets are referenced.  For example, a call to xQueueCreateSet() returns an xQueueSet variable that can then be used as a parameter to xQueueSelectFromSet(), xQueueAddToSet(), etc."],["QueueSetMemberHandle_t","Queue sets can contain both queues and semaphores, so the QueueSetMemberHandle_t is defined as a type to be used where a parameter or return value can be either an QueueHandle_t or an SemaphoreHandle_t."],["RingbufHandle_t","Type by which ring buffers are referenced. For example, a call to xRingbufferCreate() returns a RingbufHandle_t variable that can then be used as a parameter to xRingbufferSend(), xRingbufferReceive(), etc."],["RingbufferType_t",""],["STATUS",""],["SemaphoreHandle_t",""],["StackType_t",""],["StaticEventGroup_t",""],["StaticListItem_t",""],["StaticList_t",""],["StaticMessageBuffer_t",""],["StaticMiniListItem_t",""],["StaticQueue_t",""],["StaticRingbuffer_t",""],["StaticSemaphore_t",""],["StaticStreamBuffer_t",""],["StaticTask_t",""],["StaticTimer_t",""],["TCHAR",""],["TaskFunction_t",""],["TaskHandle_t",""],["TaskHookFunction_t","Defines the prototype to which the application task hook function must conform."],["TaskParameters_t",""],["TaskSnapshot_t","Used with the uxTaskGetSnapshotAll() function to save memory snapshot of each task in the system. We need this struct because TCB_t is defined (hidden) in tasks.c."],["TaskStatus_t",""],["TickType_t",""],["TimeOut_t","@cond */ Used internally only."],["TlsDeleteCallbackFunction_t","Prototype of local storage pointer deletion callback."],["UBaseType_t",""],["UINT",""],["WCHAR",""],["WORD",""],["_LOCK_T",""],["__FILE",""],["__ULong",""],["__blkcnt_t",""],["__blksize_t",""],["__builtin_va_list",""],["__clock_t",""],["__clockid_t",""],["__compar_fn_t",""],["__dev_t",""],["__fsblkcnt_t",""],["__fsfilcnt_t",""],["__gid_t",""],["__gnuc_va_list",""],["__id_t",""],["__ino_t",""],["__int16_t",""],["__int32_t",""],["__int64_t",""],["__int8_t",""],["__int_least16_t",""],["__int_least32_t",""],["__int_least64_t",""],["__int_least8_t",""],["__intmax_t",""],["__intptr_t",""],["__key_t",""],["__loff_t",""],["__mode_t",""],["__nl_item",""],["__nlink_t",""],["__off_t",""],["__pid_t",""],["__sa_family_t",""],["__sigset_t",""],["__size_t",""],["__socklen_t",""],["__ssize_t",""],["__suseconds_t",""],["__time_t",""],["__timer_t",""],["__tzinfo_type",""],["__tzrule_type",""],["__uid_t",""],["__uint16_t",""],["__uint32_t",""],["__uint64_t",""],["__uint8_t",""],["__uint_least16_t",""],["__uint_least32_t",""],["__uint_least64_t",""],["__uint_least8_t",""],["__uintmax_t",""],["__uintptr_t",""],["__useconds_t",""],["__va_list",""],["_bindgen_ty_1",""],["_bindgen_ty_2",""],["_bindgen_ty_3",""],["_bindgen_ty_4",""],["_flock_t",""],["_fpos_t",""],["_iconv_t",""],["_lock_t",""],["_off64_t",""],["_off_t",""],["_sig_func_ptr",""],["_ssize_t",""],["adc1_channel_t","`adc1_channel_t` will be deprecated functions, combine into `adc_channel_t`"],["adc2_channel_t","`adc2_channel_t` will be deprecated functions, combine into `adc_channel_t`"],["adc_arbiter_mode_t","@brief ADC arbiter work mode option."],["adc_atten_t","@brief ADC attenuation parameter. Different parameters determine the range of the ADC. See `adc1_config_channel_atten`."],["adc_bits_width_t","@brief ADC resolution setting option."],["adc_channel_t","@brief ADC channels handle. See `adc1_channel_t`, `adc2_channel_t`."],["adc_digi_convert_mode_t","@brief ADC digital controller (DMA mode) work mode."],["adc_digi_filter_idx_t","@brief ADC digital controller (DMA mode) filter index options."],["adc_digi_filter_mode_t","@brief ADC digital controller (DMA mode) filter type options. Expression: filter_data = (k-1)/k * last_data + new_data / k."],["adc_digi_init_config_t","@brief Digital ADC DMA configuration"],["adc_digi_monitor_idx_t","@brief ADC digital controller (DMA mode) monitor index options."],["adc_digi_monitor_mode_t","@brief Set monitor mode of adc digital controller. MONITOR_HIGH:If ADC_OUT >  threshold, Generates monitor interrupt. MONITOR_LOW: If ADC_OUT <  threshold, Generates monitor interrupt."],["adc_digi_output_format_t","@brief ADC digital controller (DMA mode) output data format option."],["adc_i2s_encode_t","@brief ADC digital controller encode option."],["adc_i2s_source_t",""],["adc_unit_t","@brief ADC unit enumeration."],["arg_checkfn",""],["arg_errorfn",""],["arg_resetfn",""],["arg_scanfn",""],["blkcnt_t",""],["blksize_t",""],["caddr_t",""],["cc_t","Restart output."],["clock_t",""],["clockid_t",""],["daddr_t",""],["dev_t",""],["dhcp_event_fn",""],["dhcps_cb_t",""],["dhcps_offer_option",""],["dhcps_offer_t",""],["dhcps_time_t",""],["eNotifyAction",""],["eSleepModeStatus","Possible return values for eTaskConfirmSleepModeStatus()."],["eTaskState","Task states returned by eTaskGetState."],["err_enum_t","Definitions for error constants."],["err_t",""],["error_t",""],["esp_adc_cal_value_t","@brief Type of calibration value used in characterization"],["esp_aes_128_decrypt_t","@brief The AES callback function when do WPS connect."],["esp_aes_128_encrypt_t","@brief The AES callback function when do WPS connect."],["esp_aes_decrypt_deinit_t","@brief Deinitialize AES decryption"],["esp_aes_decrypt_init_t","@brief Initialize AES for decryption"],["esp_aes_decrypt_t","@brief Decrypt one AES block"],["esp_aes_encrypt_deinit_t","@brief Deinitialize AES encryption"],["esp_aes_encrypt_init_t","@brief Initialize AES for encryption"],["esp_aes_encrypt_t","@brief Encrypt one AES block"],["esp_aes_mode_t",""],["esp_aes_unwrap_t","@brief The AES callback function when do STA connect."],["esp_aes_wrap_t","@brief The AES callback function when do STA connect."],["esp_alloc_failed_hook_t","@brief callback called when a allocation operation fails, if registered @param size in bytes of failed allocation @param caps capabillites requested of failed allocation @param function_name function which generated the failure"],["esp_ccmp_decrypt_t","@brief Decrypt data using CCMP (Counter Mode CBC-MAC Protocol OR Counter Mode Cipher Block Chaining Message Authentication Code Protocol) which is used in IEEE 802.11i RSN standard. @tk: 128-bit Temporal Key for obtained during 4-way handshake @hdr: Pointer to IEEE802.11 frame headeri needed for AAD @data: Pointer to encrypted data buffer @data_len: Encrypted data length in bytes @decrypted_len: Length of decrypted data @espnow_pkt: Indicates if it’s an ESPNOW packet Returns: Pointer to decrypted data on success, NULL on failure"],["esp_ccmp_encrypt_t","@brief Encrypt data using CCMP (Counter Mode CBC-MAC Protocol OR Counter Mode Cipher Block Chaining Message Authentication Code Protocol) which is used in IEEE 802.11i RSN standard. @tk: 128-bit Temporal Key for obtained during 4-way handshake @frame: Pointer to IEEE802.11 frame including header @len: Length of the frame including header @hdrlen: Length of the header @pn: Packet Number counter @keyid: Key ID to be mentioned in CCMP Vector @encrypted_len: Length of the encrypted frame including header"],["esp_chip_id_t","@brief ESP chip ID"],["esp_chip_model_t","@brief Chip models"],["esp_console_cmd_func_t","@brief Console command main function @param argc number of arguments @param argv array with argc entries, each pointing to a zero-terminated string argument @return console command return code, 0 indicates “success”"],["esp_console_repl_t","@brief Console REPL base structure"],["esp_cpu_ccount_t",""],["esp_crypto_cipher_alg_t",""],["esp_crypto_cipher_t",""],["esp_crypto_hash_alg_t",""],["esp_crypto_hash_t",""],["esp_deep_sleep_wake_stub_fn_t","@brief Function type for stub to run on wake from sleep."],["esp_deepsleep_gpio_wake_up_mode_t",""],["esp_efuse_block_t","@brief Type of eFuse blocks ESP32C3"],["esp_efuse_coding_scheme_t","@brief Type of coding scheme"],["esp_efuse_purpose_t","@brief Type of key purpose"],["esp_err_t",""],["esp_eth_handle_t","@brief Handle of Ethernet driver"],["esp_eth_io_cmd_t","@brief Command list for ioctl API"],["esp_eth_mac_t","@brief Ethernet MAC"],["esp_eth_mediator_t","@brief Ethernet mediator"],["esp_eth_phy_t","@brief Ethernet PHY"],["esp_eth_state_t","@brief Ethernet driver state"],["esp_event_base_t",""],["esp_event_handler_instance_t",""],["esp_event_handler_t",""],["esp_event_loop_handle_t",""],["esp_flash_io_mode_t","@brief Mode used for reading from SPI flash"],["esp_flash_speed_t","@brief SPI flash clock speed values, always refer to them by the enum rather than the actual value (more speed may be appended into the list)."],["esp_hmac_md5_t","@brief HMAC-MD5 over data buffer (RFC 2104)’"],["esp_hmac_md5_vector_t","@brief HMAC-MD5 over data vector (RFC 2104)"],["esp_hmac_sha1_t","@brief HMAC-SHA1 over data buffer (RFC 2104)"],["esp_hmac_sha1_vector_t","@brief HMAC-SHA1 over data vector (RFC 2104)"],["esp_hmac_sha256_vector_t","@brief The SHA256 callback function when do WPS connect."],["esp_http_client_auth_type_t","@brief HTTP Authentication type"],["esp_http_client_event_handle_t",""],["esp_http_client_event_id_t","@brief   HTTP Client events id"],["esp_http_client_event_t","@brief      HTTP Client events data"],["esp_http_client_handle_t",""],["esp_http_client_method_t","@brief HTTP method"],["esp_http_client_transport_t","@brief      HTTP Client transport"],["esp_image_flash_size_t","@brief Supported SPI flash sizes"],["esp_image_load_mode_t",""],["esp_image_spi_freq_t","@brief SPI flash clock frequency"],["esp_image_spi_mode_t","@brief SPI flash mode, used in esp_image_header_t"],["esp_interface_t",""],["esp_ip4_addr_t",""],["esp_ip6_addr_t",""],["esp_ip6_addr_type_t",""],["esp_ip_addr_t",""],["esp_ipc_func_t","@cond"],["esp_line_endings_t","@brief Line ending settings"],["esp_log_level_t","@brief Log level"],["esp_mac_type_t",""],["esp_md5_vector_t","@brief MD5 hash for data vector"],["esp_mqtt_client_handle_t",""],["esp_mqtt_connect_return_code_t","MQTT connection error codes propagated via ERROR event"],["esp_mqtt_error_codes_t","@brief MQTT error code structure to be passed as a contextual information into ERROR event"],["esp_mqtt_error_type_t","MQTT connection error codes propagated via ERROR event"],["esp_mqtt_event_handle_t",""],["esp_mqtt_event_id_t","@brief MQTT event types."],["esp_mqtt_protocol_ver_t","MQTT protocol version used for connection"],["esp_mqtt_transport_t",""],["esp_netif_config_t","@brief  Generic esp_netif configuration"],["esp_netif_dhcp_option_id_t","@brief Supported options for DHCP client or DHCP server"],["esp_netif_dhcp_option_mode_t","@brief Mode for DHCP client or DHCP server option functions"],["esp_netif_dhcp_status_t","@brief Status of DHCP client or DHCP server"],["esp_netif_dns_type_t","@brief Type of DNS server"],["esp_netif_driver_base_t",""],["esp_netif_driver_ifconfig_t","@brief  Specific IO driver configuration"],["esp_netif_flags",""],["esp_netif_flags_t",""],["esp_netif_inherent_config_t",""],["esp_netif_iodriver_handle","@brief  IO driver handle type"],["esp_netif_ip_event_type",""],["esp_netif_ip_event_type_t",""],["esp_netif_netstack_config_t","@brief  Specific L3 network stack configuration"],["esp_netif_receive_t","@brief  ESP-NETIF Receive function type"],["esp_netif_t",""],["esp_now_peer_info_t","@brief ESPNOW peer information parameters."],["esp_now_peer_num_t","@brief Number of ESPNOW peers which exist currently."],["esp_now_recv_cb_t","@brief     Callback function of receiving ESPNOW data @param     mac_addr peer MAC address @param     data received data @param     data_len length of received data"],["esp_now_send_cb_t","@brief     Callback function of sending ESPNOW data @param     mac_addr peer MAC address @param     status status of sending ESPNOW data (succeed or fail)"],["esp_now_send_status_t","@brief Status of sending ESPNOW data ."],["esp_omac1_aes_128_t","@brief One-Key CBC MAC (OMAC1) hash with AES-128 for MIC computation"],["esp_ota_handle_t","@brief Opaque handle for an application OTA update"],["esp_ota_img_states_t","OTA_DATA states for checking operability of the app."],["esp_partition_iterator_t","@brief Opaque partition iterator type"],["esp_partition_subtype_t","@brief Partition subtype"],["esp_partition_type_t","@brief Partition type"],["esp_pbkdf2_sha1_t","@brief SHA1-based key derivation function (PBKDF2) for IEEE 802.11i"],["esp_ping_handle_t","@brief Type of “ping” session handle"],["esp_ping_profile_t","@brief Profile of ping session"],["esp_pm_lock_handle_t","@brief Opaque handle to the power management lock"],["esp_pm_lock_type_t","@brief Power management constraints"],["esp_rc4_skip_t","@brief XOR RC4 stream to given data with skip-stream-start"],["esp_reset_reason_t","@brief Reset reasons"],["esp_sha1_prf_t","@brief SHA1-based Pseudo-Random Function (PRF) (IEEE 802.11i, 8.5.1.1)"],["esp_sha1_vector_t","@brief SHA-1 hash for data vector"],["esp_sha256_prf_t","@brief The AES callback function when do STA connect."],["esp_sleep_ext1_wakeup_mode_t","@brief Logic function used for EXT1 wakeup mode."],["esp_sleep_pd_domain_t","@brief Power domains which can be powered down in sleep mode"],["esp_sleep_pd_option_t","@brief Power down options"],["esp_sleep_source_t","@brief Sleep wakeup cause"],["esp_sleep_wakeup_cause_t","@brief Sleep wakeup cause"],["esp_timer_cb_t","@brief Timer callback function type @param arg pointer to opaque user-specific data"],["esp_timer_dispatch_t","@brief Method for dispatching timer callback"],["esp_timer_handle_t","@brief Opaque type representing a single esp_timer"],["esp_tls_cfg_t","@brief      ESP-TLS configuration parameters"],["esp_tls_conn_state","@brief ESP-TLS Connection State"],["esp_tls_conn_state_t","@brief ESP-TLS Connection State"],["esp_tls_error_handle_t",""],["esp_tls_error_type_t","Definition of different types/sources of error codes reported from different components"],["esp_tls_last_error_t","@brief Error structure containing relevant errors in case tls error occurred"],["esp_tls_role",""],["esp_tls_role_t",""],["esp_tls_t","@brief      ESP-TLS Connection Handle"],["esp_vendor_ie_cb_t","@brief     Function signature for received Vendor-Specific Information Element callback. @param     ctx Context argument, as passed to esp_wifi_set_vendor_ie_cb() when registering callback. @param     type Information element type, based on frame type received. @param     sa Source 802.11 address. @param     vnd_ie Pointer to the vendor specific element data received. @param     rssi Received signal strength indication."],["esp_vfs_fat_sdmmc_mount_config_t","@brief Configuration arguments for esp_vfs_fat_sdmmc_mount and esp_vfs_fat_spiflash_mount functions"],["esp_vfs_id_t",""],["essl_handle_t","Handle of an ESSL device"],["eth_duplex_t","@brief Ethernet duplex mode"],["eth_event_t","@brief Ethernet event declarations"],["eth_link_t","@brief Ethernet link status"],["eth_speed_t","@brief Ethernet speed"],["ets_idle_cb_t",""],["ets_isr_t","@addtogroup ets_intr_apis @{"],["ets_status_t","@addtogroup ets_apis @{"],["fd_mask",""],["flags",""],["fpos_t",""],["fsblkcnt_t",""],["fsfilcnt_t",""],["gid_t",""],["gpio_dev_t",""],["gpio_drive_cap_t",""],["gpio_int_type_t",""],["gpio_intr_handler_fn_t",""],["gpio_isr_handle_t",""],["gpio_isr_t",""],["gpio_mode_t","@endcond"],["gpio_num_t",""],["gpio_port_t",""],["gpio_pull_mode_t",""],["gpio_pulldown_t",""],["gpio_pullup_t",""],["gpio_sd_dev_t",""],["http_cb",""],["http_data_cb",""],["http_errno",""],["http_event_handle_cb",""],["http_method",""],["http_parser_type",""],["http_parser_url_fields",""],["httpd_close_func_t","@brief  Function prototype for closing a session."],["httpd_config_t","@brief   HTTP Server Configuration Structure"],["httpd_err_code_t","@brief Error codes sent as HTTP response in case of errors encountered during processing of an HTTP request"],["httpd_err_handler_func_t","@brief  Function prototype for HTTP error handling."],["httpd_free_ctx_fn_t","@brief  Prototype for freeing context data (if any) @param[in] ctx   object to free"],["httpd_handle_t","@brief   HTTP Server Instance Handle"],["httpd_method_t",""],["httpd_open_func_t","@brief  Function prototype for opening a session."],["httpd_pending_func_t","@brief  Prototype for HTTPDs low-level “get pending bytes” function"],["httpd_recv_func_t","@brief  Prototype for HTTPDs low-level recv function"],["httpd_req_t","@brief HTTP Request Data Structure"],["httpd_send_func_t","@brief  Prototype for HTTPDs low-level send function"],["httpd_uri_match_func_t","@brief  Function prototype for URI matching."],["httpd_uri_t","@brief Structure for URI handler"],["httpd_work_fn_t","@brief   Prototype of the HTTPD work function Please refer to httpd_queue_work() for more details. @param[in] arg   The arguments for this work function"],["i2c_ack_type_t",""],["i2c_addr_mode_t",""],["i2c_cmd_handle_t",""],["i2c_mode_t",""],["i2c_port_t","@brief I2C port number, can be I2C_NUM_0 ~ (I2C_NUM_MAX-1)."],["i2c_rw_t",""],["i2c_sclk_t","@brief I2C clock source, sorting from smallest to largest, place them in order. This can be expanded in the future use."],["i2c_trans_mode_t",""],["i2s_bits_per_sample_t","@brief I2S bit width per sample."],["i2s_channel_fmt_t","@brief I2S channel format type"],["i2s_channel_t","@brief I2S channel."],["i2s_clock_src_t","@brief I2S source clock"],["i2s_comm_format_t","@brief I2S communication standard format"],["i2s_dac_mode_t","@brief I2S DAC mode for i2s_set_dac_mode."],["i2s_dev_t",""],["i2s_event_type_t","@brief I2S event types"],["i2s_isr_handle_t",""],["i2s_mode_t","@brief I2S Mode, defaut is I2S_MODE_MASTER | I2S_MODE_TX"],["i2s_port_t","@brief I2S port number, the max port number is (I2S_NUM_MAX -1)."],["id_t",""],["in_addr_t",""],["in_port_t",""],["ino_t",""],["int_fast16_t",""],["int_fast32_t",""],["int_fast64_t",""],["int_fast8_t",""],["int_least16_t",""],["int_least32_t",""],["int_least64_t",""],["int_least8_t",""],["intmax_t",""],["intr_handle_t","Handle to an interrupt handler"],["intr_handler_t","Function prototype for interrupt handler function"],["ip4_addr_t","This is the aligned version of ip4_addr_t, used as local variable, on the stack, etc."],["ip6_addr_t","This is the aligned version of ip6_addr_t, used as local variable, on the stack, etc."],["ip_addr_t","@ingroup ipaddr A union struct for both IP version’s addresses. ATTENTION: watch out for its size when adding IPv6 address scope!"],["ip_event_t","IP event declarations"],["key_t",""],["ledc_channel_t",""],["ledc_clk_cfg_t",""],["ledc_clk_src_t",""],["ledc_duty_direction_t",""],["ledc_fade_mode_t",""],["ledc_intr_type_t",""],["ledc_isr_handle_t",""],["ledc_mode_t",""],["ledc_slow_clk_sel_t",""],["ledc_timer_bit_t",""],["ledc_timer_t",""],["linenoiseCompletionCallback",""],["linenoiseFreeHintsCallback",""],["linenoiseHintsCallback",""],["lldesc_chain_t",""],["lldesc_t",""],["locale_t",""],["lwip_iana_hwtype","@ingroup iana Hardware types"],["lwip_iana_port_number","@ingroup iana Port numbers https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt"],["lwip_internal_netif_client_data_index","@}"],["lwip_ip_addr_type","@ingroup ipaddr IP address types for use in ip_addr_t.type member. @see tcp_new_ip_type(), udp_new_ip_type(), raw_new_ip_type()."],["lwip_ipv6_scope_type","Symbolic constants for the ‘type’ parameters in some of the macros. These exist for efficiency only, allowing the macros to avoid certain tests when the address is known not to be of a certain type. Dead code elimination will do the rest. IP6_MULTICAST is supported but currently not optimized. @see ip6_addr_has_scope, ip6_addr_assign_zone, ip6_addr_lacks_zone."],["mbedtls_aes_context","\\brief          AES context structure"],["mbedtls_aes_xts_context","\\brief The AES XTS context-type definition."],["mbedtls_cipher_id_t","\\brief     Supported cipher types."],["mbedtls_cipher_mode_t","Supported cipher modes."],["mbedtls_cipher_padding_t","Supported cipher padding types."],["mbedtls_cipher_type_t","\\brief     Supported {cipher type, cipher mode} pairs."],["mbedtls_ecdh_side","Defines the source of the imported EC key."],["mbedtls_ecdsa_context","\\brief    The ECP key-pair structure."],["mbedtls_ecdsa_restart_ctx",""],["mbedtls_ecp_group_id","Domain-parameter identifiers: curve, subgroup, and generator."],["mbedtls_ecp_restart_ctx",""],["mbedtls_entropy_f_source_ptr","\\brief           Entropy poll callback pointer"],["mbedtls_iso_c_forbids_empty_translation_units",""],["mbedtls_key_exchange_type_t",""],["mbedtls_md_type_t","\\brief     Supported message digests."],["mbedtls_mpi_gen_prime_flag_t","\\brief Flags for mbedtls_mpi_gen_prime()"],["mbedtls_mpi_sint",""],["mbedtls_mpi_uint",""],["mbedtls_operation_t","Type of operation."],["mbedtls_pk_debug_type","\\brief           Types for interfacing with the debug module"],["mbedtls_pk_restart_ctx",""],["mbedtls_pk_rsa_alt_decrypt_func","\\brief           Types for RSA-alt abstraction"],["mbedtls_pk_rsa_alt_key_len_func",""],["mbedtls_pk_rsa_alt_sign_func",""],["mbedtls_pk_type_t","\\brief          Public key types"],["mbedtls_ssl_cookie_check_t","\\brief          Callback type: verify a cookie"],["mbedtls_ssl_cookie_write_t","\\brief          Callback type: generate a cookie"],["mbedtls_ssl_export_keys_t","\\brief           Callback type: Export key block and master secret"],["mbedtls_ssl_get_timer_t","\\brief          Callback type: get status of timers/delays"],["mbedtls_ssl_recv_t","\\brief          Callback type: receive data from the network."],["mbedtls_ssl_recv_timeout_t","\\brief          Callback type: receive data from the network, with timeout"],["mbedtls_ssl_send_t","\\brief          Callback type: send data on the network."],["mbedtls_ssl_set_timer_t","\\brief          Callback type: set a pair of timers/delays to watch"],["mbedtls_ssl_states",""],["mbedtls_ssl_ticket_parse_t","\\brief           Callback type: parse and load session ticket"],["mbedtls_ssl_ticket_write_t","\\brief           Callback type: generate and write session ticket"],["mbedtls_t_udbl",""],["mbedtls_time_t",""],["mbedtls_x509_bitstring","Container for ASN1 bit strings."],["mbedtls_x509_buf","Type-length-value structure that allows for ASN1 using DER."],["mbedtls_x509_crt_restart_ctx",""],["mbedtls_x509_name","Container for a sequence or list of ‘named’ ASN.1 data items"],["mbedtls_x509_sequence","Container for a sequence of ASN.1 items"],["mdns_if_internal",""],["mdns_if_t",""],["mdns_ip_addr_t","@brief   mDNS query linked list IP item"],["mdns_ip_protocol_t","@brief   mDNS enum to specify the ip_protocol type"],["mdns_result_t","@brief   mDNS query result structure"],["mem_ptr_t",""],["mem_size_t",""],["memp_t","Create the list of all memory pools managed by memp. MEMP_MAX represents a NULL pool at the end"],["mode_t",""],["mqtt_event_callback_t",""],["multi_heap_handle_t","@brief Opaque handle to a registered heap"],["netif_addr_idx_t",""],["netif_ext_callback_fn","@ingroup netif Function used for extended netif status callbacks Note: When parsing reason argument, keep in mind that more reasons may be added in the future! @param netif netif that is affected by change @param reason change reason @param args depends on reason, see reason description"],["netif_igmp_mac_filter_fn","Function prototype for netif igmp_mac_filter functions"],["netif_init_fn","Function prototype for netif init functions. Set up flags and output/linkoutput callback functions in this function."],["netif_input_fn","Function prototype for netif->input functions. This function is saved as ‘input’ callback function in the netif struct. Call it when a packet has been received."],["netif_linkoutput_fn","Function prototype for netif->linkoutput functions. Only used for ethernet netifs. This function is called by ARP when a packet shall be sent."],["netif_mac_filter_action","MAC Filter Actions, these are passed to a netif’s igmp_mac_filter or mld_mac_filter callback function."],["netif_mld_mac_filter_fn","Function prototype for netif mld_mac_filter functions"],["netif_nsc_reason_t","@ingroup netif Extended netif status callback (NSC) reasons flags. May be extended in the future!"],["netif_output_fn","Function prototype for netif->output functions. Called by lwIP when a packet shall be sent. For ethernet netif, set this to ‘etharp_output’ and set ‘linkoutput’."],["netif_output_ip6_fn","Function prototype for netif->output_ip6 functions. Called by lwIP when a packet shall be sent. For ethernet netif, set this to ‘ethip6_output’ and set ‘linkoutput’."],["netif_status_callback_fn","Function prototype for netif status- or link-callback functions."],["nfds_t",""],["nlink_t",""],["nvs_handle",""],["nvs_handle_t","Opaque pointer type representing non-volatile storage handle"],["nvs_iterator_t","Opaque pointer type representing iterator to nvs entries"],["nvs_open_mode","@brief Mode of opening the non-volatile storage"],["nvs_open_mode_t","@brief Mode of opening the non-volatile storage"],["nvs_type_t","@brief Types of variables"],["off_t",""],["panic_exception_t",""],["panic_info_dump_fn_t",""],["pbuf_free_custom_fn","Prototype for a function to free a custom pbuf"],["pbuf_layer","@ingroup pbuf Enumeration of pbuf layers"],["pbuf_type","@ingroup pbuf Enumeration of pbuf types"],["periph_interrput_t",""],["periph_module_t",""],["pid_t",""],["protocomm_ble_config_t","@brief   Config parameters for protocomm BLE service"],["protocomm_ble_name_uuid_t","@brief   This structure maps handler required by protocomm layer to UUIDs which are used to uniquely identify BLE characteristics from a smartphone or a similar client device."],["protocomm_req_handler_t","@brief Function prototype for protocomm endpoint handler"],["protocomm_security_handle_t",""],["protocomm_security_pop_t","@brief   Proof Of Possession for authenticating a secure session"],["protocomm_security_t","@brief   Protocomm security object structure."],["protocomm_t","@brief   This structure corresponds to a unique instance of protocomm returned when the API `protocomm_new()` is called. The remaining Protocomm APIs require this object as the first parameter."],["psk_hint_key_t","@brief ESP-TLS preshared key and hint structure"],["pthread_cond_t",""],["pthread_key_t",""],["pthread_mutex_t",""],["pthread_t",""],["register_t",""],["rmt_carrier_level_t","@brief RMT Carrier Level"],["rmt_channel_status_t","@brief RMT Channel Status"],["rmt_channel_t","@brief RMT channel ID"],["rmt_data_mode_t","@brief RMT Data Mode"],["rmt_dev_t",""],["rmt_idle_level_t","@brief RMT Idle Level"],["rmt_isr_handle_t","@brief RMT interrupt handle"],["rmt_mem_owner_t","@brief RMT Internal Memory Owner"],["rmt_mem_t",""],["rmt_mode_t","@brief RMT Channel Working Mode (TX or RX)"],["rmt_source_clk_t","@brief Clock Source of RMT Channel"],["rmt_tx_end_fn_t","@brief Type of RMT Tx End callback function"],["rtc_cal_sel_t","@brief Clock source to be calibrated using rtc_clk_cal function"],["rtc_cntl_dev_t",""],["rtc_cpu_freq_config_t","@brief CPU clock configuration structure"],["rtc_cpu_freq_src_t","@brief CPU clock source"],["rtc_cpu_freq_t","@brief CPU frequency values"],["rtc_fast_freq_t","@brief RTC FAST_CLK frequency values"],["rtc_gpio_mode_t","RTCIO output/input mode type."],["rtc_slow_freq_t","@brief RTC SLOW_CLK frequency values"],["rtc_xtal_freq_t","@brief Possible main XTAL frequency values."],["s16_t",""],["s32_t",""],["s64_t",""],["s8_t",""],["sa_family_t",""],["sample_to_rmt_t","@brief User callback function to convert uint8_t type data to rmt format(rmt_item32_t)."],["sbintime_t",""],["sdmmc_response_t","SD/MMC command response buffer"],["sdspi_dev_handle_t","Handle representing an SD SPI device"],["shutdown_handler_t","Shutdown handler type"],["sig_atomic_t",""],["sig_t",""],["sigmadelta_channel_t","@brief Sigma-delta channel list"],["sigmadelta_port_t","@brief SIGMADELTA port number, the max port number is (SIGMADELTA_NUM_MAX -1)."],["sigset_t",""],["size_t",""],["slave_transaction_cb_t",""],["sntp_sync_mode_t","SNTP time update mode"],["sntp_sync_status_t","SNTP sync status"],["sntp_sync_time_cb_t","@brief SNTP callback function for notifying about time sync event"],["socklen_t",""],["speed_t",""],["spi_common_dma_t","@brief SPI DMA channels"],["spi_dev_t",""],["spi_device_handle_t",""],["spi_dma_chan_t","@brief SPI DMA channels"],["spi_event_t","SPI Events"],["spi_flash_guard_end_func_t","@brief SPI flash critical section exit function."],["spi_flash_guard_start_func_t","@brief SPI flash critical section enter function."],["spi_flash_host_driver_t","Host driver configuration and context structure."],["spi_flash_is_safe_write_address_t","@brief Function to protect SPI flash critical regions corruption."],["spi_flash_mmap_handle_t","@brief Opaque handle for memory region obtained from spi_flash_mmap."],["spi_flash_mmap_memory_t","@brief Enumeration which specifies memory space requested in an mmap call"],["spi_flash_op_lock_func_t","@brief SPI flash operation lock function."],["spi_flash_op_unlock_func_t","@brief SPI flash operation unlock function."],["spi_flash_os_yield_t","@brief Function to yield to the OS during erase operation."],["spi_flash_wrap_mode_t",""],["spi_host_device_t","@brief Enum with the three SPI peripherals that are software-accessible in it"],["spi_mem_dev_t",""],["ssize_t",""],["stack_t",""],["suseconds_t",""],["sys_mbox_t",""],["sys_mutex_t",""],["sys_prot_t",""],["sys_sem_t",""],["sys_thread_t",""],["system_event_ap_probe_req_rx_t","Argument structure for WIFI_EVENT_AP_PROBEREQRECVED event"],["system_event_ap_staconnected_t","Argument structure for WIFI_EVENT_AP_STACONNECTED event"],["system_event_ap_stadisconnected_t","Argument structure for WIFI_EVENT_AP_STADISCONNECTED event"],["system_event_ap_staipassigned_t","Event structure for IP_EVENT_AP_STAIPASSIGNED event"],["system_event_cb_t","@brief  Application specified event callback function"],["system_event_ftm_report_t","Argument structure for WIFI_EVENT_FTM_REPORT event"],["system_event_got_ip6_t","Event structure for IP_EVENT_GOT_IP6 event"],["system_event_handler_t","Event handler function type"],["system_event_id_t","System event types enumeration"],["system_event_sta_authmode_change_t","Argument structure for WIFI_EVENT_STA_AUTHMODE_CHANGE event"],["system_event_sta_connected_t","Argument structure for WIFI_EVENT_STA_CONNECTED event"],["system_event_sta_disconnected_t","Argument structure for WIFI_EVENT_STA_DISCONNECTED event"],["system_event_sta_got_ip_t","Argument structure of  event"],["system_event_sta_scan_done_t","Argument structure for WIFI_EVENT_SCAN_DONE event"],["system_event_sta_wps_er_pin_t","Argument structure for WIFI_EVENT_STA_WPS_ER_PIN event"],["system_event_sta_wps_er_success_t","Argument structure for WIFI_EVENT_STA_WPS_ER_SUCCESS event"],["system_event_sta_wps_fail_reason_t","Argument structure for WIFI_EVENT_STA_WPS_ER_FAILED event"],["tcflag_t",""],["tcpip_adapter_dhcp_option_id_t","@brief Supported options for DHCP client or DHCP server"],["tcpip_adapter_dhcp_option_mode_t","@brief Mode for DHCP client or DHCP server option functions"],["tcpip_adapter_dhcp_status_t","@brief Status of DHCP client or DHCP server"],["tcpip_adapter_dhcps_lease_t",""],["tcpip_adapter_dns_info_t","@brief DNS server info"],["tcpip_adapter_dns_type_t","@brief Type of DNS server"],["tcpip_adapter_if_t",""],["tcpip_adapter_sta_info_t","@brief station list info element"],["tcpip_adapter_sta_list_t","@brief station list structure"],["time_t",""],["timer_alarm_t","@brief Decides whether to enable alarm mode"],["timer_autoreload_t","@brief Select if Alarm needs to be loaded by software or automatically reload by hardware."],["timer_count_dir_t","@brief Decides the direction of counter"],["timer_group_t","@brief Selects a Timer-Group out of 2 available groups"],["timer_idx_t","@brief Select a hardware timer from timer groups"],["timer_intr_mode_t","@brief Select interrupt type if running in alarm mode."],["timer_intr_t","@brief Interrupt types of the timer."],["timer_isr_handle_t","@brief Interrupt handle, used in order to free the isr after use. Aliases to an int handle for now."],["timer_isr_t","@brief Interrupt handle callback function. User need to retrun a bool value in callback."],["timer_src_clk_t","@brief Select timer source clock."],["timer_start_t","@brief Decides whether timer is on or paused"],["timer_t",""],["timg_dev_t",""],["tls_keep_alive_cfg_t","@brief Keep alive parameters structure"],["touch_cnt_slope_t","Touch sensor charge/discharge speed"],["touch_filter_config_t","Touch sensor filter configuration"],["touch_filter_mode_t","@brief Touch channel IIR filter coefficient configuration. @note On ESP32S2. There is an error in the IIR calculation. The magnitude of the error is twice the filter coefficient. So please select a smaller filter coefficient on the basis of meeting the filtering requirements. Recommended filter coefficient selection `IIR_16`."],["touch_fsm_mode_t","Touch sensor FSM mode"],["touch_high_volt_t","Touch sensor high reference voltage"],["touch_low_volt_t","Touch sensor low reference voltage"],["touch_pad_conn_type_t","Touch channel idle state configuration"],["touch_pad_denoise_cap_t",""],["touch_pad_denoise_grade_t",""],["touch_pad_denoise_t","Touch sensor denoise configuration"],["touch_pad_intr_mask_t",""],["touch_pad_shield_driver_t","Touch sensor shield channel drive capability level"],["touch_pad_t","Touch pad channel"],["touch_pad_waterproof_t","Touch sensor waterproof configuration"],["touch_smooth_mode_t","@brief Level of filter applied on the original data against large noise interference. @note On ESP32S2. There is an error in the IIR calculation. The magnitude of the error is twice the filter coefficient. So please select a smaller filter coefficient on the basis of meeting the filtering requirements. Recommended filter coefficient selection `IIR_2`."],["touch_tie_opt_t","Touch sensor initial charge level"],["touch_trigger_mode_t","ESP32 Only"],["touch_trigger_src_t",""],["touch_volt_atten_t","Touch sensor high reference voltage attenuation"],["transaction_cb_t",""],["twai_mode_t","@brief   TWAI Controller operating modes"],["twai_state_t","@brief   TWAI driver states"],["tx_ampdu_entry_t",""],["u16_t",""],["u32_t",""],["u64_t",""],["u8_t",""],["u_char",""],["u_int",""],["u_int16_t",""],["u_int32_t",""],["u_int64_t",""],["u_int8_t",""],["u_long",""],["u_register_t",""],["u_short",""],["uart_event_type_t","@brief UART event types used in the ring buffer"],["uart_hw_flowcontrol_t","@brief UART hardware flow control modes"],["uart_isr_handle_t",""],["uart_mode_t","@brief UART mode selection"],["uart_parity_t","@brief UART parity constants"],["uart_port_t","@brief UART port number, can be UART_NUM_0 ~ (UART_NUM_MAX -1)."],["uart_sclk_t","@brief UART source clock"],["uart_select_notif_callback_t",""],["uart_select_notif_t",""],["uart_signal_inv_t","@brief UART signal bit map"],["uart_stop_bits_t","@brief UART stop bits number"],["uart_word_length_t","@brief UART word length constants"],["uid_t",""],["uint",""],["uint_fast16_t",""],["uint_fast32_t",""],["uint_fast64_t",""],["uint_fast8_t",""],["uint_least16_t",""],["uint_least32_t",""],["uint_least64_t",""],["uint_least8_t",""],["uintmax_t",""],["ulong",""],["useconds_t",""],["ushort",""],["va_list",""],["vprintf_like_t",""],["watchpoint_trigger_t",""],["wchar_t",""],["wifi_action_rx_cb_t","@brief     The Rx callback function of Action Tx operations"],["wifi_ant_mode_t","@brief WiFi antenna mode"],["wifi_ant_t","@brief WiFi antenna"],["wifi_auth_mode_t",""],["wifi_bandwidth_t",""],["wifi_cipher_type_t",""],["wifi_country_policy_t",""],["wifi_csi_cb_t","@brief The RX callback function of Channel State Information(CSI)  data."],["wifi_err_reason_t",""],["wifi_event_sta_wps_fail_reason_t","Argument structure for WIFI_EVENT_STA_WPS_ER_FAILED event"],["wifi_event_t","WiFi event declarations"],["wifi_ftm_status_t","@brief FTM operation status types"],["wifi_interface_t",""],["wifi_mode_t",""],["wifi_netif_driver_t","@brief Forward declaration of WiFi interface handle"],["wifi_phy_rate_t","@brief WiFi PHY rate encodings"],["wifi_promiscuous_cb_t","@brief The RX callback function in the promiscuous mode. Each time a packet is received, the callback function will be called."],["wifi_promiscuous_pkt_type_t","@brief Promiscuous frame type"],["wifi_prov_cb_event_t","@brief   Events generated by manager"],["wifi_prov_cb_func_t",""],["wifi_prov_config_handlers_t","@brief   Internal handlers for receiving and responding to protocomm requests from master"],["wifi_prov_ctx_t","@brief   Type of context data passed to each get/set/apply handler function set in `wifi_prov_config_handlers` structure."],["wifi_prov_scheme_t","@brief   Structure for specifying the provisioning scheme to be followed by the manager"],["wifi_prov_security","@brief   Security modes supported by the Provisioning Manager."],["wifi_prov_security_t","@brief   Security modes supported by the Provisioning Manager."],["wifi_prov_sta_fail_reason_t","@brief   WiFi STA connection fail reason"],["wifi_prov_sta_state_t","@brief   WiFi STA status for conveying back to the provisioning master"],["wifi_ps_type_t",""],["wifi_scan_method_t",""],["wifi_scan_type_t",""],["wifi_second_chan_t",""],["wifi_sort_method_t",""],["wifi_storage_t",""],["wifi_vendor_ie_id_t","@brief     Vendor Information Element index"],["wifi_vendor_ie_type_t","@brief     Vendor Information Element type"],["wint_t",""],["wl_handle_t","@brief wear levelling handle"]],"union":[["_ip_addr__bindgen_ty_1",""],["_mbstate_t__bindgen_ty_1",""],["adc_digi_output_data_t__bindgen_ty_1",""],["adc_digi_pattern_table_t__bindgen_ty_1",""],["esp_tls_cfg__bindgen_ty_1",""],["esp_tls_cfg__bindgen_ty_2",""],["esp_tls_cfg__bindgen_ty_3",""],["esp_tls_cfg__bindgen_ty_4",""],["esp_tls_cfg__bindgen_ty_5",""],["esp_tls_cfg__bindgen_ty_6",""],["esp_vfs_t__bindgen_ty_1",""],["esp_vfs_t__bindgen_ty_10",""],["esp_vfs_t__bindgen_ty_11",""],["esp_vfs_t__bindgen_ty_12",""],["esp_vfs_t__bindgen_ty_13",""],["esp_vfs_t__bindgen_ty_14",""],["esp_vfs_t__bindgen_ty_15",""],["esp_vfs_t__bindgen_ty_16",""],["esp_vfs_t__bindgen_ty_17",""],["esp_vfs_t__bindgen_ty_18",""],["esp_vfs_t__bindgen_ty_19",""],["esp_vfs_t__bindgen_ty_2",""],["esp_vfs_t__bindgen_ty_20",""],["esp_vfs_t__bindgen_ty_21",""],["esp_vfs_t__bindgen_ty_22",""],["esp_vfs_t__bindgen_ty_23",""],["esp_vfs_t__bindgen_ty_24",""],["esp_vfs_t__bindgen_ty_25",""],["esp_vfs_t__bindgen_ty_26",""],["esp_vfs_t__bindgen_ty_27",""],["esp_vfs_t__bindgen_ty_28",""],["esp_vfs_t__bindgen_ty_29",""],["esp_vfs_t__bindgen_ty_3",""],["esp_vfs_t__bindgen_ty_30",""],["esp_vfs_t__bindgen_ty_31",""],["esp_vfs_t__bindgen_ty_32",""],["esp_vfs_t__bindgen_ty_33",""],["esp_vfs_t__bindgen_ty_4",""],["esp_vfs_t__bindgen_ty_5",""],["esp_vfs_t__bindgen_ty_6",""],["esp_vfs_t__bindgen_ty_7",""],["esp_vfs_t__bindgen_ty_8",""],["esp_vfs_t__bindgen_ty_9",""],["gpio_dev_s__bindgen_ty_1",""],["gpio_dev_s__bindgen_ty_10",""],["gpio_dev_s__bindgen_ty_11",""],["gpio_dev_s__bindgen_ty_12",""],["gpio_dev_s__bindgen_ty_13",""],["gpio_dev_s__bindgen_ty_14",""],["gpio_dev_s__bindgen_ty_15",""],["gpio_dev_s__bindgen_ty_16",""],["gpio_dev_s__bindgen_ty_17",""],["gpio_dev_s__bindgen_ty_18",""],["gpio_dev_s__bindgen_ty_19",""],["gpio_dev_s__bindgen_ty_2",""],["gpio_dev_s__bindgen_ty_20",""],["gpio_dev_s__bindgen_ty_21",""],["gpio_dev_s__bindgen_ty_3",""],["gpio_dev_s__bindgen_ty_4",""],["gpio_dev_s__bindgen_ty_5",""],["gpio_dev_s__bindgen_ty_6",""],["gpio_dev_s__bindgen_ty_7",""],["gpio_dev_s__bindgen_ty_8",""],["gpio_dev_s__bindgen_ty_9",""],["gpio_sd_dev_s__bindgen_ty_1",""],["gpio_sd_dev_s__bindgen_ty_2",""],["gpio_sd_dev_s__bindgen_ty_3",""],["gpio_sd_dev_s__bindgen_ty_4",""],["i2c_config_t__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_1",""],["i2s_dev_s__bindgen_ty_10",""],["i2s_dev_s__bindgen_ty_11",""],["i2s_dev_s__bindgen_ty_12",""],["i2s_dev_s__bindgen_ty_13",""],["i2s_dev_s__bindgen_ty_14",""],["i2s_dev_s__bindgen_ty_15",""],["i2s_dev_s__bindgen_ty_16",""],["i2s_dev_s__bindgen_ty_17",""],["i2s_dev_s__bindgen_ty_18",""],["i2s_dev_s__bindgen_ty_19",""],["i2s_dev_s__bindgen_ty_2",""],["i2s_dev_s__bindgen_ty_20",""],["i2s_dev_s__bindgen_ty_21",""],["i2s_dev_s__bindgen_ty_22",""],["i2s_dev_s__bindgen_ty_3",""],["i2s_dev_s__bindgen_ty_4",""],["i2s_dev_s__bindgen_ty_5",""],["i2s_dev_s__bindgen_ty_6",""],["i2s_dev_s__bindgen_ty_7",""],["i2s_dev_s__bindgen_ty_8",""],["i2s_dev_s__bindgen_ty_9",""],["in6_addr__bindgen_ty_1",""],["ip_addr__bindgen_ty_1",""],["ledc_timer_config_t__bindgen_ty_1",""],["lldesc_s__bindgen_ty_1",""],["mbedtls_ssl_premaster_secret",""],["netif_ext_callback_args_t","@ingroup netif Argument supplied to netif_ext_callback_fn."],["protocomm_httpd_config_data_t","Protocomm HTTPD Configuration Data"],["rmt_config_t__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_10",""],["rmt_dev_s__bindgen_ty_11",""],["rmt_dev_s__bindgen_ty_12",""],["rmt_dev_s__bindgen_ty_13",""],["rmt_dev_s__bindgen_ty_14",""],["rmt_dev_s__bindgen_ty_15",""],["rmt_dev_s__bindgen_ty_16",""],["rmt_dev_s__bindgen_ty_2__bindgen_ty_1",""],["rmt_dev_s__bindgen_ty_2__bindgen_ty_2",""],["rmt_dev_s__bindgen_ty_3",""],["rmt_dev_s__bindgen_ty_4",""],["rmt_dev_s__bindgen_ty_5",""],["rmt_dev_s__bindgen_ty_6",""],["rmt_dev_s__bindgen_ty_7",""],["rmt_dev_s__bindgen_ty_8",""],["rmt_dev_s__bindgen_ty_9",""],["rmt_item32_t__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_1",""],["rtc_cntl_dev_s__bindgen_ty_10",""],["rtc_cntl_dev_s__bindgen_ty_11",""],["rtc_cntl_dev_s__bindgen_ty_12",""],["rtc_cntl_dev_s__bindgen_ty_13",""],["rtc_cntl_dev_s__bindgen_ty_14",""],["rtc_cntl_dev_s__bindgen_ty_15",""],["rtc_cntl_dev_s__bindgen_ty_16",""],["rtc_cntl_dev_s__bindgen_ty_17",""],["rtc_cntl_dev_s__bindgen_ty_18",""],["rtc_cntl_dev_s__bindgen_ty_19",""],["rtc_cntl_dev_s__bindgen_ty_2",""],["rtc_cntl_dev_s__bindgen_ty_20",""],["rtc_cntl_dev_s__bindgen_ty_21",""],["rtc_cntl_dev_s__bindgen_ty_22",""],["rtc_cntl_dev_s__bindgen_ty_23",""],["rtc_cntl_dev_s__bindgen_ty_24",""],["rtc_cntl_dev_s__bindgen_ty_25",""],["rtc_cntl_dev_s__bindgen_ty_26",""],["rtc_cntl_dev_s__bindgen_ty_27",""],["rtc_cntl_dev_s__bindgen_ty_28",""],["rtc_cntl_dev_s__bindgen_ty_29",""],["rtc_cntl_dev_s__bindgen_ty_3",""],["rtc_cntl_dev_s__bindgen_ty_30",""],["rtc_cntl_dev_s__bindgen_ty_31",""],["rtc_cntl_dev_s__bindgen_ty_32",""],["rtc_cntl_dev_s__bindgen_ty_33",""],["rtc_cntl_dev_s__bindgen_ty_34",""],["rtc_cntl_dev_s__bindgen_ty_35",""],["rtc_cntl_dev_s__bindgen_ty_36",""],["rtc_cntl_dev_s__bindgen_ty_37",""],["rtc_cntl_dev_s__bindgen_ty_38",""],["rtc_cntl_dev_s__bindgen_ty_39",""],["rtc_cntl_dev_s__bindgen_ty_4",""],["rtc_cntl_dev_s__bindgen_ty_40",""],["rtc_cntl_dev_s__bindgen_ty_41",""],["rtc_cntl_dev_s__bindgen_ty_42",""],["rtc_cntl_dev_s__bindgen_ty_43",""],["rtc_cntl_dev_s__bindgen_ty_44",""],["rtc_cntl_dev_s__bindgen_ty_45",""],["rtc_cntl_dev_s__bindgen_ty_46",""],["rtc_cntl_dev_s__bindgen_ty_47",""],["rtc_cntl_dev_s__bindgen_ty_48",""],["rtc_cntl_dev_s__bindgen_ty_49",""],["rtc_cntl_dev_s__bindgen_ty_5",""],["rtc_cntl_dev_s__bindgen_ty_50",""],["rtc_cntl_dev_s__bindgen_ty_51",""],["rtc_cntl_dev_s__bindgen_ty_52",""],["rtc_cntl_dev_s__bindgen_ty_53",""],["rtc_cntl_dev_s__bindgen_ty_54",""],["rtc_cntl_dev_s__bindgen_ty_55",""],["rtc_cntl_dev_s__bindgen_ty_6",""],["rtc_cntl_dev_s__bindgen_ty_7",""],["rtc_cntl_dev_s__bindgen_ty_8",""],["rtc_cntl_dev_s__bindgen_ty_9",""],["sdmmc_card_t__bindgen_ty_1",""],["sdmmc_host_t__bindgen_ty_1",""],["sigval",""],["spi_dev_s__bindgen_ty_1",""],["spi_dev_s__bindgen_ty_10",""],["spi_dev_s__bindgen_ty_11",""],["spi_dev_s__bindgen_ty_12",""],["spi_dev_s__bindgen_ty_13",""],["spi_dev_s__bindgen_ty_14",""],["spi_dev_s__bindgen_ty_15",""],["spi_dev_s__bindgen_ty_16",""],["spi_dev_s__bindgen_ty_17",""],["spi_dev_s__bindgen_ty_18",""],["spi_dev_s__bindgen_ty_19",""],["spi_dev_s__bindgen_ty_2",""],["spi_dev_s__bindgen_ty_20",""],["spi_dev_s__bindgen_ty_3",""],["spi_dev_s__bindgen_ty_4",""],["spi_dev_s__bindgen_ty_5",""],["spi_dev_s__bindgen_ty_6",""],["spi_dev_s__bindgen_ty_7",""],["spi_dev_s__bindgen_ty_8",""],["spi_dev_s__bindgen_ty_9",""],["spi_mem_dev_s__bindgen_ty_1",""],["spi_mem_dev_s__bindgen_ty_10",""],["spi_mem_dev_s__bindgen_ty_11",""],["spi_mem_dev_s__bindgen_ty_12",""],["spi_mem_dev_s__bindgen_ty_13",""],["spi_mem_dev_s__bindgen_ty_14",""],["spi_mem_dev_s__bindgen_ty_15",""],["spi_mem_dev_s__bindgen_ty_16",""],["spi_mem_dev_s__bindgen_ty_17",""],["spi_mem_dev_s__bindgen_ty_18",""],["spi_mem_dev_s__bindgen_ty_19",""],["spi_mem_dev_s__bindgen_ty_2",""],["spi_mem_dev_s__bindgen_ty_20",""],["spi_mem_dev_s__bindgen_ty_21",""],["spi_mem_dev_s__bindgen_ty_22",""],["spi_mem_dev_s__bindgen_ty_23",""],["spi_mem_dev_s__bindgen_ty_24",""],["spi_mem_dev_s__bindgen_ty_25",""],["spi_mem_dev_s__bindgen_ty_26",""],["spi_mem_dev_s__bindgen_ty_27",""],["spi_mem_dev_s__bindgen_ty_28",""],["spi_mem_dev_s__bindgen_ty_29",""],["spi_mem_dev_s__bindgen_ty_3",""],["spi_mem_dev_s__bindgen_ty_4",""],["spi_mem_dev_s__bindgen_ty_5",""],["spi_mem_dev_s__bindgen_ty_6",""],["spi_mem_dev_s__bindgen_ty_7",""],["spi_mem_dev_s__bindgen_ty_8",""],["spi_mem_dev_s__bindgen_ty_9",""],["spi_transaction_t__bindgen_ty_1",""],["spi_transaction_t__bindgen_ty_2",""],["system_event_info_t","Union of all possible system_event argument structures"],["timg_dev_s__bindgen_ty_10",""],["timg_dev_s__bindgen_ty_11",""],["timg_dev_s__bindgen_ty_12",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_1",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_2",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_3",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_4",""],["timg_dev_s__bindgen_ty_1__bindgen_ty_5",""],["timg_dev_s__bindgen_ty_2",""],["timg_dev_s__bindgen_ty_3",""],["timg_dev_s__bindgen_ty_4",""],["timg_dev_s__bindgen_ty_5",""],["timg_dev_s__bindgen_ty_6",""],["timg_dev_s__bindgen_ty_7",""],["timg_dev_s__bindgen_ty_8",""],["timg_dev_s__bindgen_ty_9",""],["twai_message_t__bindgen_ty_1",""],["uart_config_t__bindgen_ty_1",""],["wifi_config_t","@brief Configuration data for ESP32 AP or STA."],["wifi_prov_config_get_data_t__bindgen_ty_1",""],["xSTATIC_QUEUE__bindgen_ty_1",""]]});